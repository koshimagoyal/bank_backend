{"version":3,"sources":["./src/app/miscellaneous-page/miscellaneous-page/miscellaneous-page.component.html","./src/app/miscellaneous-page/miscellaneous-page-routing.module.ts","./src/app/miscellaneous-page/miscellaneous-page.module.ts","./src/app/miscellaneous-page/miscellaneous-page/miscellaneous-page.component.scss","./src/app/miscellaneous-page/miscellaneous-page/miscellaneous-page.component.ts","./src/app/miscellaneous-page/services/index.ts","./src/app/miscellaneous-page/services/miscellaneous.service.ts"],"names":[],"mappings":"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","file":"miscellaneous-page-miscellaneous-page-module-es2015.js","sourcesContent":["export default \"<sb-layout-dashboard>\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.Transfer'| translate}}\\\"></sb-dashboard-head>\\n    <hr class=\\\"rounded\\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col\\\">\\n            <button class=\\\"btn-primary\\\" (click)=\\\"showSearch()\\\">{{'Accountant.Tables.SearchCheque'| translate}}</button>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <button class=\\\"btn-primary\\\" (click)=\\\"showCash()\\\">{{'Accountant.Tables.TransferCash'| translate}}</button>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <button class=\\\"btn-primary\\\" (click)=\\\"showCheque()\\\">{{'Accountant.Tables.TransferBank'| translate}}</button>\\n        </div>\\n    </div>\\n    <br>\\n    <br>\\n    <div class=\\\"row\\\" *ngIf=\\\"search\\\">\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\n            <sb-card>\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Tables.SearchCheque'| translate}}</div>\\n                <div class=\\\"card-body table-responsive\\\">\\n                    <form class=\\\"form-inline\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"showTable()\\\">\\n                        <label>\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter Cheque Number\\\" formControlName=\\\"chequeNo\\\"/>\\n                        </label>\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!searchForm.valid\\\">{{'Accountant.GetInfo'| translate}}</button>\\n                    </form>\\n                    <table class=\\\"table table-striped\\\" *ngIf=\\\"table\\\" id=\\\"contennnt\\\">\\n                        <tbody>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.ShowDate'| translate}}</td>\\n                            <td>{{date| date:'dd-MM-yyyy'}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.AmountReceived'| translate}}</td>\\n                            <td>{{amount| indianCurrency}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.ChequeDate'| translate}}</td>\\n                            <td>{{chequeDate| date:'dd-MM-yyyy'}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.BankName'| translate}}</td>\\n                            <td>{{bankName}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.EmployeeNo'| translate}}</td>\\n                            <td>{{employeeId}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.EmployeeName'| translate}}</td>\\n                            <td>{{employeeName}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.Purpose'| translate}}</td>\\n                            <td>{{purpose}}</td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </sb-card>\\n        </div>\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"cash\\\">\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\n            <sb-card>\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Tables.TransferCash'| translate}}</div>\\n                <div class=\\\"card-body table-responsive\\\">\\n                    <form [formGroup]=\\\"cashForm\\\" (ngSubmit)=\\\"send()\\\">\\n                        <table class=\\\"table table-striped\\\" id=\\\"contennt\\\">\\n                            <tbody>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Date'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"date\\\" formControlName=\\\"date\\\"/>\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"cashForm.get('date').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Amount'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" formControlName=\\\"amount\\\"/>\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"cashForm.get('amount').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.BankName' | translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <select class=\\\"custom-select\\\" formControlName=\\\"bankName\\\">\\n                                            <option *ngFor=\\\"let val of bankList\\\">{{val.bankName}}</option>\\n                                        </select>\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"cashForm.get('bankName').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!cashForm.valid\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\n                    </form>\\n                </div>\\n            </sb-card>\\n        </div>\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"cheque\\\">\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\n            <sb-card>\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Tables.TransferBank'| translate}}</div>\\n                <div class=\\\"card-body table-responsive\\\">\\n                    <form [formGroup]=\\\"chequeForm\\\" (ngSubmit)=\\\"send()\\\">\\n                        <table class=\\\"table table-striped\\\" id=\\\"contentt\\\">\\n                            <tbody>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Date'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"date\\\" formControlName=\\\"date\\\" required/>\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"chequeForm.get('date').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Amount'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" formControlName=\\\"amount\\\" required/>\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"chequeForm.get('amount').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.BankName' | translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <select class=\\\"custom-select\\\" formControlName=\\\"bankName\\\">\\n                                            <option *ngFor=\\\"let val of bankList\\\">{{val.bankName}}</option>\\n                                        </select>\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"chequeForm.get('bankName').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.ChequeDate' | translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"date\\\" formControlName=\\\"chequeDate\\\"/>\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"chequeForm.get('chequeDate').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.ChequeNo' | translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"text\\\" formControlName=\\\"chequeNo\\\"/>\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"chequeForm.get('chequeNo').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!chequeForm.valid\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\n                    </form>\\n                </div>\\n            </sb-card>\\n        </div>\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n    </div>\\n</sb-layout-dashboard>\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MiscellaneousPageComponent } from '@app/miscellaneous-page/miscellaneous-page/miscellaneous-page.component';\n\n\nconst routes: Routes = [{ path: '', component: MiscellaneousPageComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MiscellaneousPageRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppCommonModule } from '@app/app-common/app-common.module';\nimport * as service from '@app/miscellaneous-page/services';\nimport { NavigationModule } from '@app/navigation/navigation.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MiscellaneousPageRoutingModule } from './miscellaneous-page-routing.module';\nimport { MiscellaneousPageComponent } from './miscellaneous-page/miscellaneous-page.component';\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\n\n@NgModule({\n    declarations: [MiscellaneousPageComponent],\n    imports: [\n        CommonModule,\n        MiscellaneousPageRoutingModule,\n        NavigationModule,\n        AppCommonModule,\n        TranslateModule,\n        FormsModule,\n        LayoutDashboardModule,\n        ReactiveFormsModule,\n    ],\n    providers: [...service.services],\n})\nexport class MiscellaneousPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21pc2NlbGxhbmVvdXMtcGFnZS9taXNjZWxsYW5lb3VzLXBhZ2UvbWlzY2VsbGFuZW91cy1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MiscellaneousService } from '@app/miscellaneous-page/services';\nimport { SessionStorageService } from 'ngx-webstorage';\n// @ts-ignore\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\n\n@Component({\n    selector: 'sb-miscellaneous-page',\n    templateUrl: './miscellaneous-page.component.html',\n    styleUrls: ['./miscellaneous-page.component.scss'],\n})\nexport class MiscellaneousPageComponent implements OnInit {\n    cheque = false;\n    cash = false;\n    search = true;\n    table = false;\n    date: any;\n    amount: any;\n    bankName: any;\n    chequeDate: any;\n    chequeNo: any;\n    employeeId: any;\n    employeeName: any;\n    text: any;\n    purpose: any;\n    bankList: any;\n    searchForm: FormGroup;\n    cashForm: FormGroup;\n    chequeForm: FormGroup;\n    constructor(\n        private service: MiscellaneousService,\n        public session: SessionStorageService,\n        public fb: FormBuilder\n    ) {\n        this.searchForm = this.fb.group({\n            chequeNo: new FormControl('', Validators.compose([Validators.required])),\n        });\n        this.cashForm = this.fb.group({\n            date: new FormControl('', Validators.compose([Validators.required])),\n            amount: new FormControl('', Validators.compose([Validators.required])),\n            bankName: new FormControl('', Validators.compose([Validators.required])),\n        });\n        this.chequeForm = this.fb.group({\n            date: new FormControl('', Validators.compose([Validators.required])),\n            amount: new FormControl('', Validators.compose([Validators.required])),\n            bankName: new FormControl('', Validators.compose([Validators.required])),\n            chequeDate: new FormControl('', Validators.compose([Validators.required])),\n            chequeNo: new FormControl('', Validators.compose([Validators.required])),\n        });\n    }\n\n    ngOnInit() {\n        this.service.getBankList().subscribe(result => {\n            this.bankList = result;\n            console.log(this.bankList);\n        });\n        const user = this.session.retrieve('user');\n        this.text = user.id;\n    }\n\n    send() {\n        if (this.cash) {\n            const data = {\n                userId: this.text,\n                // @ts-ignore\n                date: this.cashForm.get('date').value,\n                mode: 'Cash',\n                typeCash: 'Transfer Cash',\n                typeBank: 'Transfer Bank',\n                // @ts-ignore\n                amount: this.cashForm.get('amount').value,\n                // @ts-ignore\n                bankName: this.cashForm.get('bankName').value,\n                cashPurpose:\n                    'Transfered to ' +\n                    // @ts-ignore\n                    this.cashForm.get('bankName').value +\n                    ' on ' +\n                    // @ts-ignore\n                    this.cashForm.get('date').value,\n                // @ts-ignore\n                bankPurpose: 'Transfered from Cash Account on ' + this.cashForm.get('date').value,\n            };\n            console.log(data);\n            this.service.transferCash(data).subscribe(\n                result => {\n                    Swal.fire({\n                        text: 'Sent!',\n                        icon: 'success',\n                    }).then((isConfirm: any) => {\n                        if (isConfirm) {\n                            // @ts-ignore\n                            this.date = null;\n                            this.chequeNo = null;\n                            this.chequeDate = null;\n                            this.bankName = null;\n                            this.purpose = null;\n                            this.employeeId = null;\n                            this.employeeName = null;\n                            this.amount = null;\n                            this.cashForm = this.fb.group({\n                                date: new FormControl('', Validators.compose([Validators.required])),\n                                amount: new FormControl('', Validators.compose([Validators.required])),\n                                bankName: new FormControl('', Validators.compose([Validators.required])),\n                            });\n                        }\n                    });\n                },\n                error1 => {\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'Try again!',\n                        icon: 'error',\n                    });\n                }\n            );\n        } else {\n            const data = {\n                userId: this.text,\n                // @ts-ignore\n                date: this.chequeForm.get('date').value,\n                mode: 'Cheque',\n                typeCash: 'Transfer Cash',\n                typeBank: 'Transfer Bank',\n                // @ts-ignore\n                amount: this.chequeForm.get('amount').value,\n                // @ts-ignore\n                bankName: this.chequeForm.get('bankName').value,\n                // @ts-ignore\n                chequeDate: this.chequeForm.get('chequeDate').value,\n                // @ts-ignore\n                chequeNo: this.chequeForm.get('chequeNo').value,\n                // @ts-ignore\n                cashPurpose:\n                    'Transfered from ' +\n                    // @ts-ignore\n                    this.chequeForm.get('bankName').value +\n                    ' on ' +\n                    // @ts-ignore\n                    this.chequeForm.get('date').value,\n                // @ts-ignore\n                bankPurpose: 'Transfered to Cash Account on ' + this.chequeForm.get('date').value,\n            };\n            console.log(data);\n            this.service.withdrawCash(data).subscribe(\n                result => {\n                    Swal.fire({\n                        text: 'Sent!',\n                        icon: 'success',\n                    }).then((isConfirm: any) => {\n                        if (isConfirm) {\n                            // @ts-ignore\n                            this.date = null;\n                            this.chequeNo = null;\n                            this.chequeDate = null;\n                            this.bankName = null;\n                            this.purpose = null;\n                            this.employeeId = null;\n                            this.employeeName = null;\n                            this.amount = null;\n                            this.chequeForm = this.fb.group({\n                                date: new FormControl('', Validators.compose([Validators.required])),\n                                amount: new FormControl('', Validators.compose([Validators.required])),\n                                bankName: new FormControl('', Validators.compose([Validators.required])),\n                                chequeDate: new FormControl('', Validators.compose([Validators.required])),\n                                chequeNo: new FormControl('', Validators.compose([Validators.required])),\n                                purpose: new FormControl('', Validators.compose([Validators.required])),\n                            });\n                        }\n                    });\n                },\n                error1 => {\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'Try again!',\n                        icon: 'error',\n                    });\n                }\n            );\n        }\n    }\n\n    showCheque() {\n        this.cheque = true;\n        this.search = false;\n        this.cash = false;\n        this.date = null;\n        this.chequeNo = null;\n        this.chequeDate = null;\n        this.bankName = null;\n        this.purpose = null;\n        this.employeeId = null;\n        this.employeeName = null;\n        this.amount = null;\n        this.searchForm = this.fb.group({\n            chequeNo: new FormControl('', Validators.compose([Validators.required])),\n        });\n    }\n\n    showCash() {\n        this.cheque = false;\n        this.search = false;\n        this.cash = true;\n        this.date = null;\n        this.chequeNo = null;\n        this.chequeDate = null;\n        this.bankName = null;\n        this.purpose = null;\n        this.employeeId = null;\n        this.employeeName = null;\n        this.amount = null;\n    }\n\n    showTable() {\n        this.date = null;\n        this.chequeDate = null;\n        this.bankName = null;\n        this.purpose = null;\n        this.employeeId = null;\n        this.employeeName = null;\n        this.amount = null;\n        this.table = false;\n        // @ts-ignore\n        this.chequeNo = this.searchForm.get('chequeNo').value;\n        console.log(this.chequeNo);\n        this.service.searchCheque(this.chequeNo).subscribe(\n            result => {\n                console.log(result.data);\n                if (result.data.length === 0) {\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'This cheque does not exists!',\n                        icon: 'error',\n                    });\n                } else {\n                    console.log(result.data);\n                    this.date = result.data[0].date;\n                    this.chequeDate = result.data[0].chequeDate;\n                    this.bankName = result.data[0].bankName;\n                    this.purpose = result.data[0].particulars;\n                    this.employeeId = result.data[0].userId;\n                    this.employeeName = result.data[0].name;\n                    if (result.data[0].credit) {\n                        this.amount = result.data[0].credit;\n                    } else {\n                        this.amount = result.data[0].debit;\n                    }\n                    this.table = true;\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n    }\n\n    showSearch() {\n        this.cheque = false;\n        this.search = true;\n        this.cash = false;\n    }\n}\n","import { MiscellaneousService } from './miscellaneous.service';\n\nexport const services = [MiscellaneousService];\n\nexport * from './miscellaneous.service';\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MiscellaneousService {\n    constructor(private http: HttpClient) {}\n    getBankList(): Observable<any> {\n        const url = 'http://drsunitanayak.com/getBankList';\n        const headers = new HttpHeaders();\n        headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Access-Control-Allow-Methods', 'POST,GET,OPTIONS,PUT');\n        headers.append('Accept', 'application/json');\n        headers.append('content-type', 'application/json');\n        return this.http.get<any>(url, { headers });\n    }\n    searchCheque(text: any): Observable<any> {\n        console.log(text);\n        const url = 'http://drsunitanayak.com/searchCheque';\n        const data = {\n            chequeNo: text,\n        };\n        return this.http.post<any>(url, data);\n    }\n    transferCash(data: any): Observable<any> {\n        console.log(data);\n        const url = 'http://drsunitanayak.com/transferCash';\n        return this.http.post<any>(url, data);\n    }\n    withdrawCash(data: any): Observable<any> {\n        console.log(data);\n        const url = 'http://drsunitanayak.com/withdrawCash';\n        return this.http.post<any>(url, data);\n    }\n}\n"],"sourceRoot":"webpack:///"}