{"version":3,"sources":["./src/app/emp-profile/emp-profile/emp-profile.component.html","./src/app/emp-profile/emp-profile-routing.module.ts","./src/app/emp-profile/emp-profile.module.ts","./src/app/emp-profile/emp-profile/emp-profile.component.scss","./src/app/emp-profile/emp-profile/emp-profile.component.ts","./src/app/emp-profile/services/index.ts","./src/app/emp-profile/services/profile.service.ts"],"names":[],"mappings":"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","file":"emp-profile-emp-profile-module-es2015.js","sourcesContent":["export default \"<sb-layout-emp-dashboard>\\r\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.Update'| translate}}\\\"></sb-dashboard-head>\\r\\n    <hr class=\\\"rounded\\\">\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Pages.Update'| translate}}</div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form [formGroup]=\\\"employeeForm\\\" (ngSubmit)=\\\"send()\\\">\\r\\n                        <table class=\\\"table table-striped table-responsive\\\">\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Image'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <img [src]=\\\"url\\\" height=\\\"200\\\"> <br/>\\r\\n                                    <input type='file' (change)=\\\"onSelectFile($event)\\\">\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.EmployeeNo'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"employeeId\\\" formControlName=\\\"employeeId\\\" required />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('employeeId').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.EmployeeName'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"employeeName\\\" formControlName=\\\"employeeName\\\" required />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('employeeName').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Father'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"fatherName\\\" formControlName=\\\"fatherName\\\" />\\r\\n                                    </label>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.PermAddress'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"permAddress\\\" formControlName=\\\"permAddress\\\" />\\r\\n                                    </label>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.SameAddress'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"checkbox\\\" (click)=\\\"sameAddress($event)\\\" [(ngModel)]=\\\"check\\\" />\\r\\n                                    </label>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.CurrAddress'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"currAddress\\\" value=\\\"{{currAddress}}\\\" formControlName=\\\"currAddress\\\" />\\r\\n                                    </label>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Email'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" formControlName=\\\"email\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('email').hasError('email')\\\">Provide valid email</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.MobNo'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"mobileNo\\\" formControlName=\\\"mobileNo\\\" maxlength=\\\"10\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('mobileNo').hasError('min')\\\">Number should be of 10 digits</div>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('mobileNo').hasError('max')\\\">Number should be of 10 digits</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.AltMobNo'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"altMobileNo\\\" formControlName=\\\"altMobileNo\\\" maxlength=\\\"10\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('altMobileNo').hasError('min')\\\">Number should be of 10 digits</div>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('altMobileNo').hasError('max')\\\">Number should be of 10 digits</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Landline'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"landlineNo\\\" formControlName=\\\"landlineNo\\\" maxlength=\\\"10\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('landlineNo').hasError('pattern')\\\">Invalid Number!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.PAN'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"pan\\\" formControlName=\\\"pan\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('pan').hasError('pattern')\\\">Invalid Number!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Aadhar'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"aadharNo\\\" formControlName=\\\"aadharNo\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('aadharNo').hasError('pattern')\\\">Invalid Number!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!employeeForm.valid\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </sb-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n    </div>\\r\\n</sb-layout-emp-dashboard>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EmpProfileComponent } from '@app/emp-profile/emp-profile/emp-profile.component';\r\n\r\nconst routes: Routes = [{ path: '', component: EmpProfileComponent }];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class EmpProfileRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppCommonModule } from '@app/app-common/app-common.module';\r\nimport { NavigationModule } from '@app/navigation/navigation.module';\r\nimport * as service from '@app/upload-all/services';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { EmpProfileRoutingModule } from './emp-profile-routing.module';\r\nimport { EmpProfileComponent } from './emp-profile/emp-profile.component';\r\nimport { LayoutEmpDashboardModule } from '@app/layout-emp-dashboard/layout-emp-dashboard.module';\r\n\r\n@NgModule({\r\n    declarations: [EmpProfileComponent],\r\n    imports: [\r\n        CommonModule,\r\n        EmpProfileRoutingModule,\r\n        NavigationModule,\r\n        AppCommonModule,\r\n        TranslateModule,\r\n        FormsModule,\r\n        LayoutEmpDashboardModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    providers: [...service.services],\r\n})\r\nexport class EmpProfileModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcC1wcm9maWxlL2VtcC1wcm9maWxlL2VtcC1wcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ProfileService } from '@app/emp-profile/services';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\n// @ts-ignore\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'sb-emp-profile',\r\n    templateUrl: './emp-profile.component.html',\r\n    styleUrls: ['./emp-profile.component.scss'],\r\n})\r\nexport class EmpProfileComponent implements OnInit {\r\n    employeeId: any;\r\n    employeeName: any;\r\n    fatherName: any;\r\n    permAddress: any;\r\n    currAddress: any;\r\n    check: any;\r\n    email: any;\r\n    mobileNo: any;\r\n    altMobileNo: any;\r\n    landlineNo: any;\r\n    pan: any;\r\n    aadharNo: any;\r\n    enrollDate: any;\r\n    url: string | ArrayBuffer | null = '';\r\n    formData = new FormData();\r\n    employeeForm: FormGroup;\r\n    constructor(\r\n        public service: ProfileService,\r\n        public session: SessionStorageService,\r\n        public fb: FormBuilder\r\n    ) {\r\n        this.employeeForm = this.fb.group({\r\n            employeeId: new FormControl('', Validators.compose([Validators.required])),\r\n            employeeName: new FormControl('', Validators.compose([Validators.required])),\r\n            fatherName: new FormControl(''),\r\n            permAddress: new FormControl(''),\r\n            check: new FormControl(''),\r\n            currAddress: new FormControl(''),\r\n            email: new FormControl('', Validators.compose([Validators.email])),\r\n            mobileNo: new FormControl(\r\n                '',\r\n                Validators.compose([Validators.min(1000000000), Validators.max(9999999999)])\r\n            ),\r\n            altMobileNo: new FormControl(\r\n                '',\r\n                Validators.compose([Validators.min(1000000000), Validators.max(9999999999)])\r\n            ),\r\n            landlineNo: new FormControl(\r\n                '',\r\n                Validators.compose([Validators.pattern('^[0-9]d{2,4}-d{6,8}$')])\r\n            ),\r\n            pan: new FormControl(\r\n                '',\r\n                Validators.compose([Validators.pattern('[A-Z]{5}[0-9]{4}[A-Z]{1}')])\r\n            ),\r\n            aadharNo: new FormControl(\r\n                '',\r\n                Validators.compose([Validators.pattern('^[2-9]{1}[0-9]{3}\\\\s[0-9]{4}\\\\s[0-9]{4}$')])\r\n            ),\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const user = this.session.retrieve('user');\r\n        this.employeeId = user.id;\r\n        this.service.getData(this.employeeId).subscribe(\r\n            result => {\r\n                if (result.nameData.length === 0) {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'This user does not exists!',\r\n                        icon: 'error',\r\n                    });\r\n                } else {\r\n                    console.log(result);\r\n                    this.employeeName = result.nameData[0].name;\r\n                    this.fatherName = result.nameData[0].fatherName;\r\n                    this.permAddress = result.nameData[0].permanentAddress;\r\n                    this.currAddress = result.nameData[0].currentAddress;\r\n                    this.email = result.nameData[0].email;\r\n                    this.mobileNo = result.nameData[0].mobileNo1;\r\n                    this.altMobileNo = result.nameData[0].mobileNo2;\r\n                    this.landlineNo = result.nameData[0].landline;\r\n                    this.pan = result.nameData[0].pan;\r\n                    this.aadharNo = result.nameData[0].adharNo;\r\n                    this.enrollDate = result.nameData[0].enrollmentDate;\r\n                }\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n    }\r\n    sameAddress(event: any) {\r\n        console.log(event.target.checked);\r\n        if (event.target.checked) {\r\n            this.currAddress = this.permAddress;\r\n        } else {\r\n            this.currAddress = null;\r\n        }\r\n    }\r\n    send() {\r\n        const data = {\r\n            userId: this.employeeId,\r\n            name: this.employeeName,\r\n            father: this.fatherName,\r\n            permanentAddress: this.permAddress,\r\n            currentAddress: this.currAddress,\r\n            email: this.email,\r\n            mobile1: this.mobileNo,\r\n            mobile2: this.altMobileNo,\r\n            landline: this.landlineNo,\r\n            pan: this.pan,\r\n            adharNo: this.aadharNo,\r\n            enroll: this.enrollDate,\r\n        };\r\n        this.formData.append('data', JSON.stringify(data));\r\n        this.service.sendData(this.formData).subscribe(\r\n            result => {\r\n                if (result.nameData.length === 0) {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'This user does not exists!',\r\n                        icon: 'error',\r\n                    });\r\n                } else {\r\n                    Swal.fire({\r\n                        text: 'Sent!',\r\n                        icon: 'success',\r\n                    });\r\n                }\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n    }\r\n    onSelectFile(event: any) {\r\n        if (event.target.files && event.target.files[0]) {\r\n            const reader = new FileReader();\r\n\r\n            reader.readAsDataURL(event.target.files[0]); // read file as data url\r\n\r\n            reader.onload = e => {\r\n                // called once readAsDataURL is completed\r\n                // @ts-ignore\r\n                this.url = e.target.result;\r\n            };\r\n            // @ts-ignore\r\n            this.formData.append('file', event.target.files[0], event.target.files[0].name);\r\n        }\r\n    }\r\n}\r\n","import { ProfileService } from './profile.service';\r\n\r\nexport const services = [ProfileService];\r\n\r\nexport * from './profile.service';\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n    constructor(private httpService: HttpClient) {}\r\n    getData(text: any): Observable<any> {\r\n        console.log(text);\r\n        const url = 'http://206.189.129.219:8080/getUserData';\r\n        const data = {\r\n            userId: text,\r\n        };\r\n        return this.httpService.post<any>(url, data);\r\n    }\r\n    sendData(data: any): Observable<any> {\r\n        console.log(data);\r\n        const url = 'http://206.189.129.219:8080/updateUserData';\r\n        const headers = new HttpHeaders();\r\n        headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Access-Control-Allow-Methods', 'POST,GET,OPTIONS,PUT');\r\n        headers.append('Accept', 'application/json');\r\n        headers.append('content-type', 'application/json');\r\n        return this.httpService.post<any>(url, data, { headers });\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}