{"version":3,"sources":["./src/app/employee-dashboard/employee-dashboard/employee-dashboard.component.html","./src/app/employee-dashboard/employee-dashboard-routing.module.ts","./src/app/employee-dashboard/employee-dashboard.module.ts","./src/app/employee-dashboard/employee-dashboard/employee-dashboard.component.scss","./src/app/employee-dashboard/employee-dashboard/employee-dashboard.component.ts","./src/app/employee-dashboard/services/dashboard.service.ts","./src/app/employee-dashboard/services/index.ts"],"names":[],"mappings":"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","file":"employee-dashboard-employee-dashboard-module-es2015.js","sourcesContent":["export default \"<sb-layout-emp-dashboard>\\n    <sb-dashboard-head title=\\\"{{user.name}}'s {{'Common.Title'|translate}}\\\"></sb-dashboard-head>\\n    <hr class=\\\"rounded\\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-3 col-md-6\\\">\\n            <sb-card-view-details link=\\\"\\\" text=\\\"{{loanAmount| indianCurrency}}\\\" background=\\\"bg-primary\\\">\\n                <div class=\\\"card-body\\\">\\n                    <fa-icon class=\\\"mr-1 fa-pull-right\\\" style=\\\"opacity: 0.5; font-size: 30px;\\\" [icon]='[\\\"fas\\\", \\\"hockey-puck\\\"]'></fa-icon>\\n                    <p style=\\\"margin-top: 10px;\\\">{{'Employee.Cards.Loan'| translate}}</p>\\n                </div>\\n            </sb-card-view-details>\\n        </div>\\n        <div class=\\\"col-xl-3 col-md-6\\\">\\n            <sb-card-view-details link=\\\"\\\" text=\\\"{{emi| indianCurrency}}\\\" background=\\\"bg-warning\\\">\\n                <div class=\\\"card-body\\\">\\n                    <fa-icon class=\\\"mr-1 fa-pull-right\\\" style=\\\"opacity: 0.5; font-size: 30px;\\\" [icon]='[\\\"fas\\\", \\\"wallet\\\"]'></fa-icon>\\n                    <p style=\\\"margin-top: 10px;\\\">{{'Employee.Cards.Deposit'| translate}}</p>\\n                </div>\\n            </sb-card-view-details>\\n        </div>\\n        <div class=\\\"col-xl-3 col-md-6\\\">\\n            <sb-card-view-details link=\\\"\\\" text=\\\"{{amount| indianCurrency}}\\\" background=\\\"bg-success\\\">\\n                <div class=\\\"card-body\\\">\\n                    <fa-icon class=\\\"mr-1 fa-pull-right\\\" style=\\\"opacity: 0.5; font-size: 30px;\\\" [icon]='[\\\"fas\\\", \\\"coins\\\"]'></fa-icon>\\n                    <p style=\\\"margin-top: 10px;\\\">{{'Employee.Cards.Debit'| translate}}</p>\\n                </div>\\n            </sb-card-view-details>\\n        </div>\\n        <div class=\\\"col-xl-3 col-md-6\\\">\\n            <sb-card-view-details link=\\\"\\\" text=\\\"{{balance| indianCurrency}}\\\" background=\\\"bg-danger\\\">\\n                <div class=\\\"card-body\\\">\\n                    <fa-icon class=\\\"mr-1 fa-pull-right\\\" style=\\\"opacity: 0.5; font-size: 30px;\\\" [icon]='[\\\"fas\\\", \\\"money-check\\\"]'></fa-icon>\\n                    <p style=\\\"margin-top: 10px;\\\">{{'Employee.Cards.Credit'| translate}}</p>\\n                </div>\\n            </sb-card-view-details>\\n        </div>\\n    </div>\\n    <!--PassBook Table-->\\n    <sb-card>\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\" style=\\\"margin-top: 10px;\\\">\\n                    <fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{\\\"Employee.Passbook.Title\\\" | translate}}\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\" placeholder=\\\"Search..\\\" [(ngModel)]=\\\"term\\\"/>\\n                </div>\\n            </div>\\n        </div>\\n        <ng-template #not>\\n            <td>-</td>\\n        </ng-template>\\n        <div class=\\\"card-body table-responsive\\\">\\n            <table class=\\\"table table-bordered\\\">\\n                <thead>\\n                <tr>\\n                    <th style=\\\"width: 16.66%;\\\" scope=\\\"col\\\"><span>{{\\\"Employee.Passbook.Date\\\" | translate}}</span></th>\\n                    <th style=\\\"width: 60%;\\\" scope=\\\"col\\\"><span>{{\\\"Employee.Passbook.Particulars\\\" | translate}}</span></th>\\n                    <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Mode\\\" | translate}}</span></th>\\n                    <th scope=\\\"col\\\"><span>{{\\\"Employee.Passbook.Deposit\\\" | translate}}</span></th>\\n                    <th scope=\\\"col\\\"><span>{{\\\"Employee.Passbook.Withdrawal\\\" | translate}}</span></th>\\n                </tr>\\n                </thead>\\n                <tbody *ngFor=\\\"let val of account | filter: term | paginate: { itemsPerPage:5, currentPage: p} \\\">\\n                <tr>\\n                    <th scope=\\\"row\\\" *ngIf=\\\"isDate(val.account.date); else notDate\\\">{{ val.account.date| date:'dd-MM-yyyy' }}</th>\\n                    <ng-template #notDate>\\n                        <th scope=\\\"row\\\">{{val.account.date}}</th>\\n                    </ng-template>\\n                    <td *ngIf=\\\"val.account.particulars; else not\\\">{{val.account.particulars}}</td>\\n                    <td *ngIf=\\\"val.account.mode; else not\\\">{{val.account.mode}}</td>\\n                    <td class=\\\"table-success\\\" *ngIf=\\\"val.account.credit; else not\\\">{{val.account.credit| indianCurrency}}</td>\\n                    <td class=\\\"table-danger\\\" *ngIf=\\\"val.account.debit; else not\\\">{{val.account.debit| indianCurrency}}</td>\\n                </tr>\\n                <tr>\\n                    <td *ngIf=\\\"val.cheque\\\" align=\\\"center\\\" colspan=\\\"5\\\">\\n                        <h6 style=\\\"font-weight: bold\\\">{{\\\"Accountant.Tables.ChequeDetails\\\"| translate}}</h6>\\n                        <table style=\\\"width: 100%;\\\">\\n                            <thead>\\n                            <tr>\\n                                <td style=\\\"width: 16.66%;\\\">{{\\\"Accountant.Tables.ChequeDate\\\"| translate}}</td>\\n                                <td style=\\\"width: 60%;\\\">{{\\\"Accountant.Tables.BankName\\\"| translate}}</td>\\n                                <td>{{\\\"Accountant.Tables.ChequeNo\\\"| translate}}</td>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr>\\n                                <td *ngIf=\\\"val.cheque[0].chequeDate; else not\\\">{{val.cheque[0].chequeDate| date:'dd-MM-yyyy'}}</td>\\n                                <td class=\\\"col-5\\\" *ngIf=\\\"val.cheque[0].bankName; else not\\\">{{val.cheque[0].bankName}}</td>\\n                                <td *ngIf=\\\"val.cheque[0].chequeNo; else not\\\">{{val.cheque[0].chequeNo}}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </td>\\n                </tr>\\n                </tbody>\\n            </table>\\n            <div class=\\\"pagination\\\">\\n                <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n            </div>\\n        </div>\\n    </sb-card>\\n    <!--Loan Table-->\\n    <ng-container *ngFor=\\\"let data of loans; let i = index\\\">\\n        <sb-card>\\n            <div class=\\\"card-header bg-primary headers\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\" style=\\\"margin-top: 10px; color: white;\\\">\\n                        <h5><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"rupee-sign\\\"]'></fa-icon>&nbsp;{{'Employee.Loan'| translate}} ({{data.loanData.date| date:'dd-MM-yyyy'}})</h5>\\n                    </div>\\n                    <div class=\\\"col\\\" style=\\\"color: white;\\\">\\n                        <fa-icon class=\\\"fa-pull-right rotate\\\" [ngClass]=\\\"{'clicked': show[i]}\\\" (click)=\\\"showTable(i)\\\" [icon]='[\\\"fas\\\",\\\"caret-right\\\"]' style=\\\"margin-top: 10px;\\\">\\n                        </fa-icon>&nbsp;\\n                        <span class=\\\"float-right\\\" style=\\\"margin: 10px;\\\"><h5 *ngIf=\\\"data.loanData.loanAmount; else not\\\">{{data.loanData.loanAmount| indianCurrency}}</h5></span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-header\\\" *ngIf=\\\"show[i]  && data.loanBook\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\" style=\\\"margin-top: 10px;\\\">\\n                        <fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>&nbsp;{{\\\"Employee.Loanbook.Title\\\" | translate}}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body table-responsive\\\" *ngIf=\\\"show[i] && data.loanBook\\\">\\n                <table class=\\\"table table-striped\\\">\\n                    <thead>\\n                    <tr>\\n                        <th style=\\\"width: 16.66%;\\\" scope=\\\"col\\\"><span>{{\\\"Employee.Loanbook.Date\\\" | translate}}</span></th>\\n                        <th style=\\\"width: 60%;\\\" scope=\\\"col\\\"><span>{{\\\"Employee.Loanbook.Particulars\\\" | translate}}</span></th>\\n                        <th scope=\\\"col\\\"><span>{{\\\"Employee.Loanbook.Emi\\\" | translate}}</span></th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                    <tr *ngFor=\\\"let val of data.loanBook\\\">\\n                        <th scope=\\\"row\\\" *ngIf=\\\"isDate(val.date); else notDate\\\">{{val.date| date:'dd-MM-yyyy'}}</th>\\n                        <ng-template #notDate>\\n                            <th scope=\\\"row\\\">{{val.date}}</th>\\n                        </ng-template>\\n                        <td *ngIf=\\\"val.particulars; else not\\\">{{val.particulars}}</td>\\n                        <td *ngIf=\\\"val.credit; else not\\\">{{val.credit| indianCurrency}}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            <div class=\\\"card-body table-responsive\\\" *ngIf=\\\"show[i] && data.closeData && data.closeData[0].mode==='Cash';else cheque\\\">\\n                <h3 style=\\\"font-weight: bold; text-align: center;\\\">{{\\\"Accountant.Tables.LoanClose\\\" | translate}}</h3>\\n                <table class=\\\"table table-striped\\\">\\n                    <thead>\\n                    <tr>\\n                        <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ShowDate\\\" | translate}}</span></th>\\n                        <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.LoanStatus\\\"  | translate}}</span></th>\\n                        <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Mode\\\" | translate}}</span></th>\\n                        <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Pay\\\" | translate}}</span></th>\\n                    </tr>\\n                    </thead>\\n                    <tbody>\\n                    <tr>\\n                        <th scope=\\\"row\\\" *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</th>\\n                        <ng-template #notDate>\\n                            <th scope=\\\"row\\\">{{data.closeData[0].date}}</th>\\n                        </ng-template>\\n                        <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\n                        <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\n                        <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\n                    </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            <ng-template #cheque>\\n                <div class=\\\"card-body table-responsive\\\" *ngIf=\\\"show[i] && data.closeData && data.closeData[0].mode==='Cheque'\\\">\\n                    <h3 style=\\\"font-weight: bold; text-align: center;\\\">{{\\\"Accountant.Tables.LoanClose\\\" | translate}}</h3>\\n                    <table class=\\\"table table-striped\\\">\\n                        <thead>\\n                        <tr>\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ShowDate\\\" | translate}}</span></th>\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.LoanStatus\\\"  | translate}}</span></th>\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Mode\\\" | translate}}</span></th>\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Pay\\\" | translate}}</span></th>\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ChequeDate\\\" | translate}}</span></th>\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.BankName\\\"  | translate}}</span></th>\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ChequeNo\\\" | translate}}</span></th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr>\\n                            <th scope=\\\"row\\\" *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</th>\\n                            <ng-template #notDate>\\n                                <th scope=\\\"row\\\">{{data.closeData[0].date}}</th>\\n                            </ng-template>\\n                            <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\n                            <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\n                            <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\n                            <td *ngIf=\\\"data.chequeData[0].chequeDate; else not\\\">{{data.chequeData[0].chequeDate| indianCurrency}}</td>\\n                            <td *ngIf=\\\"data.chequeData[0].bankName; else not\\\">{{data.chequeData[0].bankName| indianCurrency}}</td>\\n                            <td *ngIf=\\\"data.chequeData[0].chequeNo; else not\\\">{{data.chequeData[0].chequeNo| indianCurrency}}</td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </ng-template>\\n        </sb-card>\\n    </ng-container>\\n</sb-layout-emp-dashboard>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeDashboardComponent } from '@app/employee-dashboard/employee-dashboard/employee-dashboard.component';\n\n\nconst routes: Routes = [{ path: '', component: EmployeeDashboardComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeDashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeDashboardRoutingModule } from './employee-dashboard-routing.module';\nimport { EmployeeDashboardComponent } from './employee-dashboard/employee-dashboard.component';\nimport { LayoutEmpDashboardModule } from '@app/layout-emp-dashboard/layout-emp-dashboard.module';\nimport { NavigationModule } from '@app/navigation/navigation.module';\nimport { AppCommonModule } from '@app/app-common/app-common.module';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n\n@NgModule({\n  declarations: [EmployeeDashboardComponent],\n    imports: [\n        CommonModule,\n        EmployeeDashboardRoutingModule,\n        LayoutEmpDashboardModule,\n        NavigationModule,\n        AppCommonModule,\n        FormsModule,\n        TranslateModule,\n        NgxPaginationModule,\n        Ng2SearchPipeModule,\n    ],\n})\nexport class EmployeeDashboardModule { }\n","export default \".headers {\\n  color: white;\\n}\\n\\n.pagination a {\\n  border-radius: 5px;\\n}\\n\\n.pagination a.active {\\n  border-radius: 5px;\\n}\\n\\n/* Style the search box inside the navigation bar */\\n\\n.card-header input[type=text] {\\n  border-radius: 5px;\\n  float: right;\\n  padding: 6px;\\n  margin-right: 16px;\\n  font-size: 17px;\\n  border: 1px solid #000000;\\n}\\n\\n.rotate {\\n  margin: 10px;\\n  transition: all 0s ease-out !important;\\n}\\n\\n.clicked {\\n  transform: rotate(90deg);\\n}\\n\\n/* When the screen is less than 600px wide, stack the links and the search field vertically instead of horizontally */\\n\\n@media screen and (max-width: 600px) {\\n  .card-header a, .card-header input[type=text] {\\n    border-radius: 5px;\\n    float: none;\\n    display: block;\\n    text-align: left;\\n    width: 100%;\\n    margin: 0;\\n    padding: 14px;\\n  }\\n\\n  .card-header input[type=text] {\\n    border: 1px solid #ccc;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWUtZGFzaGJvYXJkL2VtcGxveWVlLWRhc2hib2FyZC9DOlxcVXNlcnNcXExlbm92b1xcRG93bmxvYWRzXFxTb2NpZXR5X0Jhbmtpbmcvc3JjXFxhcHBcXGVtcGxveWVlLWRhc2hib2FyZFxcZW1wbG95ZWUtZGFzaGJvYXJkXFxlbXBsb3llZS1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2VtcGxveWVlLWRhc2hib2FyZC9lbXBsb3llZS1kYXNoYm9hcmQvZW1wbG95ZWUtZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksWUFBQTtBQ0RKOztBREdBO0VBQ0ksa0JBQUE7QUNBSjs7QURHQTtFQUNJLGtCQUFBO0FDQUo7O0FERUEsbURBQUE7O0FBQ0E7RUFDSSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7QUNDSjs7QURDQTtFQUNJLFlBQUE7RUFDQSxzQ0FBQTtBQ0VKOztBREFBO0VBQ0ksd0JBQUE7QUNHSjs7QURBQSxxSEFBQTs7QUFDQTtFQUNJO0lBQ0ksa0JBQUE7SUFDQSxXQUFBO0lBQ0EsY0FBQTtJQUNBLGdCQUFBO0lBQ0EsV0FBQTtJQUNBLFNBQUE7SUFDQSxhQUFBO0VDR047O0VEREU7SUFDSSxzQkFBQTtFQ0lOO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9lbXBsb3llZS1kYXNoYm9hcmQvZW1wbG95ZWUtZGFzaGJvYXJkL2VtcGxveWVlLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3N0eWxlcy92YXJpYWJsZXMuc2Nzcyc7XG5cbi5oZWFkZXJze1xuICAgIGNvbG9yOiB3aGl0ZTtcbn1cbi5wYWdpbmF0aW9uIGEge1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuLnBhZ2luYXRpb24gYS5hY3RpdmUge1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cbi8qIFN0eWxlIHRoZSBzZWFyY2ggYm94IGluc2lkZSB0aGUgbmF2aWdhdGlvbiBiYXIgKi9cbi5jYXJkLWhlYWRlciBpbnB1dFt0eXBlPXRleHRdIHtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHBhZGRpbmc6IDZweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDAwMDA7XG59XG4ucm90YXRlIHtcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgdHJhbnNpdGlvbjogYWxsIDBzIGVhc2Utb3V0ICFpbXBvcnRhbnQ7XG59XG4uY2xpY2tlZCB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpXG59XG5cbi8qIFdoZW4gdGhlIHNjcmVlbiBpcyBsZXNzIHRoYW4gNjAwcHggd2lkZSwgc3RhY2sgdGhlIGxpbmtzIGFuZCB0aGUgc2VhcmNoIGZpZWxkIHZlcnRpY2FsbHkgaW5zdGVhZCBvZiBob3Jpem9udGFsbHkgKi9cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLmNhcmQtaGVhZGVyIGEsIC5jYXJkLWhlYWRlciBpbnB1dFt0eXBlPXRleHRdIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgICBmbG9hdDogbm9uZTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDE0cHg7XG4gICAgfVxuICAgIC5jYXJkLWhlYWRlciBpbnB1dFt0eXBlPXRleHRdIHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICB9XG59XG4iLCIuaGVhZGVycyB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLnBhZ2luYXRpb24gYSB7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuLnBhZ2luYXRpb24gYS5hY3RpdmUge1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbi8qIFN0eWxlIHRoZSBzZWFyY2ggYm94IGluc2lkZSB0aGUgbmF2aWdhdGlvbiBiYXIgKi9cbi5jYXJkLWhlYWRlciBpbnB1dFt0eXBlPXRleHRdIHtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBmbG9hdDogcmlnaHQ7XG4gIHBhZGRpbmc6IDZweDtcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xuICBmb250LXNpemU6IDE3cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDAwMDA7XG59XG5cbi5yb3RhdGUge1xuICBtYXJnaW46IDEwcHg7XG4gIHRyYW5zaXRpb246IGFsbCAwcyBlYXNlLW91dCAhaW1wb3J0YW50O1xufVxuXG4uY2xpY2tlZCB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbn1cblxuLyogV2hlbiB0aGUgc2NyZWVuIGlzIGxlc3MgdGhhbiA2MDBweCB3aWRlLCBzdGFjayB0aGUgbGlua3MgYW5kIHRoZSBzZWFyY2ggZmllbGQgdmVydGljYWxseSBpbnN0ZWFkIG9mIGhvcml6b250YWxseSAqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLmNhcmQtaGVhZGVyIGEsIC5jYXJkLWhlYWRlciBpbnB1dFt0eXBlPXRleHRdIHtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgZmxvYXQ6IG5vbmU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMTRweDtcbiAgfVxuXG4gIC5jYXJkLWhlYWRlciBpbnB1dFt0eXBlPXRleHRdIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICB9XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '@app/employee-dashboard/services';\nimport { SessionStorageService } from 'ngx-webstorage';\n// @ts-ignore\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\n\n@Component({\n    selector: 'sb-employee-dashboard',\n    templateUrl: './employee-dashboard.component.html',\n    styleUrls: ['./employee-dashboard.component.scss'],\n})\nexport class EmployeeDashboardComponent implements OnInit {\n    p: any;\n    q: any;\n    account: any;\n    loans: any;\n    term: any;\n    loanTerm: any;\n    show: any;\n    loanAmount = 0;\n    loanDebit = 0;\n    emi = 0;\n    balance = 0;\n    amount: any;\n    user: any;\n    constructor(\n        private dashboardService: DashboardService,\n        public session: SessionStorageService\n    ) {}\n    ngOnInit() {\n        this.user = this.session.retrieve('user');\n        console.log(this.user);\n        const text = this.user.id;\n        console.log(text);\n        this.dashboardService.getData(text).subscribe(\n            result => {\n                if (result) {\n                    console.log(result);\n                    this.show = [result.loanData.length];\n                    this.q = new Array(result.loanData.length);\n                    // tslint:disable-next-line:prefer-for-of\n                    for (let i = 0; i < result.loanData.length; i++) {\n                        let principle = result.loanData[i].loanData.loanAmount;\n                        this.loanAmount += principle;\n                        const r = result.loanData[i].loanData.interest / 100;\n                        if (result.loanData[i].loanBook) {\n                            // tslint:disable-next-line:prefer-for-of\n                            for (let j = 0; j < result.loanData[i].loanBook.length; j++) {\n                                const emi = result.loanData[i].loanBook[j].credit;\n                                const amt = emi * r;\n                                principle -= amt;\n                                this.emi += emi;\n                                console.log(principle);\n                            }\n                        }\n                        this.loanDebit += principle;\n                        console.log(this.loanDebit);\n                        this.show[i] = false;\n                    }\n                    this.amount = (Math.round(this.loanDebit * 100) / 100).toFixed(0);\n                    // tslint:disable-next-line:prefer-for-of\n                    for (let i = 0; i < result.accountData.length; i++) {\n                        this.balance +=\n                            result.accountData[i].account.credit -\n                            result.accountData[i].account.debit;\n                    }\n\n                    this.account = result.accountData;\n                    this.loans = result.loanData;\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n    }\n    showTable(event: any) {\n        console.log(event);\n        if (this.show[event]) {\n            this.show[event] = false;\n        } else {\n            this.show[event] = true;\n        }\n    }\n    isDate(d: any) {\n        const result = Date.parse(d);\n        if (!result) return false;\n        else return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DashboardService {\n    constructor(private httpService: HttpClient) {}\n\n    getData(text: any): Observable<any> {\n        const data = {\n            userId: text,\n        };\n        const url = 'http://drsunitanayak.com/get/userData';\n        return this.httpService.post(url, data);\n    }\n}\n","import { DashboardService } from './dashboard.service';\n\nexport const services = [DashboardService];\n\nexport * from './dashboard.service';\n"],"sourceRoot":"webpack:///"}