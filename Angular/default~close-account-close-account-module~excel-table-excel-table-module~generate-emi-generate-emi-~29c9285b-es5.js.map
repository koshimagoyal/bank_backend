{"version":3,"sources":["webpack:///node_modules/@angular/cdk/fesm2015/a11y.js","webpack:///node_modules/@angular/cdk/fesm2015/bidi.js","webpack:///node_modules/@angular/cdk/fesm2015/cdk.js","webpack:///node_modules/@angular/cdk/fesm2015/coercion.js","webpack:///node_modules/@angular/cdk/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/fesm2015/keycodes.js","webpack:///node_modules/@angular/cdk/fesm2015/observers.js","webpack:///node_modules/@angular/cdk/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/fesm2015/platform.js","webpack:///node_modules/@angular/cdk/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/fesm2015/scrolling.js","webpack:///node_modules/@angular/material/fesm2015/button.js","webpack:///node_modules/@angular/material/fesm2015/core.js","webpack:///node_modules/@angular/material/fesm2015/dialog.js"],"names":["ID_DELIMITER","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","some","existingId","trim","push","setAttribute","join","removeAriaReferencedId","filteredIds","filter","val","length","removeAttribute","getAttribute","match","RegisteredMessage","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","messageRegistry","Map","messagesContainer","AriaDescriber","_document","hostElement","message","_canBeDescribed","_setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","_deleteMessagesContainer","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","element","removeChild","preExistingContainer","getElementById","parentNode","style","display","body","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","decorators","type","args","providedIn","ctorParameters","undefined","Éµprov","factory","AriaDescriber_Factory","token","ListKeyManagerOption","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","EMPTY","_vertical","_allowedModifierKeys","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","changes","subscribe","newItems","itemArray","toArray","newIndex","predicate","shouldWrap","enabled","direction","_horizontal","keys","debounceInterval","getLabel","Error","unsubscribe","pipe","letter","inputString","items","_getItemsArray","index","toUpperCase","setActiveItem","previousIndex","updateActiveItem","next","event","keyCode","modifiers","isModifierAllowed","every","modifier","setNextItemActive","setPreviousItemActive","key","toLocaleUpperCase","String","fromCharCode","preventDefault","_setActiveItemByIndex","setFirstItemActive","_setActiveItemByDelta","setLastItemActive","activeItem","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","Highlightable","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusableOption","FocusKeyManager","arguments","_origin","origin","focus","InteractivityChecker","_platform","hasAttribute","hasGeometry","getComputedStyle","visibility","isBrowser","frameElement","getFrameElement","getWindow","frameType","nodeName","toLowerCase","getTabIndexValue","BLINK","WEBKIT","isVisible","tabIndexValue","TRIDENT","FIREFOX","IOS","isPotentiallyTabbableIOS","tabIndex","isPotentiallyFocusable","isDisabled","InteractivityChecker_Factory","window","_a","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isNaN","parseInt","inputType","node","ownerDocument","defaultView","FocusTrap","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","startAnchor","_startAnchor","endAnchor","_endAnchor","removeEventListener","runOutsideAngular","_createAnchor","addEventListener","insertBefore","nextSibling","Promise","resolve","_executeOnStable","focusInitialElement","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","isFocusable","_getRegionBoundary","root","isTabbable","children","tabbableChild","anchor","_toggleAnchorTabIndex","classList","add","isEnabled","fn","isStable","onStable","asObservable","value","FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","CdkTrapFocus","_elementRef","_focusTrapFactory","_previouslyFocusedElement","focusTrap","create","nativeElement","destroy","autoCapture","activeElement","focusInitialElementWhenReady","hasAttached","_autoCapture","selector","exportAs","propDecorators","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","config","defer","register","deregister","preventFocus","toggleAnchors","allowFocus","closest","Node","curr","Element","hasNativeClosest","polyfillClosest","matches","prototype","EventListenerFocusTrapInertStrategy","_listener","e","_trapFocus","target","focusTrapRoot","contains","setTimeout","ConfigurableFocusTrapConfig","FOCUS_TRAP_INERT_STRATEGY","FocusTrapInertStrategy","ManagedFocusTrap","FocusTrapManager","_focusTrapStack","ft","stack","_disable","_enable","splice","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LiveAnnouncerDefaultOptions","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","elementClass","previousElements","getElementsByClassName","liveEl","LiveAnnouncer_Factory","CdkAriaLive","_liveAnnouncer","_contentObserver","_politeness","_subscription","observe","elementText","_previousAnnouncedText","announce","isFakeMousedownFromScreenReader","buttons","TOUCH_BUFFER_MS","FocusOptions","FocusMonitorDetectionMode","IMMEDIATE","EVENTUAL","FocusMonitorOptions","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","passive","capture","FocusMonitor","document","options","_windowFocused","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_documentKeydownListener","_lastTouchTarget","_setOriginForCurrentEventQueue","_documentMousedownListener","source","_documentTouchstartListener","_touchTimeoutId","getTarget","_windowFocusListener","_windowFocusTimeoutId","_rootNodeFocusAndBlurListener","handler","_onFocus","_onBlur","parentElement","call","_detectionMode","detectionMode","checkChildren","rootNode","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","elementInfo","complete","_setClasses","_removeGlobalListeners","forEach","_info","stopMonitoring","doc","className","shouldSet","remove","_lastFocusOrigin","_wasCausedByTouch","_toggleClass","_originTimeoutId","focusTarget","_getFocusOrigin","_emitOrigin","relatedTarget","run","rootNodeFocusListeners","_getWindow","FocusMonitor_Factory","composedPath","CdkMonitorFocus","_focusMonitor","cdkFocusChange","_monitorSubscription","monitor","emit","HighContrastMode","NONE","BLACK_ON_WHITE","WHITE_ON_BLACK","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","bodyClasses","mode","getHighContrastMode","HighContrastModeDetector_Factory","A11yModule","highContrastModeDetector","_applyBodyHighContrastModeCssClasses","imports","declarations","exports","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","Directionality","bodyDir","dir","htmlDir","documentElement","Directionality_Factory","Dir","_dir","_isInitialized","old","normalizedValue","_rawDir","providers","provide","useExisting","host","BidiModule","VERSION","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","Number","parseFloat","coerceArray","Array","isArray","coerceCssPixelValue","coerceElement","elementOrRef","DataSource","isDataSource","connect","ArrayDataSource","_data","CollectionViewer","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","size","isEmpty","selected","_selected","sort","added","removed","getMultipleValuesInSingleSelectionError","from","SelectionChange","UniqueSelectionDispatcher","_listeners","name","listener","registered","UniqueSelectionDispatcher_Factory","TreeDataNodeFlattener","MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MAC_META","hasModifierKey","altKey","shiftKey","ctrlKey","metaKey","MutationObserverFactory","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","_","_cleanupObserver","observer","stream","_observeElement","subscription","_unobserveElement","mutations","characterData","childList","subtree","count","disconnect","ContentObserver_Factory","CdkObserveContent","_disabled","_currentSubscription","_subscribe","_unsubscribe","debounce","_debounce","ObserversModule","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","top","left","_isEnabled","_canBeEnabled","_previousScrollPosition","getViewportScrollPosition","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","ScrollStrategy","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategyConfig","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","disable","_overlayRef","detach","overlayRef","scrolled","threshold","_initialScrollPosition","scrollPosition","Math","abs","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","scrollContainers","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategyConfig","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","block","reposition","ScrollStrategyOptions_Factory","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","OriginConnectionPosition","OverlayConnectionPosition","ConnectionPositionPair","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","overlays","_keydownEvents","observers","_isAttached","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","deps","useFactory","isTestEnvironment","__karma__","jasmine","OverlayContainer","container","_containerElement","_createContainer","containerClass","oppositePlatformContainers","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","strategy","sizeConfig","assign","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","requestAnimationFrame","backdropToDetach","timeoutId","finishDetach","cssClasses","isAdd","cssClass","OverlaySizeConfig","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","offset","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","Point","OverlayFit","FallbackPosition","BoundingBoxRect","FlexibleFit","ConnectedPosition","destination","hasOwnProperty","input","split","units","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","slice","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY","CdkOverlayOrigin","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","positionChange","overlayKeydown","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","_buildConfig","keydownEvents","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","p","_createOverlay","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","hasV8BreakIterator","Intl","v8BreakIterator","Platform","_platformId","EDGE","test","navigator","userAgent","chrome","CSS","ANDROID","SAFARI","Platform_Factory","PlatformModule","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","normalizePassiveListenerOptions","RtlScrollAxisType","NORMAL","NEGATED","INVERTED","rtlScrollAxisType","supportsScrollBehavior","getRtlScrollAxisType","scrollContainer","containerStyle","overflow","content","contentStyle","scrollLeft","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","_getShadowRoot","getRootNode","ShadowRoot","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","ComponentType","Portal","_attachedHost","ComponentPortal","component","injector","componentFactoryResolver","TemplatePortal","template","context","DomPortal","PortalOutlet","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","DomPortalHost","CdkPortal","TemplatePortalDirective","CdkPortalOutlet","_viewContainerRef","attached","_getRootNode","_attachedRef","ref","inputs","PortalHostDirective","PortalModule","PortalInjector","_parentInjector","_customTokens","notFoundValue","VIRTUAL_SCROLL_STRATEGY","VirtualScrollStrategy","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","startBuffer","expandStart","ceil","endBuffer","expandEnd","floor","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","DEFAULT_SCROLL_TIME","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","ancestors","getAncestorScrollContainers","scrollingContainers","_scrollableContainsElement","scrollableElement","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_destroyed","_elementScrolled","_applyScrollToOptions","scrollTo","scrollTop","LEFT","RIGHT","DEFAULT_RESIZE_TIME","ViewportScrollPosition","ViewportRuler","_change","_invalidateCache","_updateViewportSize","_viewportSize","output","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_changeDetectorRef","_detachedSubject","_renderedRangeSubject","_orientation","then","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","_calculateSpacerSize","range","onContentRendered","to","isHorizontal","orientation","axisDirection","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","encapsulation","None","changeDetection","OnPush","getSize","rect","CdkVirtualForOf","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","renderedStartIndex","rangeLen","totalSize","view","j","diff","_renderedItems","_updateContext","_applyChanges","find","cdkVirtualForTrackBy","oldDs","newDs","_updateComputedContextProperties","forEachOperation","record","adjustedPreviousIndex","currentIndex","_insertViewForNewItem","$implicit","_cacheView","_detachView","move","forEachIdentityChange","_insertViewFromCache","_createEmbeddedViewAt","first","last","even","odd","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","_cdkVirtualForTrackBy","cdkVirtualForTemplate","CdkScrollableModule","ScrollingModule","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_MatButtonMixinBase","MatButton","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","_getHostElement","color","focusVia","disableRipple","attributes","attribute","ripple","MatAnchor","focusMonitor","animationMode","stopImmediatePropagation","MatButtonModule","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$1","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","GranularSanityChecks","MatCommonModule","sanityChecks","_hasDoneGlobalChecks","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","win","_isTestEnv","_checksAreEnabled","doctype","theme","version","full","CanDisable","mixinDisabled","base","CanColor","HasElementRef","mixinColor","defaultColor","_color","colorPalette","CanDisableRipple","mixinDisableRipple","_disableRipple","HasTabIndex","mixinTabIndex","defaultTabIndex","_tabIndex","CanUpdateErrorState","HasErrorState","mixinErrorState","errorState","stateChanges","oldState","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","HasInitialized","mixinInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","DateAdapter","_localeChanges","isDateInstance","isValid","invalid","locale","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","MAT_DATE_FORMATS","SUPPORTS_INTL_API","DEFAULT_MONTH_NAMES","Éµ0","DEFAULT_DATE_NAMES","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","valueFunction","valuesArray","NativeDateAdapter","matDateLocale","useUtcForDisplay","_clampDate","getFullYear","getDay","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","result","parse","displayFormat","clone","setFullYear","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","obj","NaN","n","str","d","UTC","getHours","getMinutes","getSeconds","getMilliseconds","format","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","useClass","Éµ0$1","MatNativeDateModule","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","HammerInput","HammerStatic","Recognizer","RecognizerStatic","HammerInstance","HammerManager","HammerOptions","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","Éµ0$2","Éµ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","_commonModule","events","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","longpress","time","recognizeWith","recognizer","constructor","inheritances","MatLine","setLines","lines","prefix","setClass","MatLineSetter","MatLineModule","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","state","fadeOutRipple","RippleAnimationConfig","RippleTarget","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","elementOrElementRef","_isPointerDown","_activeRipples","_pointerUpEventsRegistered","containerRect","_containerRect","animationConfig","animation","centered","radius","distanceToFurthestCorner","transitionDuration","enforceStyleRecalculation","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","fadeOut","wasActive","rippleEl","opacity","_triggerElement","_removeTriggerEvents","_registerEvents","_onMousedown","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","touches","changedTouches","terminateOnPointerUp","delay","eventTypes","getPropertyValue","distX","distY","sqrt","RippleGlobalOptions","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","globalOptions","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","fadeOutAll","setupTriggerEvents","trigger","configOrX","_trigger","unbounded","MatRippleModule","MatPseudoCheckbox","MatPseudoCheckboxModule","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","_labelId","label","_uniqueIdCounter","MatOptionSelectionChange","isUserInput","MatOptionParentComponent","MAT_OPTION_PARENT_COMPONENT","MatOption","_parent","group","_active","_mostRecentViewValue","onSelectionChange","_stateChanges","_emitSelectionChangeEvent","viewValue","_selectViaInteraction","multiple","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","MatOptionModule","MAT_LABEL_GLOBAL_OPTIONS","LabelOptions","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","DialogPosition","MatDialogConfig","role","disableClose","ariaDescribedBy","ariaLabelledBy","autoFocus","restoreFocus","closeOnNavigation","matDialogAnimations","dialogContainer","throwMatDialogContentAlreadyAttachedError","MatDialogContainer","_elementFocusedBeforeDialogWasOpened","_state","_animationStateChanged","_setupFocusTrap","_ariaLabelledBy","_containsFocus","focusWasTrapped","_focusTrap","toFocus","toState","_restoreFocus","Default","animations","uniqueId","MatDialogState","OPEN","CLOSING","CLOSED","MatDialogRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","_id","phaseName","_closeFallbackTimeout","_finishDialogClose","detachments","_result","componentInstance","_recaptureFocus","dialogResult","totalTime","_startExitAnimation","_getPositionStrategy","centerHorizontally","centerVertically","addPanelClass","removePanelClass","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","MatDialog","_parentDialog","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","afterAllClosed","openDialogs","_afterAllClosed","componentOrTemplateRef","_applyConfigDefaults","getDialogById","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","afterClosed","_removeOpenDialog","afterOpened","_closeDialogs","dialog","_getOverlayConfig","dialogConfig","global","userInjector","containerPortal","containerRef","instance","_createInjector","contentRef","previousValue","siblings","sibling","dialogs","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","proxiedChange","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogContent","MatDialogActions","MatDialogModule","entryComponents"],"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","file":"default~close-account-close-account-module~excel-table-excel-table-module~generate-emi-generate-emi-~29c9285b-es5.js","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { Injectable, Inject, ÉµÉµdefineInjectable, ÉµÉµinject, QueryList, isDevMode, NgZone, Directive, ElementRef, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Platform, normalizePassiveListenerOptions, _getShadowRoot, PlatformModule } from '@angular/cdk/platform';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/aria-describer/aria-reference.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * IDs are delimited by an empty space, as per the spec.\n * @type {?}\n */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some((/**\n     * @param {?} existingId\n     * @return {?}\n     */\n    existingId => existingId.trim() == id.trim()))) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    /** @type {?} */\n    const filteredIds = ids.filter((/**\n     * @param {?} val\n     * @return {?}\n     */\n    val => val != id.trim()));\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/aria-describer/aria-describer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to register message elements and keep a count of how many registrations have\n * the same message and the reference to the message element used for the `aria-describedby`.\n * @record\n */\nfunction RegisteredMessage() { }\nif (false) {\n    /**\n     * The element containing the message.\n     * @type {?}\n     */\n    RegisteredMessage.prototype.messageElement;\n    /**\n     * The number of elements that reference this message element via `aria-describedby`.\n     * @type {?}\n     */\n    RegisteredMessage.prototype.referenceCount;\n}\n/**\n * ID used for the body container where all messages are appended.\n * @type {?}\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n * @type {?}\n */\nconst messageRegistry = new Map();\n/**\n * Container for all registered messages.\n * @type {?}\n */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    describe(hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            this._setMessageId(message);\n            messageRegistry.set(message, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    }\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    removeDescription(hostElement, message) {\n        if (!this._isElementNode(hostElement)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            /** @type {?} */\n            const registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _createMessageElement(message) {\n        /** @type {?} */\n        const messageElement = this._document.createElement('div');\n        this._setMessageId(messageElement);\n        messageElement.textContent = message;\n        this._createMessagesContainer();\n        (/** @type {?} */ (messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement, referenceCount: 0 });\n    }\n    /**\n     * Assigns a unique ID to an element, if it doesn't have one already.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setMessageId(element) {\n        if (!element.id) {\n            element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n        }\n    }\n    /**\n     * Deletes the message element from the global messages container.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _deleteMessageElement(message) {\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    }\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @private\n     * @return {?}\n     */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            /** @type {?} */\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                (/** @type {?} */ (preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /**\n     * Deletes the global messages container.\n     * @private\n     * @return {?}\n     */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        /** @type {?} */\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter((/**\n         * @param {?} id\n         * @return {?}\n         */\n        id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0));\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _addMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _removeMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _isElementDescribedByMessage(element, message) {\n        /** @type {?} */\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        /** @type {?} */\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        /** @type {?} */\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /**\n     * Checks whether a node is an Element node.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ AriaDescriber.Éµprov = ÉµÉµdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ÉµÉµinject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AriaDescriber.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/list-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This interface is for items that can be passed to a ListKeyManager.\n * @record\n */\nfunction ListKeyManagerOption() { }\nif (false) {\n    /**\n     * Whether the option is disabled.\n     * @type {?|undefined}\n     */\n    ListKeyManagerOption.prototype.disabled;\n    /**\n     * Gets the label for this option.\n     * @return {?}\n     */\n    ListKeyManagerOption.prototype.getLabel = function () { };\n}\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nclass ListKeyManager {\n    /**\n     * @param {?} _items\n     */\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.disabled);\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((/**\n             * @param {?} newItems\n             * @return {?}\n             */\n            (newItems) => {\n                if (this._activeItem) {\n                    /** @type {?} */\n                    const itemArray = newItems.toArray();\n                    /** @type {?} */\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {THIS}\n     */\n    skipPredicate(predicate) {\n        (/** @type {?} */ (this))._skipPredicateFn = predicate;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {THIS}\n     */\n    withWrap(shouldWrap = true) {\n        (/** @type {?} */ (this))._wrap = shouldWrap;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {THIS}\n     */\n    withVerticalOrientation(enabled = true) {\n        (/** @type {?} */ (this))._vertical = enabled;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {THIS}\n     */\n    withHorizontalOrientation(direction) {\n        (/** @type {?} */ (this))._horizontal = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} keys\n     * @return {THIS}\n     */\n    withAllowedModifierKeys(keys) {\n        (/** @type {?} */ (this))._allowedModifierKeys = keys;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {THIS}\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((/** @type {?} */ (this))._items.length && (/** @type {?} */ (this))._items.some((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        (/** @type {?} */ (this))._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        (/** @type {?} */ (this))._typeaheadSubscription = (/** @type {?} */ (this))._letterKeyStream.pipe(tap((/**\n         * @param {?} letter\n         * @return {?}\n         */\n        letter => (/** @type {?} */ (this))._pressedLetters.push(letter))), debounceTime(debounceInterval), filter((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.length > 0)), map((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.join('')))).subscribe((/**\n         * @param {?} inputString\n         * @return {?}\n         */\n        inputString => {\n            /** @type {?} */\n            const items = (/** @type {?} */ (this))._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                /** @type {?} */\n                const index = ((/** @type {?} */ (this))._activeItemIndex + i) % items.length;\n                /** @type {?} */\n                const item = items[index];\n                if (!(/** @type {?} */ (this))._skipPredicateFn(item) &&\n                    (/** @type {?} */ (item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    (/** @type {?} */ (this)).setActiveItem(index);\n                    break;\n                }\n            }\n            (/** @type {?} */ (this))._pressedLetters = [];\n        }));\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        /** @type {?} */\n        const previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    onKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        /** @type {?} */\n        const isModifierAllowed = modifiers.every((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        }));\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /**\n     * Index of the currently active item.\n     * @return {?}\n     */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /**\n     * The active item.\n     * @return {?}\n     */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /**\n     * Gets whether the user is currently typing into the manager using the typeahead feature.\n     * @return {?}\n     */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    updateActiveItem(item) {\n        /** @type {?} */\n        const itemArray = this._getItemsArray();\n        /** @type {?} */\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        /** @type {?} */\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInWrapMode(delta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            /** @type {?} */\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            /** @type {?} */\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @private\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /**\n     * Returns the items as an array.\n     * @private\n     * @return {?}\n     */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._activeItemIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._activeItem;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._wrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._letterKeyStream;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._typeaheadSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._horizontal;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._allowedModifierKeys;\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._skipPredicateFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._pressedLetters;\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     * @type {?}\n     */\n    ListKeyManager.prototype.tabOut;\n    /**\n     * Stream that emits whenever the active item of the list manager changes.\n     * @type {?}\n     */\n    ListKeyManager.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._items;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/activedescendant-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n * @record\n */\nfunction Highlightable() { }\nif (false) {\n    /**\n     * Applies the styles for an active item to this item.\n     * @return {?}\n     */\n    Highlightable.prototype.setActiveStyles = function () { };\n    /**\n     * Applies the styles for an inactive item to this item.\n     * @return {?}\n     */\n    Highlightable.prototype.setInactiveStyles = function () { };\n}\n/**\n * @template T\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/focus-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply its label.\n * @record\n */\nfunction FocusableOption() { }\nif (false) {\n    /**\n     * Focuses the `FocusableOption`.\n     * @param {?=} origin\n     * @return {?}\n     */\n    FocusableOption.prototype.focus = function (origin) { };\n}\n/**\n * @template T\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {THIS}\n     */\n    setFocusOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusKeyManager.prototype._origin;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/interactivity-checker/interactivity-checker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server ð\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        /** @type {?} */\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            /** @type {?} */\n            const frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        /** @type {?} */\n        let nodeName = element.nodeName.toLowerCase();\n        /** @type {?} */\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    isFocusable(element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    }\n}\nInteractivityChecker.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ InteractivityChecker.Éµprov = ÉµÉµdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ÉµÉµinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    InteractivityChecker.prototype._platform;\n}\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return (/** @type {?} */ (window.frameElement));\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    /** @type {?} */\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    /** @type {?} */\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    /** @type {?} */\n    let inputType = nodeName === 'input' && ((/** @type {?} */ (element))).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * \\@breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} deferAnchors\n     */\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusLastTabbableElement());\n        this.endAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusFirstTabbableElement());\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    destroy() {\n        /** @type {?} */\n        const startAnchor = this._startAnchor;\n        /** @type {?} */\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                (/** @type {?} */ (this._startAnchor)).addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                (/** @type {?} */ (this._endAnchor)).addEventListener('focus', this.endAnchorListener);\n            }\n        }));\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusInitialElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusFirstTabbableElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusLastTabbableElement())));\n        }));\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @private\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        let markers = (/** @type {?} */ (this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`)));\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        const redirectToElement = (/** @type {?} */ (this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`)));\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if (isDevMode() && !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusFirstTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusLastTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates an anchor element.\n     * @private\n     * @return {?}\n     */\n    _createAnchor() {\n        /** @type {?} */\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @private\n     * @param {?} isEnabled Whether the focus trap is enabled.\n     * @param {?} anchor Anchor on which to toggle the tabindex.\n     * @return {?}\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @protected\n     * @param {?} enabled\n     * @return {?}\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /**\n     * Executes a function when the zone is stable.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._startAnchor;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._endAnchor;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._hasAttached;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype.startAnchorListener;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype.endAnchorListener;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype._enabled;\n    /** @type {?} */\n    FocusTrap.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._checker;\n    /** @type {?} */\n    FocusTrap.prototype._ngZone;\n    /** @type {?} */\n    FocusTrap.prototype._document;\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * \\@breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ FocusTrapFactory.Éµprov = ÉµÉµdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ÉµÉµinject(InteractivityChecker), ÉµÉµinject(NgZone), ÉµÉµinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._checker;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._ngZone;\n}\n/**\n * Directive for trapping focus within a region.\n */\nclass CdkTrapFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _document\n     */\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this.focusTrap.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatially move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     * @return {?}\n     */\n    get autoCapture() { return this._autoCapture; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = (/** @type {?} */ (this._document.activeElement));\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n}\nCdkTrapFocus.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus',\n            },] }\n];\n/** @nocollapse */\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\nif (false) {\n    /** @type {?} */\n    CdkTrapFocus.ngAcceptInputType_enabled;\n    /** @type {?} */\n    CdkTrapFocus.ngAcceptInputType_autoCapture;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._document;\n    /**\n     * Underlying FocusTrap instance.\n     * @type {?}\n     */\n    CdkTrapFocus.prototype.focusTrap;\n    /**\n     * Previously focused element to restore focus to upon destroy when using autoCapture.\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._previouslyFocusedElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._autoCapture;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._focusTrapFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _focusTrapManager\n     * @param {?} _inertStrategy\n     * @param {?} config\n     */\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /**\n     * Whether the FocusTrap is enabled.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /**\n     * Notifies the FocusTrapManager that this FocusTrap will be destroyed.\n     * @return {?}\n     */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /**\n     * \\@docs-private Implemented as part of ManagedFocusTrap.\n     * @return {?}\n     */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /**\n     * \\@docs-private Implemented as part of ManagedFocusTrap.\n     * @return {?}\n     */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrap.prototype._focusTrapManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrap.prototype._inertStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/polyfill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * IE 11 compatible closest implementation that is able to start from non-Element Nodes.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction closest(element, selector) {\n    if (!(element instanceof Node)) {\n        return null;\n    }\n    /** @type {?} */\n    let curr = element;\n    while (curr != null && !(curr instanceof Element)) {\n        curr = curr.parentNode;\n    }\n    return curr && (/** @type {?} */ ((hasNativeClosest ?\n        curr.closest(selector) : polyfillClosest(curr, selector))));\n}\n/**\n * Polyfill for browsers without Element.closest.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction polyfillClosest(element, selector) {\n    /** @type {?} */\n    let curr = element;\n    while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n        curr = curr.parentNode;\n    }\n    return (/** @type {?} */ ((curr || null)));\n}\n/** @type {?} */\nconst hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;\n/**\n * IE 11 compatible matches implementation.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction matches(element, selector) {\n    return element.matches ?\n        element.matches(selector) :\n        ((/** @type {?} */ (element)))['msMatchesSelector'](selector);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/event-listener-inert-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /**\n         * Focus event handler.\n         */\n        this._listener = null;\n    }\n    /**\n     * Adds a document event listener that keeps focus inside the FocusTrap.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        }\n        this._listener = (/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => this._trapFocus(focusTrap, e));\n        focusTrap._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            focusTrap._document.addEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        }));\n    }\n    /**\n     * Removes the event listener added in preventFocus.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     * @private\n     * @param {?} focusTrap\n     * @param {?} event\n     * @return {?}\n     */\n    _trapFocus(focusTrap, event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            }));\n        }\n    }\n}\nif (false) {\n    /**\n     * Focus event handler.\n     * @type {?}\n     * @private\n     */\n    EventListenerFocusTrapInertStrategy.prototype._listener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for creating a ConfigurableFocusTrap.\n */\nclass ConfigurableFocusTrapConfig {\n    constructor() {\n        /**\n         * Whether to defer the creation of FocusTrap elements to be\n         * done manually by the user. Default is to create them\n         * automatically.\n         */\n        this.defer = false;\n    }\n}\nif (false) {\n    /**\n     * Whether to defer the creation of FocusTrap elements to be\n     * done manually by the user. Default is to create them\n     * automatically.\n     * @type {?}\n     */\n    ConfigurableFocusTrapConfig.prototype.defer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap-inert-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the inert strategy.\n * @type {?}\n */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n/**\n * A strategy that dictates how FocusTrap should prevent elements\n * outside of the FocusTrap from being focused.\n * @record\n */\nfunction FocusTrapInertStrategy() { }\nif (false) {\n    /**\n     * Makes all elements outside focusTrap unfocusable.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    FocusTrapInertStrategy.prototype.preventFocus = function (focusTrap) { };\n    /**\n     * Reverts elements made unfocusable by preventFocus to their previous state.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    FocusTrapInertStrategy.prototype.allowFocus = function (focusTrap) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A FocusTrap managed by FocusTrapManager.\n * Implemented by ConfigurableFocusTrap to avoid circular dependency.\n * @record\n */\nfunction ManagedFocusTrap() { }\nif (false) {\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype._enable = function () { };\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype._disable = function () { };\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype.focusInitialElementWhenReady = function () { };\n}\n/**\n * Injectable that ensures only the most recently enabled FocusTrap is active.\n */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter((/**\n         * @param {?} ft\n         * @return {?}\n         */\n        (ft) => ft !== focusTrap));\n        /** @type {?} */\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        /** @type {?} */\n        const stack = this._focusTrapStack;\n        /** @type {?} */\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ FocusTrapManager.Éµprov = ÉµÉµdefineInjectable({ factory: function FocusTrapManager_Factory() { return new FocusTrapManager(); }, token: FocusTrapManager, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapManager.prototype._focusTrapStack;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap-factory.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that allows easy instantiation of configurable focus traps.\n */\nclass ConfigurableFocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _focusTrapManager\n     * @param {?} _document\n     * @param {?=} _inertStrategy\n     */\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    /**\n     * @param {?} element\n     * @param {?=} config\n     * @return {?}\n     */\n    create(element, config = new ConfigurableFocusTrapConfig()) {\n        /** @type {?} */\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = new ConfigurableFocusTrapConfig();\n            configObject.defer = config;\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nConfigurableFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: FocusTrapManager },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_TRAP_INERT_STRATEGY,] }] }\n];\n/** @nocollapse */ ConfigurableFocusTrapFactory.Éµprov = ÉµÉµdefineInjectable({ factory: function ConfigurableFocusTrapFactory_Factory() { return new ConfigurableFocusTrapFactory(ÉµÉµinject(InteractivityChecker), ÉµÉµinject(NgZone), ÉµÉµinject(FocusTrapManager), ÉµÉµinject(DOCUMENT), ÉµÉµinject(FOCUS_TRAP_INERT_STRATEGY, 8)); }, token: ConfigurableFocusTrapFactory, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._inertStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._checker;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._focusTrapManager;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/live-announcer/live-announcer-tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/**\n * Object that can be used to configure the default options for the LiveAnnouncer.\n * @record\n */\nfunction LiveAnnouncerDefaultOptions() { }\nif (false) {\n    /**\n     * Default politeness for the announcements.\n     * @type {?|undefined}\n     */\n    LiveAnnouncerDefaultOptions.prototype.politeness;\n    /**\n     * Default duration for the announcement messages.\n     * @type {?|undefined}\n     */\n    LiveAnnouncerDefaultOptions.prototype.duration;\n}\n/**\n * Injection token that can be used to configure the default options for the LiveAnnouncer.\n * @type {?}\n */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/live-announcer/live-announcer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LiveAnnouncer {\n    /**\n     * @param {?} elementToken\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} _defaultOptions\n     */\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * @param {?} message\n     * @param {...?} args\n     * @return {?}\n     */\n    announce(message, ...args) {\n        /** @type {?} */\n        const defaultOptions = this._defaultOptions;\n        /** @type {?} */\n        let politeness;\n        /** @type {?} */\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => this.clear()), duration);\n                    }\n                }), 100);\n            }));\n        }));\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     * @return {?}\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = (/** @type {?} */ (null));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLiveElement() {\n        /** @type {?} */\n        const elementClass = 'cdk-live-announcer-element';\n        /** @type {?} */\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        /** @type {?} */\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            (/** @type {?} */ (previousElements[i].parentNode)).removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ LiveAnnouncer.Éµprov = ÉµÉµdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ÉµÉµinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ÉµÉµinject(NgZone), ÉµÉµinject(DOCUMENT), ÉµÉµinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._liveElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._previousTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._defaultOptions;\n}\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _liveAnnouncer\n     * @param {?} _contentObserver\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    /**\n     * The aria-live politeness level to use when announcing messages.\n     * @return {?}\n     */\n    get politeness() { return this._politeness; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set politeness(value) {\n        this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    /** @type {?} */\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                }));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive',\n            },] }\n];\n/** @nocollapse */\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._politeness;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._previousAnnouncedText;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._subscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._liveAnnouncer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._contentObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/fake-mousedown.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-monitor/focus-monitor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\n/** @type {?} */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Corresponds to the options that can be passed to the native `focus` event.\n * via https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\n * @record\n */\nfunction FocusOptions() { }\nif (false) {\n    /**\n     * Whether the browser should scroll to the element when it is focused.\n     * @type {?|undefined}\n     */\n    FocusOptions.prototype.preventScroll;\n}\n/** @enum {number} */\nconst FocusMonitorDetectionMode = {\n    /**\n     * Any mousedown, keydown, or touchstart event that happened in the previous\n     * tick or the current tick will be used to assign a focus event's origin (to\n     * either mouse, keyboard, or touch). This is the default option.\n     */\n    IMMEDIATE: 0,\n    /**\n     * A focus event's origin is always attributed to the last corresponding\n     * mousedown, keydown, or touchstart event, no matter how long ago it occured.\n     */\n    EVENTUAL: 1,\n};\n/**\n * Injectable service-level options for FocusMonitor.\n * @record\n */\nfunction FocusMonitorOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FocusMonitorOptions.prototype.detectionMode;\n}\n/**\n * InjectionToken for FocusMonitorOptions.\n * @type {?}\n */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n * @type {?}\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nclass FocusMonitor {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} document\n     * @param {?} options\n     */\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        });\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                // In some cases screen readers fire fake `mousedown` events instead of `keydown`.\n                // Resolve the focus source to `keyboard` if we detect one of them.\n                /** @type {?} */\n                const source = isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse';\n                this._setOriginForCurrentEventQueue(source);\n            }\n        });\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            this._lastTouchTarget = getTarget(event);\n            this._touchTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._lastTouchTarget = null), TOUCH_BUFFER_MS);\n        });\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = (/**\n         * @return {?}\n         */\n        () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._windowFocused = false));\n        });\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const target = getTarget(event);\n            /** @type {?} */\n            const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                handler.call(this, (/** @type {?} */ (event)), element);\n            }\n        });\n        this._document = document;\n        this._detectionMode = (options === null || options === void 0 ? void 0 : options.detectionMode) || 0 /* IMMEDIATE */;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    monitor(element, checkChildren = false) {\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return of(null);\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        /** @type {?} */\n        const rootNode = ((/** @type {?} */ (_getShadowRoot(nativeElement)))) || this._getDocument();\n        /** @type {?} */\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject.asObservable();\n        }\n        // Create monitored element info.\n        /** @type {?} */\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject.asObservable();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    stopMonitoring(element) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focusVia(element, origin, options) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            ((/** @type {?} */ (nativeElement))).focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._elementInfo.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getFocusOrigin(event) {\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        if (this._origin) {\n            return this._origin;\n        }\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        else if (this._wasCausedByTouch(event)) {\n            return 'touch';\n        }\n        else {\n            return 'program';\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @private\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    _setClasses(element, origin) {\n        this._toggleClass(element, 'cdk-focused', !!origin);\n        this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n        this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n        this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n        this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * If the detection mode is 'eventual', the origin is never cleared.\n     * @private\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._origin = origin;\n            if (this._detectionMode === 0 /* IMMEDIATE */) {\n                // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n                // tick after the interaction event fired. To ensure the focus origin is always correct,\n                // the focus origin will be determined at the beginning of the next tick.\n                this._originTimeoutId = setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._origin = null), 1);\n            }\n        }));\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @private\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        /** @type {?} */\n        const focusTarget = getTarget(event);\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @private\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== getTarget(event))) {\n            return;\n        }\n        /** @type {?} */\n        const origin = this._getFocusOrigin(event);\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    /**\n     * @private\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    _emitOrigin(subject, origin) {\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => subject.next(origin)));\n    }\n    /**\n     * @private\n     * @param {?} elementInfo\n     * @return {?}\n     */\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const rootNode = elementInfo.rootNode;\n        /** @type {?} */\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            }));\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const document = this._getDocument();\n                /** @type {?} */\n                const window = this._getWindow();\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @param {?} elementInfo\n     * @return {?}\n     */\n    _removeGlobalListeners(elementInfo) {\n        /** @type {?} */\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            /** @type {?} */\n            const rootNodeFocusListeners = (/** @type {?} */ (this._rootNodeFocusListenerCount.get(rootNode)));\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            /** @type {?} */\n            const document = this._getDocument();\n            /** @type {?} */\n            const window = this._getWindow();\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n}\nFocusMonitor.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_MONITOR_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ FocusMonitor.Éµprov = ÉµÉµdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ÉµÉµinject(NgZone), ÉµÉµinject(Platform), ÉµÉµinject(DOCUMENT, 8), ÉµÉµinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); }, token: FocusMonitor, providedIn: \"root\" });\nif (false) {\n    /**\n     * The focus origin that the next focus event is a result of.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._origin;\n    /**\n     * The FocusOrigin of the last focus event tracked by the FocusMonitor.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._lastFocusOrigin;\n    /**\n     * Whether the window has just been focused.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocused;\n    /**\n     * The target of the last touch event.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._lastTouchTarget;\n    /**\n     * The timeout id of the touch timeout, used to cancel timeout later.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._touchTimeoutId;\n    /**\n     * The timeout id of the window focus timeout.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocusTimeoutId;\n    /**\n     * The timeout id of the origin clearing timeout.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._originTimeoutId;\n    /**\n     * Map of elements being monitored to their info.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._elementInfo;\n    /**\n     * The number of elements currently being monitored.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._monitoredElementCount;\n    /**\n     * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n     * as well as the number of monitored elements that they contain. We have to treat focus/blur\n     * handlers differently from the rest of the events, because the browser won't emit events\n     * to the document when focus moves inside of a shadow root.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._rootNodeFocusListenerCount;\n    /**\n     * The specified detection mode, used for attributing the origin of a focus\n     * event.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._detectionMode;\n    /**\n     * Event listener for `keydown` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentKeydownListener;\n    /**\n     * Event listener for `mousedown` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentMousedownListener;\n    /**\n     * Event listener for `touchstart` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentTouchstartListener;\n    /**\n     * Event listener for `focus` events on the window.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocusListener;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    FocusMonitor.prototype._document;\n    /**\n     * Event listener for `focus` and 'blur' events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._rootNodeFocusAndBlurListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._platform;\n}\n/**\n * Gets the target of an event, accounting for Shadow DOM.\n * @param {?} event\n * @return {?}\n */\nfunction getTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (/** @type {?} */ ((event.composedPath ? event.composedPath()[0] : event.target)));\n}\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     */\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => this.cdkFocusChange.emit(origin)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._monitorSubscription.unsubscribe();\n    }\n}\nCdkMonitorFocus.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n            },] }\n];\n/** @nocollapse */\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._monitorSubscription;\n    /** @type {?} */\n    CdkMonitorFocus.prototype.cdkFocusChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/high-contrast-mode/high-contrast-mode-detector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HighContrastMode = {\n    NONE: 0,\n    BLACK_ON_WHITE: 1,\n    WHITE_ON_BLACK: 2,\n};\n/**\n * CSS class applied to the document body when in black-on-white high-contrast mode.\n * @type {?}\n */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/**\n * CSS class applied to the document body when in white-on-black high-contrast mode.\n * @type {?}\n */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/**\n * CSS class applied to the document body when in high-contrast mode.\n * @type {?}\n */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    /**\n     * @param {?} _platform\n     * @param {?} document\n     */\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * Gets the current high-contrast-mode for the page.\n     * @return {?}\n     */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        /** @type {?} */\n        const documentWindow = this._document.defaultView || window;\n        /** @type {?} */\n        const computedStyle = (documentWindow && documentWindow.getComputedStyle) ?\n            documentWindow.getComputedStyle(testElement) : null;\n        /** @type {?} */\n        const computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n        this._document.body.removeChild(testElement);\n        switch (computedColor) {\n            case 'rgb(0,0,0)': return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)': return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /**\n     * Applies CSS classes indicating high-contrast mode to document body (browser-only).\n     * @return {?}\n     */\n    _applyBodyHighContrastModeCssClasses() {\n        if (this._platform.isBrowser && this._document.body) {\n            /** @type {?} */\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            /** @type {?} */\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nHighContrastModeDetector.ctorParameters = () => [\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ HighContrastModeDetector.Éµprov = ÉµÉµdefineInjectable({ factory: function HighContrastModeDetector_Factory() { return new HighContrastModeDetector(ÉµÉµinject(Platform), ÉµÉµinject(DOCUMENT)); }, token: HighContrastModeDetector, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HighContrastModeDetector.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    HighContrastModeDetector.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/a11y-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass A11yModule {\n    /**\n     * @param {?} highContrastModeDetector\n     */\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n            },] }\n];\n/** @nocollapse */\nA11yModule.ctorParameters = () => [\n    { type: HighContrastModeDetector }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, InteractivityChecker, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, TOUCH_BUFFER_MS, isFakeMousedownFromScreenReader, FocusTrapManager as Éµangular_material_src_cdk_a11y_a11y_a, ConfigurableFocusTrapConfig as Éµangular_material_src_cdk_a11y_a11y_b };\n//# sourceMappingURL=a11y.js.map\n","import { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, ÉµÉµdefineInjectable, ÉµÉµinject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/dir-document-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/directionality.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.Éµprov = ÉµÉµdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ÉµÉµinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\nif (false) {\n    /**\n     * The current 'ltr' or 'rtl' value.\n     * @type {?}\n     */\n    Directionality.prototype.value;\n    /**\n     * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n     * @type {?}\n     */\n    Directionality.prototype.change;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/dir.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.decorators = [\n    { type: Directive, args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir',\n            },] }\n];\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\nif (false) {\n    /**\n     * Normalized direction that accounts for invalid/unsupported values.\n     * @type {?}\n     * @private\n     */\n    Dir.prototype._dir;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    Dir.prototype._isInitialized;\n    /**\n     * Direction as passed in by the consumer.\n     * @type {?}\n     */\n    Dir.prototype._rawDir;\n    /**\n     * Event emitted when the direction changes.\n     * @type {?}\n     */\n    Dir.prototype.change;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/bidi-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [Dir],\n                declarations: [Dir],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as Éµangular_material_src_cdk_bidi_bidi_a };\n//# sourceMappingURL=bidi.js.map\n","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('9.2.4');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n//# sourceMappingURL=cdk.js.map\n","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty };\n//# sourceMappingURL=coercion.js.map\n","import { isObservable, of, Subject } from 'rxjs';\nimport { Injectable, ÉµÉµdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n * @template T\n */\nclass DataSource {\n}\nif (false) {\n    /**\n     * Connects a collection viewer (such as a data-table) to this data source. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    DataSource.prototype.connect = function (collectionViewer) { };\n    /**\n     * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n     * to perform any clean-up or tear-down operations when a view is being destroyed.\n     *\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?}\n     */\n    DataSource.prototype.disconnect = function (collectionViewer) { };\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/array-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ArrayDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/collection-viewer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for any component that provides a view of some data collection and wants to provide\n * information regarding the view and any changes made.\n * @record\n */\nfunction CollectionViewer() { }\nif (false) {\n    /**\n     * A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the\n     * data. The `start` index is inclusive, while the `end` is exclusive.\n     * @type {?}\n     */\n    CollectionViewer.prototype.viewChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/selection-model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\nif (false) {\n    /**\n     * Currently-selected values.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selection;\n    /**\n     * Keeps track of the deselected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._deselectedToEmit;\n    /**\n     * Keeps track of the selected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selectedToEmit;\n    /**\n     * Cache for the array value of the selected items.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selected;\n    /**\n     * Event emitted when the value has changed.\n     * @type {?}\n     */\n    SelectionModel.prototype.changed;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._emitChanges;\n}\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction SelectionChange() { }\nif (false) {\n    /**\n     * Model that dispatched the event.\n     * @type {?}\n     */\n    SelectionChange.prototype.source;\n    /**\n     * Options that were added to the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.added;\n    /**\n     * Options that were removed from the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.removed;\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/unique-selection-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ UniqueSelectionDispatcher.Éµprov = ÉµÉµdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/tree-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for a class that can flatten hierarchical structured data and re-expand the flattened\n * data back into its original structure. Should be used in conjunction with the cdk-tree.\n * @record\n * @template T\n */\nfunction TreeDataNodeFlattener() { }\nif (false) {\n    /**\n     * Transforms a set of hierarchical structured data into a flattened data array.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.flattenNodes = function (structuredData) { };\n    /**\n     * Expands a flattened array of data into its hierarchical form using the provided expansion\n     * model.\n     * @param {?} nodes\n     * @param {?} expansionModel\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.expandFlattenedNodes = function (nodes, expansionModel) { };\n    /**\n     * Put node descendants of node in array.\n     * If `onlyExpandable` is true, then only process expandable descendants.\n     * @param {?} node\n     * @param {?} nodes\n     * @param {?} onlyExpandable\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.nodeDescendents = function (node, nodes, onlyExpandable) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n//# sourceMappingURL=collections.js.map\n","/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/keycodes.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAC_ENTER = 3;\n/** @type {?} */\nconst BACKSPACE = 8;\n/** @type {?} */\nconst TAB = 9;\n/** @type {?} */\nconst NUM_CENTER = 12;\n/** @type {?} */\nconst ENTER = 13;\n/** @type {?} */\nconst SHIFT = 16;\n/** @type {?} */\nconst CONTROL = 17;\n/** @type {?} */\nconst ALT = 18;\n/** @type {?} */\nconst PAUSE = 19;\n/** @type {?} */\nconst CAPS_LOCK = 20;\n/** @type {?} */\nconst ESCAPE = 27;\n/** @type {?} */\nconst SPACE = 32;\n/** @type {?} */\nconst PAGE_UP = 33;\n/** @type {?} */\nconst PAGE_DOWN = 34;\n/** @type {?} */\nconst END = 35;\n/** @type {?} */\nconst HOME = 36;\n/** @type {?} */\nconst LEFT_ARROW = 37;\n/** @type {?} */\nconst UP_ARROW = 38;\n/** @type {?} */\nconst RIGHT_ARROW = 39;\n/** @type {?} */\nconst DOWN_ARROW = 40;\n/** @type {?} */\nconst PLUS_SIGN = 43;\n/** @type {?} */\nconst PRINT_SCREEN = 44;\n/** @type {?} */\nconst INSERT = 45;\n/** @type {?} */\nconst DELETE = 46;\n/** @type {?} */\nconst ZERO = 48;\n/** @type {?} */\nconst ONE = 49;\n/** @type {?} */\nconst TWO = 50;\n/** @type {?} */\nconst THREE = 51;\n/** @type {?} */\nconst FOUR = 52;\n/** @type {?} */\nconst FIVE = 53;\n/** @type {?} */\nconst SIX = 54;\n/** @type {?} */\nconst SEVEN = 55;\n/** @type {?} */\nconst EIGHT = 56;\n/** @type {?} */\nconst NINE = 57;\n/** @type {?} */\nconst FF_SEMICOLON = 59;\n// Firefox (Gecko) fires this for semicolon instead of 186\n/** @type {?} */\nconst FF_EQUALS = 61;\n// Firefox (Gecko) fires this for equals instead of 187\n/** @type {?} */\nconst QUESTION_MARK = 63;\n/** @type {?} */\nconst AT_SIGN = 64;\n/** @type {?} */\nconst A = 65;\n/** @type {?} */\nconst B = 66;\n/** @type {?} */\nconst C = 67;\n/** @type {?} */\nconst D = 68;\n/** @type {?} */\nconst E = 69;\n/** @type {?} */\nconst F = 70;\n/** @type {?} */\nconst G = 71;\n/** @type {?} */\nconst H = 72;\n/** @type {?} */\nconst I = 73;\n/** @type {?} */\nconst J = 74;\n/** @type {?} */\nconst K = 75;\n/** @type {?} */\nconst L = 76;\n/** @type {?} */\nconst M = 77;\n/** @type {?} */\nconst N = 78;\n/** @type {?} */\nconst O = 79;\n/** @type {?} */\nconst P = 80;\n/** @type {?} */\nconst Q = 81;\n/** @type {?} */\nconst R = 82;\n/** @type {?} */\nconst S = 83;\n/** @type {?} */\nconst T = 84;\n/** @type {?} */\nconst U = 85;\n/** @type {?} */\nconst V = 86;\n/** @type {?} */\nconst W = 87;\n/** @type {?} */\nconst X = 88;\n/** @type {?} */\nconst Y = 89;\n/** @type {?} */\nconst Z = 90;\n/** @type {?} */\nconst META = 91;\n// WIN_KEY_LEFT\n/** @type {?} */\nconst MAC_WK_CMD_LEFT = 91;\n/** @type {?} */\nconst MAC_WK_CMD_RIGHT = 93;\n/** @type {?} */\nconst CONTEXT_MENU = 93;\n/** @type {?} */\nconst NUMPAD_ZERO = 96;\n/** @type {?} */\nconst NUMPAD_ONE = 97;\n/** @type {?} */\nconst NUMPAD_TWO = 98;\n/** @type {?} */\nconst NUMPAD_THREE = 99;\n/** @type {?} */\nconst NUMPAD_FOUR = 100;\n/** @type {?} */\nconst NUMPAD_FIVE = 101;\n/** @type {?} */\nconst NUMPAD_SIX = 102;\n/** @type {?} */\nconst NUMPAD_SEVEN = 103;\n/** @type {?} */\nconst NUMPAD_EIGHT = 104;\n/** @type {?} */\nconst NUMPAD_NINE = 105;\n/** @type {?} */\nconst NUMPAD_MULTIPLY = 106;\n/** @type {?} */\nconst NUMPAD_PLUS = 107;\n/** @type {?} */\nconst NUMPAD_MINUS = 109;\n/** @type {?} */\nconst NUMPAD_PERIOD = 110;\n/** @type {?} */\nconst NUMPAD_DIVIDE = 111;\n/** @type {?} */\nconst F1 = 112;\n/** @type {?} */\nconst F2 = 113;\n/** @type {?} */\nconst F3 = 114;\n/** @type {?} */\nconst F4 = 115;\n/** @type {?} */\nconst F5 = 116;\n/** @type {?} */\nconst F6 = 117;\n/** @type {?} */\nconst F7 = 118;\n/** @type {?} */\nconst F8 = 119;\n/** @type {?} */\nconst F9 = 120;\n/** @type {?} */\nconst F10 = 121;\n/** @type {?} */\nconst F11 = 122;\n/** @type {?} */\nconst F12 = 123;\n/** @type {?} */\nconst NUM_LOCK = 144;\n/** @type {?} */\nconst SCROLL_LOCK = 145;\n/** @type {?} */\nconst FIRST_MEDIA = 166;\n/** @type {?} */\nconst FF_MINUS = 173;\n/** @type {?} */\nconst MUTE = 173;\n// Firefox (Gecko) fires 181 for MUTE\n/** @type {?} */\nconst VOLUME_DOWN = 174;\n// Firefox (Gecko) fires 182 for VOLUME_DOWN\n/** @type {?} */\nconst VOLUME_UP = 175;\n// Firefox (Gecko) fires 183 for VOLUME_UP\n/** @type {?} */\nconst FF_MUTE = 181;\n/** @type {?} */\nconst FF_VOLUME_DOWN = 182;\n/** @type {?} */\nconst LAST_MEDIA = 183;\n/** @type {?} */\nconst FF_VOLUME_UP = 183;\n/** @type {?} */\nconst SEMICOLON = 186;\n// Firefox (Gecko) fires 59 for SEMICOLON\n/** @type {?} */\nconst EQUALS = 187;\n// Firefox (Gecko) fires 61 for EQUALS\n/** @type {?} */\nconst COMMA = 188;\n/** @type {?} */\nconst DASH = 189;\n// Firefox (Gecko) fires 173 for DASH/MINUS\n/** @type {?} */\nconst SLASH = 191;\n/** @type {?} */\nconst APOSTROPHE = 192;\n/** @type {?} */\nconst TILDE = 192;\n/** @type {?} */\nconst OPEN_SQUARE_BRACKET = 219;\n/** @type {?} */\nconst BACKSLASH = 220;\n/** @type {?} */\nconst CLOSE_SQUARE_BRACKET = 221;\n/** @type {?} */\nconst SINGLE_QUOTE = 222;\n/** @type {?} */\nconst MAC_META = 224;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/modifiers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param {?} event Event to be checked.\n * @param {...?} modifiers\n * @return {?}\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => event[modifier]));\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n//# sourceMappingURL=keycodes.js.map\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Injectable, ÉµÉµdefineInjectable, ÉµÉµinject, EventEmitter, Directive, ElementRef, NgZone, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/observers/observe-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nclass MutationObserverFactory {\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ MutationObserverFactory.Éµprov = ÉµÉµdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nclass ContentObserver {\n    /**\n     * @param {?} _mutationObserverFactory\n     */\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        (_, element) => this._cleanupObserver(element)));\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    observe(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const stream = this._observeElement(element);\n            /** @type {?} */\n            const subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            });\n        }));\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            const stream = new Subject();\n            /** @type {?} */\n            const observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            mutations => stream.next(mutations)));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = (/** @type {?} */ (this._observedElements.get(element)));\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/** @nocollapse */ ContentObserver.Éµprov = ÉµÉµdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ÉµÉµinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\nif (false) {\n    /**\n     * Keeps track of the existing MutationObservers so they can be reused.\n     * @type {?}\n     * @private\n     */\n    ContentObserver.prototype._observedElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentObserver.prototype._mutationObserverFactory;\n}\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * @param {?} _contentObserver\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /**\n     * Debounce interval for emitting the changes.\n     * @return {?}\n     */\n    get debounce() { return this._debounce; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribe() {\n        this._unsubscribe();\n        /** @type {?} */\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent',\n            },] }\n];\n/** @nocollapse */\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    CdkObserveContent.ngAcceptInputType_disabled;\n    /** @type {?} */\n    CdkObserveContent.ngAcceptInputType_debounce;\n    /**\n     * Event emitted for each change in the element's content.\n     * @type {?}\n     */\n    CdkObserveContent.prototype.event;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._debounce;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._currentSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._contentObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._ngZone;\n}\nclass ObserversModule {\n}\nObserversModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/observers/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n//# sourceMappingURL=observers.js.map\n","import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Injectable, NgZone, Inject, ÉµÉµdefineInjectable, ÉµÉµinject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/block-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousHTMLStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousScrollPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._isEnabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n * @record\n */\nfunction ScrollStrategy() { }\nif (false) {\n    /**\n     * Enable this scroll strategy (called when the attached overlay is attached to a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.enable;\n    /**\n     * Disable this scroll strategy (called when the attached overlay is detached from a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.disable;\n    /**\n     * Attaches this `ScrollStrategy` to an overlay.\n     * @type {?}\n     */\n    ScrollStrategy.prototype.attach;\n    /**\n     * Detaches the scroll strategy from the current overlay.\n     * @type {?|undefined}\n     */\n    ScrollStrategy.prototype.detach;\n}\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/close-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the CloseScrollStrategy.\n * @record\n */\nfunction CloseScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Amount of pixels the user has to scroll before the overlay is closed.\n     * @type {?|undefined}\n     */\n    CloseScrollStrategyConfig.prototype.threshold;\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._initialScrollPosition;\n    /**\n     * Detaches the overlay ref and disables the scroll strategy.\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._detach;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/noop-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/scroll-clip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/reposition-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the RepositionScrollStrategy.\n * @record\n */\nfunction RepositionScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Time in milliseconds to throttle the scroll events.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.scrollThrottle;\n    /**\n     * Whether to close the overlay once the user has scrolled away completely.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.autoClose;\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.Éµprov = ÉµÉµdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ÉµÉµinject(ScrollDispatcher), ÉµÉµinject(ViewportRuler), ÉµÉµinject(NgZone), ÉµÉµinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._document;\n    /**\n     * Do nothing on scroll.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.noop;\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.close;\n    /**\n     * Block scrolling.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.block;\n    /**\n     * Update the overlay's position on scroll.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.reposition;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Strategy with which to position the overlay.\n     * @type {?}\n     */\n    OverlayConfig.prototype.positionStrategy;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    OverlayConfig.prototype.scrollStrategy;\n    /**\n     * Custom class to add to the overlay pane.\n     * @type {?}\n     */\n    OverlayConfig.prototype.panelClass;\n    /**\n     * Whether the overlay has a backdrop.\n     * @type {?}\n     */\n    OverlayConfig.prototype.hasBackdrop;\n    /**\n     * Custom class to add to the backdrop\n     * @type {?}\n     */\n    OverlayConfig.prototype.backdropClass;\n    /**\n     * The width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.width;\n    /**\n     * The height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.height;\n    /**\n     * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minWidth;\n    /**\n     * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minHeight;\n    /**\n     * The max-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxWidth;\n    /**\n     * The max-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     * @type {?}\n     */\n    OverlayConfig.prototype.direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    OverlayConfig.prototype.disposeOnNavigation;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A connection point on the origin element.\n * @record\n */\nfunction OriginConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originX;\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originY;\n}\n/**\n * A connection point on the overlay element.\n * @record\n */\nfunction OverlayConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayX;\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayY;\n}\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\nif (false) {\n    /**\n     * X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originX;\n    /**\n     * Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originY;\n    /**\n     * X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayX;\n    /**\n     * Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayY;\n    /**\n     * Offset along the X axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetX;\n    /**\n     * Offset along the Y axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetY;\n    /**\n     * Class(es) to be applied to the panel while this position is active.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.panelClass;\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\nif (false) {\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginOutsideView;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayOutsideView;\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * The position used as a result of this change.\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.connectionPair;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.scrollableViewProperties;\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/keyboard/overlay-keyboard-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.Éµprov = ÉµÉµdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ÉµÉµinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\nif (false) {\n    /**\n     * Currently attached overlays in the order they were attached.\n     * @type {?}\n     */\n    OverlayKeyboardDispatcher.prototype._attachedOverlays;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._isAttached;\n    /**\n     * Keyboard event listener that will be attached to the body.\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._keydownListener;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n * @type {?}\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(((/** @type {?} */ (window))).__karma__ || ((/** @type {?} */ (window))).jasmine);\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     * @param {?=} _platform\n     */\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        /** @type {?} */\n        const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            /** @type {?} */\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                (/** @type {?} */ (oppositePlatformContainers[i].parentNode)).removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ OverlayContainer.Éµprov = ÉµÉµdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ÉµÉµinject(DOCUMENT), ÉµÉµinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._containerElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._document;\n    /**\n     * @deprecated `platform` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._platform;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEvents.asObservable();\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClick;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._attachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._detachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._positionStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._scrollStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._locationChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClickHandler;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._previousHostParent;\n    /**\n     * Stream of keydown events dispatched to this overlay.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEvents;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._portalOutlet;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._host;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._pane;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._location;\n}\n/**\n * Size properties for an overlay.\n * @record\n */\nfunction OverlaySizeConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.width;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.height;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minHeight;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/flexible-connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            /** @type {?} */\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        /** @type {?} */\n        const hasExactPosition = this._hasExactPosition();\n        /** @type {?} */\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: '', bottom: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: '', right: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * Whether we're performing the very first positioning of the overlay.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isInitialRender;\n    /**\n     * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastBoundingBoxSize;\n    /**\n     * Whether the overlay was pushed in a previous positioning.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isPushed;\n    /**\n     * Whether the overlay can be pushed on-screen on the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._canPush;\n    /**\n     * Whether the overlay can grow via flexible width/height after the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._growAfterOpen;\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasFlexibleDimensions;\n    /**\n     * Whether the overlay position is locked.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionLocked;\n    /**\n     * Cached origin dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._originRect;\n    /**\n     * Cached overlay dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRect;\n    /**\n     * Cached viewport dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRect;\n    /**\n     * Amount of space that must be maintained between the overlay and the edge of the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportMargin;\n    /**\n     * The Scrollable containers used to check scrollable view properties on position change.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._scrollables;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._preferredPositions;\n    /**\n     * The origin element against which the overlay will be positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._origin;\n    /**\n     * The overlay pane element.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._pane;\n    /**\n     * Whether the strategy has been disposed of already.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._boundingBox;\n    /**\n     * The last position to have been calculated as the best fit position.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastPosition;\n    /**\n     * Subject that emits whenever the position changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionChanges;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._resizeSubscription;\n    /**\n     * Default offset for the overlay along the x axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetX;\n    /**\n     * Default offset for the overlay along the y axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetY;\n    /**\n     * Selector to be used when finding the elements on which to set the transform origin.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._transformOriginSelector;\n    /**\n     * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._appliedPanelClasses;\n    /**\n     * Amount by which the overlay was pushed in each axis during the last time it was positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._previousPushAmount;\n    /**\n     * Observable sequence of position changes.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.positionChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayContainer;\n}\n/**\n * A simple (x, y) coordinate.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Record of measurements for how an overlay (at a given position) fits into the viewport.\n * @record\n */\nfunction OverlayFit() { }\nif (false) {\n    /**\n     * Whether the overlay fits completely in the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.isCompletelyWithinViewport;\n    /**\n     * Whether the overlay fits in the viewport on the y-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportVertically;\n    /**\n     * Whether the overlay fits in the viewport on the x-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportHorizontally;\n    /**\n     * The total visible area (in px^2) of the overlay inside the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.visibleArea;\n}\n/**\n * Record of the measurments determining whether an overlay will fit in a specific position.\n * @record\n */\nfunction FallbackPosition() { }\nif (false) {\n    /** @type {?} */\n    FallbackPosition.prototype.position;\n    /** @type {?} */\n    FallbackPosition.prototype.originPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayFit;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayRect;\n}\n/**\n * Position and size of the overlay sizing wrapper for a specific position.\n * @record\n */\nfunction BoundingBoxRect() { }\nif (false) {\n    /** @type {?} */\n    BoundingBoxRect.prototype.top;\n    /** @type {?} */\n    BoundingBoxRect.prototype.left;\n    /** @type {?} */\n    BoundingBoxRect.prototype.bottom;\n    /** @type {?} */\n    BoundingBoxRect.prototype.right;\n    /** @type {?} */\n    BoundingBoxRect.prototype.height;\n    /** @type {?} */\n    BoundingBoxRect.prototype.width;\n}\n/**\n * Record of measures determining how well a given position will fit with flexible dimensions.\n * @record\n */\nfunction FlexibleFit() { }\nif (false) {\n    /** @type {?} */\n    FlexibleFit.prototype.position;\n    /** @type {?} */\n    FlexibleFit.prototype.origin;\n    /** @type {?} */\n    FlexibleFit.prototype.overlayRect;\n    /** @type {?} */\n    FlexibleFit.prototype.boundingBoxRect;\n}\n/**\n * A connected position as specified by the user.\n * @record\n */\nfunction ConnectedPosition() { }\nif (false) {\n    /** @type {?} */\n    ConnectedPosition.prototype.originX;\n    /** @type {?} */\n    ConnectedPosition.prototype.originY;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayX;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.weight;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetX;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.panelClass;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n * @param {?} input\n * @return {?}\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\nif (false) {\n    /**\n     * Reference to the underlying position strategy to which all the API calls are proxied.\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._positionStrategy;\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._direction;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._preferredPositions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/global-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        /** @type {?} */\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        /** @type {?} */\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._cssPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._topOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._bottomOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._leftOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._rightOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._alignItems;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._justifyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._width;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._height;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._isDisposed;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/overlay-position-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.Éµprov = ÉµÉµdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ÉµÉµinject(ViewportRuler), ÉµÉµinject(DOCUMENT), ÉµÉµinject(Platform), ÉµÉµinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._overlayContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._appRef;\n    /**\n     * Scrolling strategies that can be used when creating an overlay.\n     * @type {?}\n     */\n    Overlay.prototype.scrollStrategies;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._overlayContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._positionBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._directionality;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._location;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @param {?=} config\n     * @return {?}\n     */\n    (config) => overlay.scrollStrategies.reposition(config));\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin',\n            },] }\n];\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    CdkOverlayOrigin.prototype.elementRef;\n}\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            },] }\n];\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_lockPosition;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_flexibleDimensions;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_growAfterOpen;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._templatePortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._lockPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._growAfterOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._flexibleDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._backdropSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetX;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetY;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._scrollStrategyFactory;\n    /**\n     * Origin for the connected overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.origin;\n    /**\n     * Registered connected position pairs.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionStrategy;\n    /**\n     * The width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.width;\n    /**\n     * The height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.height;\n    /**\n     * The min width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minWidth;\n    /**\n     * The min height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minHeight;\n    /**\n     * The custom class to be set on the backdrop element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClass;\n    /**\n     * The custom class to add to the overlay pane element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.panelClass;\n    /**\n     * Margin between the overlay and the viewport edges.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.viewportMargin;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.scrollStrategy;\n    /**\n     * Whether the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.open;\n    /**\n     * CSS selector which to set the transform origin.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.transformOriginSelector;\n    /**\n     * Event emitted when the backdrop is clicked.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClick;\n    /**\n     * Event emitted when the position has changed.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionChange;\n    /**\n     * Event emitted when the overlay has been attached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.attach;\n    /**\n     * Event emitted when the overlay has been detached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.detach;\n    /**\n     * Emits when there are keyboard events that are targeted at the overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.overlayKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._dir;\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ],\n            },] }\n];\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/fullscreen-overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     * @param {?=} platform\n     */\n    constructor(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        super(_document, platform);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ FullscreenOverlayContainer.Éµprov = ÉµÉµdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ÉµÉµinject(DOCUMENT), ÉµÉµinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenEventName;\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenListener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as Éµangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as Éµangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as Éµangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as Éµangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as Éµangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as Éµangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as Éµangular_material_src_cdk_overlay_overlay_g };\n//# sourceMappingURL=overlay.js.map\n","import { Injectable, Optional, Inject, PLATFORM_ID, ÉµÉµdefineInjectable, ÉµÉµinject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /**\n         * Whether the current browser is Firefox.\n         */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /**\n         * Whether the current browser is Safari.\n         */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.Éµprov = ÉµÉµdefineInjectable({ factory: function Platform_Factory() { return new Platform(ÉµÉµinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\nif (false) {\n    /**\n     * Whether the Angular application is being rendered in the browser.\n     * @type {?}\n     */\n    Platform.prototype.isBrowser;\n    /**\n     * Whether the current browser is Microsoft Edge.\n     * @type {?}\n     */\n    Platform.prototype.EDGE;\n    /**\n     * Whether the current rendering engine is Microsoft Trident.\n     * @type {?}\n     */\n    Platform.prototype.TRIDENT;\n    /**\n     * Whether the current rendering engine is Blink.\n     * @type {?}\n     */\n    Platform.prototype.BLINK;\n    /**\n     * Whether the current rendering engine is WebKit.\n     * @type {?}\n     */\n    Platform.prototype.WEBKIT;\n    /**\n     * Whether the current platform is Apple iOS.\n     * @type {?}\n     */\n    Platform.prototype.IOS;\n    /**\n     * Whether the current browser is Firefox.\n     * @type {?}\n     */\n    Platform.prototype.FIREFOX;\n    /**\n     * Whether the current platform is Android.\n     * @type {?}\n     */\n    Platform.prototype.ANDROID;\n    /**\n     * Whether the current browser is Safari.\n     * @type {?}\n     */\n    Platform.prototype.SAFARI;\n    /**\n     * @type {?}\n     * @private\n     */\n    Platform.prototype._platformId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.decorators = [\n    { type: NgModule, args: [{},] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/input-types.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nlet supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/passive-listeners.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                () => supportsPassiveEvents = true)\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/scrolling.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/shadow-dom.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nlet shadowDomIsSupported;\n/**\n * Checks whether the user's browser support Shadow DOM.\n * @return {?}\n */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        /** @type {?} */\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (((/** @type {?} */ (head))).createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/**\n * Gets the shadow root of an element, if supported and the element is inside the Shadow DOM.\n * @param {?} element\n * @return {?}\n */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        /** @type {?} */\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n//# sourceMappingURL=platform.js.map\n","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that can be used to generically type a class.\n * @record\n * @template T\n */\nfunction ComponentType() { }\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Portal.prototype._attachedHost;\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\nif (false) {\n    /**\n     * The type of the component that will be instantiated for attachment.\n     * @type {?}\n     */\n    ComponentPortal.prototype.component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     * @type {?}\n     */\n    ComponentPortal.prototype.viewContainerRef;\n    /**\n     * [Optional] Injector used for the instantiation of the component.\n     * @type {?}\n     */\n    ComponentPortal.prototype.injector;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * Defaults to using the resolver from the outlet that the portal is attached to.\n     * @type {?}\n     */\n    ComponentPortal.prototype.componentFactoryResolver;\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\nif (false) {\n    /**\n     * The embedded template that will be used to instantiate an embedded View in the host.\n     * @type {?}\n     */\n    TemplatePortal.prototype.templateRef;\n    /**\n     * Reference to the ViewContainer into which the template will be stamped out.\n     * @type {?}\n     */\n    TemplatePortal.prototype.viewContainerRef;\n    /**\n     * Contextual data to be passed in to the embedded view.\n     * @type {?}\n     */\n    TemplatePortal.prototype.context;\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n * @template T\n */\nclass DomPortal extends Portal {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\nif (false) {\n    /**\n     * DOM node hosting the portal's content.\n     * @type {?}\n     */\n    DomPortal.prototype.element;\n}\n/**\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n * @record\n */\nfunction PortalOutlet() { }\nif (false) {\n    /**\n     * Attaches a portal to this outlet.\n     * @param {?} portal\n     * @return {?}\n     */\n    PortalOutlet.prototype.attach = function (portal) { };\n    /**\n     * Detaches the currently attached portal from this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.detach = function () { };\n    /**\n     * Performs cleanup before the outlet is destroyed.\n     * @return {?}\n     */\n    PortalOutlet.prototype.dispose = function () { };\n    /**\n     * Whether there is currently a portal attached to this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.hasAttached = function () { };\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * The portal currently attached to the host.\n     * @type {?}\n     * @protected\n     */\n    BasePortalOutlet.prototype._attachedPortal;\n    /**\n     * A function that will permanently dispose this host.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._disposeFn;\n    /**\n     * Whether this host has already been permanently disposed.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._isDisposed;\n    /** @type {?} */\n    BasePortalOutlet.prototype.attachDomPortal;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachTemplatePortal = function (portal) { };\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/dom-portal-outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     * @param {?=} _document\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._document;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.attachDomPortal;\n    /**\n     * Element into which the content is projected.\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.outletElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._defaultInjector;\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal',\n            },] }\n];\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            },] }\n];\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                if (anchorNode.parentNode) {\n                    (/** @type {?} */ (anchorNode.parentNode)).replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(((/** @type {?} */ (ref.hostView))).rootNodes[0]);\n        }\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Gets the root node of the portal outlet.\n     * @private\n     * @return {?}\n     */\n    _getRootNode() {\n        /** @type {?} */\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (/** @type {?} */ ((nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : (/** @type {?} */ (nativeElement.parentNode)))));\n    }\n}\nCdkPortalOutlet.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            },] }\n];\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    CdkPortalOutlet.ngAcceptInputType_portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._document;\n    /**\n     * Whether the portal component is initialized.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._isInitialized;\n    /**\n     * Reference to the currently-attached component/view ref.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._attachedRef;\n    /**\n     * Emits when a portal is attached to the outlet.\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attached;\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._viewContainerRef;\n}\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            },] }\n];\nclass PortalModule {\n}\nPortalModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-injector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._parentInjector;\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._customTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n//# sourceMappingURL=portal.js.map\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, Inject, ÉµÉµdefineInjectable, ÉµÉµinject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, merge, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n/**\n * A strategy that dictates which items should be rendered in the viewport.\n * @record\n */\nfunction VirtualScrollStrategy() { }\nif (false) {\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    VirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.attach = function (viewport) { };\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.detach = function () { };\n    /**\n     * Called when the viewport is scrolled (debounced using requestAnimationFrame).\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentScrolled = function () { };\n    /**\n     * Called when the length of the data changes.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onDataLengthChanged = function () { };\n    /**\n     * Called when the range of items rendered in the DOM has changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentRendered = function () { };\n    /**\n     * Called when the offset of the rendered items changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onRenderedOffsetChanged = function () { };\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.scrollToIndex = function (index, behavior) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/fixed-size-virtual-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._scrolledIndexChange;\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @type {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * The attached viewport.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._viewport;\n    /**\n     * The size of the items in the virtually scrolling list.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._itemSize;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._minBufferPx;\n    /**\n     * The number of buffer items to render beyond the edge of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._maxBufferPx;\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef((/**\n                             * @return {?}\n                             */\n                            () => CdkFixedSizeVirtualScroll))],\n                    }],\n            },] }\n];\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_maxBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._maxBufferPx;\n    /**\n     * The scroll strategy used by this directive.\n     * @type {?}\n     */\n    CdkFixedSizeVirtualScroll.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scroll-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollDispatcher.Éµprov = ÉµÉµdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ÉµÉµinject(NgZone), ÉµÉµinject(Platform), ÉµÉµinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\nif (false) {\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    ScrollDispatcher.prototype._document;\n    /**\n     * Subject for notifying that a registered scrollable reference element has been scrolled.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolled;\n    /**\n     * Keeps track of the global `scroll` and `resize` subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype._globalSubscription;\n    /**\n     * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolledCount;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype.scrollContainers;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrollable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            },] }\n];\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._elementScrolled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.scrollDispatcher;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.ngZone;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/viewport-ruler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Object that holds the scroll position of the viewport in each direction.\n * @record\n */\nfunction ViewportScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ViewportScrollPosition.prototype.top;\n    /** @type {?} */\n    ViewportScrollPosition.prototype.left;\n}\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     * @param {?=} document\n     */\n    constructor(_platform, ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._platform = _platform;\n        this._document = document;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const window = this._getWindow();\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const document = this._getDocument();\n        /** @type {?} */\n        const window = this._getWindow();\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        /** @type {?} */\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ViewportRuler.Éµprov = ÉµÉµdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ÉµÉµinject(Platform), ÉµÉµinject(NgZone), ÉµÉµinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\nif (false) {\n    /**\n     * Cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._viewportSize;\n    /**\n     * Stream of viewport change events.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._change;\n    /**\n     * Subscription to streams that invalidate the cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._invalidateCache;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    ViewportRuler.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-viewport.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     * @param {?=} viewportRuler\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        /**\n         * Subscription to changes in the viewport size.\n         */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            this._viewportChanges = viewportRuler.change().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.checkViewportSize();\n            }));\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.decorators = [\n    { type: Component, args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport,\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }] }\n];\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\nif (false) {\n    /**\n     * Emits when the viewport is detached from a CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._detachedSubject;\n    /**\n     * Emits when the rendered range changes.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRangeSubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._orientation;\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrolledIndexChange;\n    /**\n     * The element that wraps the rendered content.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._contentWrapper;\n    /**\n     * A stream that emits whenever the rendered range changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.renderedRangeStream;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._totalContentSize;\n    /**\n     * A string representing the `style.width` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentWidth;\n    /**\n     * A string representing the `style.height` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentHeight;\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentTransform;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRange;\n    /**\n     * The length of the data bound to this viewport (in number of items).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._dataLength;\n    /**\n     * The size of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportSize;\n    /**\n     * the currently attached CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._forOf;\n    /**\n     * The last rendered content offset that was set.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffset;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffsetNeedsRewrite;\n    /**\n     * Whether there is a pending change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._isChangeDetectionPending;\n    /**\n     * A list of functions to run after the next change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._runAfterChangeDetection;\n    /**\n     * Subscription to changes in the viewport size.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportChanges;\n    /** @type {?} */\n    CdkVirtualScrollViewport.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-for-of.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: (/** @type {?} */ (this._cdkVirtualForOf)),\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]',\n            },] }\n];\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\nif (false) {\n    /**\n     * Emits when the rendered view of the data changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.viewChange;\n    /**\n     * Subject that emits when a new DataSource instance is given.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._dataSourceChanges;\n    /** @type {?} */\n    CdkVirtualForOf.prototype._cdkVirtualForOf;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._cdkVirtualForTrackBy;\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.cdkVirtualForTemplateCacheSize;\n    /**\n     * Emits whenever the data in the current DataSource changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.dataStream;\n    /**\n     * The differ used to calculate changes to the data.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differ;\n    /**\n     * The most recent data emitted from the DataSource.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._data;\n    /**\n     * The currently rendered items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedItems;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedRange;\n    /**\n     * The template cache used to hold on ot template instancess that have been stamped out, but don't\n     * currently need to be rendered. These instances will be reused in the future rather than\n     * stamping out brand new ones.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._templateCache;\n    /**\n     * Whether the rendered data should be updated during the next ngDoCheck cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._needsUpdate;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._destroyed;\n    /**\n     * The view container to add items to.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewContainerRef;\n    /**\n     * The template to use when stamping out new items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._template;\n    /**\n     * The set of available differs.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differs;\n    /**\n     * The virtual scrolling viewport that these items are being rendered in.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewport;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrolling-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            },] }\n];\nclass ScrollingModule {\n}\nScrollingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n//# sourceMappingURL=scrolling.js.map\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/**\n * \\@docs-private\n */\nclass MatButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatButtonBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                ((/** @type {?} */ (this._getHostElement()))).classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        this._focusMonitor.monitor(this._elementRef, true);\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    _hasHostAttributes(...attributes) {\n        return attributes.some((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => this._getHostElement().hasAttribute(attribute)));\n    }\n}\nMatButton.decorators = [\n    { type: Component, args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator',\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\nif (false) {\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the button is round.\n     * @type {?}\n     */\n    MatButton.prototype.isRoundButton;\n    /**\n     * Whether the button is icon button.\n     * @type {?}\n     */\n    MatButton.prototype.isIconButton;\n    /**\n     * Reference to the MatRipple instance of the button.\n     * @type {?}\n     */\n    MatButton.prototype.ripple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButton.prototype._focusMonitor;\n    /** @type {?} */\n    MatButton.prototype._animationMode;\n}\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    /**\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} animationMode\n     */\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.decorators = [\n    { type: Component, args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator',\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\nif (false) {\n    /**\n     * Tabindex of the button.\n     * @type {?}\n     */\n    MatAnchor.prototype.tabIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonModule {\n}\nMatButtonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n//# sourceMappingURL=button.js.map\n","import { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ÉµÉµdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nconst VERSION = new Version('9.2.4');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/animation/animation.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\nif (false) {\n    /** @type {?} */\n    AnimationCurves.STANDARD_CURVE;\n    /** @type {?} */\n    AnimationCurves.DECELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.ACCELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.SHARP_CURVE;\n}\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\nif (false) {\n    /** @type {?} */\n    AnimationDurations.COMPLEX;\n    /** @type {?} */\n    AnimationDurations.ENTERING;\n    /** @type {?} */\n    AnimationDurations.EXITING;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/common-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$1 = new Version('9.2.4');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Object that can be used to configure the sanity checks granularly.\n * @record\n */\nfunction GranularSanityChecks() { }\nif (false) {\n    /** @type {?} */\n    GranularSanityChecks.prototype.doctype;\n    /** @type {?} */\n    GranularSanityChecks.prototype.theme;\n    /** @type {?} */\n    GranularSanityChecks.prototype.version;\n    /**\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    GranularSanityChecks.prototype.hammer;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} highContrastModeDetector\n     * @param {?} sanityChecks\n     * @param {?=} document\n     */\n    constructor(highContrastModeDetector, sanityChecks, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        this._document = document;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        /** @type {?} */\n        const doc = this._document || document;\n        return typeof doc === 'object' && doc ? doc : null;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        /** @type {?} */\n        const win = (doc === null || doc === void 0 ? void 0 : doc.defaultView) || window;\n        return typeof win === 'object' && win ? win : null;\n    }\n    /**\n     * Whether any sanity checks are enabled.\n     * @private\n     * @return {?}\n     */\n    _checksAreEnabled() {\n        return isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._getWindow()));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).doctype);\n        /** @type {?} */\n        const document = this._getDocument();\n        if (isEnabled && document && !document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        /** @type {?} */\n        const isDisabled = !this._checksAreEnabled() ||\n            (this._sanityChecks === false || !((/** @type {?} */ (this._sanityChecks))).theme);\n        /** @type {?} */\n        const document = this._getDocument();\n        if (isDisabled || !document || !document.body ||\n            typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether the material version matches the cdk version\n     * @private\n     * @return {?}\n     */\n    _checkCdkVersionMatch() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).version);\n        if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BidiModule],\n                exports: [BidiModule],\n            },] }\n];\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nif (false) {\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._hasDoneGlobalChecks;\n    /**\n     * Configured sanity checks.\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._sanityChecks;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    MatCommonModule.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disabled.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisable() { }\nif (false) {\n    /**\n     * Whether the component is disabled.\n     * @type {?}\n     */\n    CanDisable.prototype.disabled;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/color.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanColor() { }\nif (false) {\n    /**\n     * Theme color palette for the component.\n     * @type {?}\n     */\n    CanColor.prototype.color;\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasElementRef() { }\nif (false) {\n    /** @type {?} */\n    HasElementRef.prototype._elementRef;\n}\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disable-ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisableRipple() { }\nif (false) {\n    /**\n     * Whether ripples are disabled.\n     * @type {?}\n     */\n    CanDisableRipple.prototype.disableRipple;\n}\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/tabindex.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction HasTabIndex() { }\nif (false) {\n    /**\n     * Tabindex of the component.\n     * @type {?}\n     */\n    HasTabIndex.prototype.tabIndex;\n}\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/error-state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanUpdateErrorState() { }\nif (false) {\n    /** @type {?} */\n    CanUpdateErrorState.prototype.stateChanges;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorState;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorStateMatcher;\n    /**\n     * @return {?}\n     */\n    CanUpdateErrorState.prototype.updateErrorState = function () { };\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasErrorState() { }\nif (false) {\n    /** @type {?} */\n    HasErrorState.prototype._parentFormGroup;\n    /** @type {?} */\n    HasErrorState.prototype._parentForm;\n    /** @type {?} */\n    HasErrorState.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    HasErrorState.prototype.ngControl;\n}\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/initialized.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * \\@docs-private\n * @record\n */\nfunction HasInitialized() { }\nif (false) {\n    /**\n     * Stream that emits once during the directive/component's ngOnInit.\n     * @type {?}\n     */\n    HasInitialized.prototype.initialized;\n    /**\n     * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n     * the directive has been initialized.\n     * \\@docs-private\n     * @type {?}\n     */\n    HasInitialized.prototype._markInitialized;\n}\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable((/**\n             * @param {?} subscriber\n             * @return {?}\n             */\n            subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            }));\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\nif (false) {\n    /**\n     * The locale to use for all dates.\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype.locale;\n    /**\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype._localeChanges;\n    /**\n     * Gets the year component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the year from.\n     * @return {?} The year component.\n     */\n    DateAdapter.prototype.getYear = function (date) { };\n    /**\n     * Gets the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the month from.\n     * @return {?} The month component (0-indexed, 0 = January).\n     */\n    DateAdapter.prototype.getMonth = function (date) { };\n    /**\n     * Gets the date of the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the date of the month from.\n     * @return {?} The month component (1-indexed, 1 = first of month).\n     */\n    DateAdapter.prototype.getDate = function (date) { };\n    /**\n     * Gets the day of the week component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the day of the week from.\n     * @return {?} The month component (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getDayOfWeek = function (date) { };\n    /**\n     * Gets a list of names for the months.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n     * @return {?} An ordered list of all month names, starting with January.\n     */\n    DateAdapter.prototype.getMonthNames = function (style) { };\n    /**\n     * Gets a list of names for the dates of the month.\n     * @abstract\n     * @return {?} An ordered list of all date of the month names, starting with '1'.\n     */\n    DateAdapter.prototype.getDateNames = function () { };\n    /**\n     * Gets a list of names for the days of the week.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n     * @return {?} An ordered list of all weekday names, starting with Sunday.\n     */\n    DateAdapter.prototype.getDayOfWeekNames = function (style) { };\n    /**\n     * Gets the name for the year of the given date.\n     * @abstract\n     * @param {?} date The date to get the year name for.\n     * @return {?} The name of the given year (e.g. '2017').\n     */\n    DateAdapter.prototype.getYearName = function (date) { };\n    /**\n     * Gets the first day of the week.\n     * @abstract\n     * @return {?} The first day of the week (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getFirstDayOfWeek = function () { };\n    /**\n     * Gets the number of days in the month of the given date.\n     * @abstract\n     * @param {?} date The date whose month should be checked.\n     * @return {?} The number of days in the month of the given date.\n     */\n    DateAdapter.prototype.getNumDaysInMonth = function (date) { };\n    /**\n     * Clones the given date.\n     * @abstract\n     * @param {?} date The date to clone\n     * @return {?} A new date equal to the given date.\n     */\n    DateAdapter.prototype.clone = function (date) { };\n    /**\n     * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n     * month and date.\n     * @abstract\n     * @param {?} year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n     * @param {?} month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n     * @param {?} date The date of month of the date. Must be an integer 1 - length of the given month.\n     * @return {?} The new date, or null if invalid.\n     */\n    DateAdapter.prototype.createDate = function (year, month, date) { };\n    /**\n     * Gets today's date.\n     * @abstract\n     * @return {?} Today's date.\n     */\n    DateAdapter.prototype.today = function () { };\n    /**\n     * Parses a date from a user-provided value.\n     * @abstract\n     * @param {?} value The value to parse.\n     * @param {?} parseFormat The expected format of the value being parsed\n     *     (type is implementation-dependent).\n     * @return {?} The parsed date.\n     */\n    DateAdapter.prototype.parse = function (value, parseFormat) { };\n    /**\n     * Formats a date as a string according to the given format.\n     * @abstract\n     * @param {?} date The value to format.\n     * @param {?} displayFormat The format to use to display the date as a string.\n     * @return {?} The formatted date string.\n     */\n    DateAdapter.prototype.format = function (date, displayFormat) { };\n    /**\n     * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n     * calendar for each year and then finding the closest date in the new month. For example when\n     * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add years to.\n     * @param {?} years The number of years to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of years added.\n     */\n    DateAdapter.prototype.addCalendarYears = function (date, years) { };\n    /**\n     * Adds the given number of months to the date. Months are counted as if flipping a page on the\n     * calendar for each month and then finding the closest date in the new month. For example when\n     * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add months to.\n     * @param {?} months The number of months to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of months added.\n     */\n    DateAdapter.prototype.addCalendarMonths = function (date, months) { };\n    /**\n     * Adds the given number of days to the date. Days are counted as if moving one cell on the\n     * calendar for each day.\n     * @abstract\n     * @param {?} date The date to add days to.\n     * @param {?} days The number of days to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of days added.\n     */\n    DateAdapter.prototype.addCalendarDays = function (date, days) { };\n    /**\n     * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n     * This method is used to generate date strings that are compatible with native HTML attributes\n     * such as the `min` or `max` attribute of an `<input>`.\n     * @abstract\n     * @param {?} date The date to get the ISO date string for.\n     * @return {?} The ISO date string date string.\n     */\n    DateAdapter.prototype.toIso8601 = function (date) { };\n    /**\n     * Checks whether the given object is considered a date instance by this DateAdapter.\n     * @abstract\n     * @param {?} obj The object to check\n     * @return {?} Whether the object is a date instance.\n     */\n    DateAdapter.prototype.isDateInstance = function (obj) { };\n    /**\n     * Checks whether the given date is valid.\n     * @abstract\n     * @param {?} date The date to check.\n     * @return {?} Whether the date is valid.\n     */\n    DateAdapter.prototype.isValid = function (date) { };\n    /**\n     * Gets date instance that is not valid.\n     * @abstract\n     * @return {?} An invalid date.\n     */\n    DateAdapter.prototype.invalid = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst Éµ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (Éµ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\nif (false) {\n    /**\n     * Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors.\n     * @type {?}\n     * @private\n     */\n    NativeDateAdapter.prototype._clampDate;\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from its utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     * @type {?}\n     */\n    NativeDateAdapter.prototype.useUtcForDisplay;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ],\n            },] }\n];\nconst Éµ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: Éµ0$1 }],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/error/error-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.decorators = [\n    { type: Injectable }\n];\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ ErrorStateMatcher.Éµprov = ÉµÉµdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-annotations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Stripped-down HammerJS annotations to be used within Material, which are necessary,\n * because HammerJS is an optional dependency. For the full annotations see:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/hammerjs/index.d.ts\n */\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInput() { }\nif (false) {\n    /** @type {?} */\n    HammerInput.prototype.preventDefault;\n    /** @type {?} */\n    HammerInput.prototype.deltaX;\n    /** @type {?} */\n    HammerInput.prototype.deltaY;\n    /** @type {?} */\n    HammerInput.prototype.center;\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerStatic() { }\nif (false) {\n    /** @type {?} */\n    HammerStatic.prototype.Pan;\n    /** @type {?} */\n    HammerStatic.prototype.Swipe;\n    /** @type {?} */\n    HammerStatic.prototype.Press;\n    /* Skipping unhandled member: new(element: HTMLElement | SVGElement, options?: any): HammerManager;*/\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction Recognizer() { }\nif (false) {\n    /* Skipping unhandled member: new(options?: any): Recognizer;*/\n    /**\n     * @param {?} otherRecognizer\n     * @return {?}\n     */\n    Recognizer.prototype.recognizeWith = function (otherRecognizer) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction RecognizerStatic() { }\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInstance() { }\nif (false) {\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.on = function (eventName, callback) { };\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.off = function (eventName, callback) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerManager() { }\nif (false) {\n    /**\n     * @param {?} recogniser\n     * @return {?}\n     */\n    HammerManager.prototype.add = function (recogniser) { };\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    HammerManager.prototype.set = function (options) { };\n    /**\n     * @param {?} event\n     * @param {?} data\n     * @return {?}\n     */\n    HammerManager.prototype.emit = function (event, data) { };\n    /**\n     * @param {?} events\n     * @param {?=} handler\n     * @return {?}\n     */\n    HammerManager.prototype.off = function (events, handler) { };\n    /**\n     * @param {?} events\n     * @param {?} handler\n     * @return {?}\n     */\n    HammerManager.prototype.on = function (events, handler) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    HammerOptions.prototype.cssProps;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.domEvents;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.enable;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.preset;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.touchAction;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.recognizers;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputClass;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputTarget;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst Éµ0$2 = /**\n * @return {?}\n */\n() => { }, Éµ1 = /**\n * @return {?}\n */\n() => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: (Éµ0$2),\n    off: (Éµ1),\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} _commonModule\n     */\n    constructor(_hammerOptions, _commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => recognizer.recognizeWith(item)));\n        return recognizer;\n    }\n}\nGestureConfig.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * List of new event names to add to the gesture support list\n     * @type {?}\n     */\n    GestureConfig.prototype.events;\n    /**\n     * @type {?}\n     * @private\n     */\n    GestureConfig.prototype._hammerOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/line/line.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            },] }\n];\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @param {?=} prefix\n * @return {?}\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    }));\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = 3 /* HIDDEN */;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\nif (false) {\n    /**\n     * Current state of the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRef.prototype._renderer;\n    /**\n     * Reference to the ripple HTML element.\n     * @type {?}\n     */\n    RippleRef.prototype.element;\n    /**\n     * Ripple configuration used for the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-renderer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n * @record\n */\nfunction RippleAnimationConfig() { }\nif (false) {\n    /**\n     * Duration in milliseconds for the enter animation (expansion from point of contact).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.enterDuration;\n    /**\n     * Duration in milliseconds for the exit animation (fade-out).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.exitDuration;\n}\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * \\@docs-private\n * @record\n */\nfunction RippleTarget() { }\nif (false) {\n    /**\n     * Configuration for ripples that are launched on pointer down.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleConfig;\n    /**\n     * Whether ripples on pointer down should be disabled.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleDisabled;\n}\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Events that signal that the pointer is down.\n * @type {?}\n */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/**\n * Events that signal that the pointer is up.\n * @type {?}\n */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementOrElementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Whether pointer-up event listeners have been registered.\n         */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }), duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            rippleRef.state = 3 /* HIDDEN */;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }), animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => ripple.fadeOut()));\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} elementOrElementRef\n     * @return {?}\n     */\n    setupTriggerEvents(elementOrElementRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown((/** @type {?} */ (event)));\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart((/** @type {?} */ (event)));\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /**\n     * Function being called whenever the trigger is being pressed using mouse.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        /** @type {?} */\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        /** @type {?} */\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /**\n     * Function being called whenever the trigger is being pressed using touch.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            /** @type {?} */\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /**\n     * Function being called whenever the trigger is being released.\n     * @private\n     * @return {?}\n     */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            /** @type {?} */\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        }));\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(fn, delay)));\n    }\n    /**\n     * Registers event listeners for a given list of events.\n     * @private\n     * @param {?} eventTypes\n     * @return {?}\n     */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            eventTypes.forEach((/**\n             * @param {?} type\n             * @return {?}\n             */\n            (type) => {\n                (/** @type {?} */ (this._triggerElement)).addEventListener(type, this, passiveEventOptions);\n            }));\n        }));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach((/**\n             * @param {?} type\n             * @return {?}\n             */\n            (type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, this, passiveEventOptions);\n            }));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach((/**\n                 * @param {?} type\n                 * @return {?}\n                 */\n                (type) => {\n                    (/** @type {?} */ (this._triggerElement)).removeEventListener(type, this, passiveEventOptions);\n                }));\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Element where the ripples are being added to.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerElement;\n    /**\n     * Element which triggers the ripple elements on mouse events.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._triggerElement;\n    /**\n     * Whether the pointer is currently down or not.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._isPointerDown;\n    /**\n     * Set of currently active ripple references.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._activeRipples;\n    /**\n     * Latest non-persistent ripple that was triggered.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._mostRecentTransientRipple;\n    /**\n     * Time in milliseconds when the last touchstart event happened.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._lastTouchStartEvent;\n    /**\n     * Whether pointer-up event listeners have been registered.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._pointerUpEventsRegistered;\n    /**\n     * Cached dimensions of the ripple container. Set when the first\n     * ripple is shown and cleared once no more ripples are visible.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerRect;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._target;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._ngZone;\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configurable options for `matRipple`.\n * @record\n */\nfunction RippleGlobalOptions() { }\nif (false) {\n    /**\n     * Whether ripples should be disabled. Ripples can be still launched manually by using\n     * the `launch()` method. Therefore focus indicators will still show up.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.disabled;\n    /**\n     * Configuration for the animation duration of the ripples. There are two phases with different\n     * durations for the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.animation;\n    /**\n     * Whether ripples should start fading out immediately after the mouse or touch is released. By\n     * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.terminateOnPointerUp;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            },] }\n];\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\nif (false) {\n    /**\n     * Custom color for all ripples.\n     * @type {?}\n     */\n    MatRipple.prototype.color;\n    /**\n     * Whether the ripples should be visible outside the component's bounds.\n     * @type {?}\n     */\n    MatRipple.prototype.unbounded;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     * @type {?}\n     */\n    MatRipple.prototype.centered;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     * @type {?}\n     */\n    MatRipple.prototype.radius;\n    /**\n     * Configuration for the ripple animation. Allows modifying the enter and exit animation\n     * duration of the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?}\n     */\n    MatRipple.prototype.animation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._trigger;\n    /**\n     * Renderer for the ripple DOM manipulations.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._rippleRenderer;\n    /**\n     * Options that are set globally for all ripples.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._globalOptions;\n    /**\n     * Whether ripple directive is initialized and the input bindings are set.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._isInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/pseudo-checkbox/pseudo-checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.decorators = [\n    { type: Component, args: [{\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                },\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\nif (false) {\n    /**\n     * Display state of the checkbox.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.state;\n    /**\n     * Whether the checkbox is disabled.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.disabled;\n    /** @type {?} */\n    MatPseudoCheckbox.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/optgroup.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId',\n                },\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n            }] }\n];\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatOptgroup.ngAcceptInputType_disabled;\n    /**\n     * Label for the option group.\n     * @type {?}\n     */\n    MatOptgroup.prototype.label;\n    /**\n     * Unique id for the underlying label.\n     * @type {?}\n     */\n    MatOptgroup.prototype._labelId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/option.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the option that emitted the event.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.source;\n    /**\n     * Whether the change in the option's value was a result of a user action.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.isUserInput;\n}\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * \\@docs-private\n * @record\n */\nfunction MatOptionParentComponent() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.disableRipple;\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.multiple;\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @param {?=} _origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator',\n                },\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    MatOption.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._active;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._mostRecentViewValue;\n    /**\n     * The form value of the option.\n     * @type {?}\n     */\n    MatOption.prototype.value;\n    /**\n     * The unique ID of the option.\n     * @type {?}\n     */\n    MatOption.prototype.id;\n    /**\n     * Event emitted when the option is selected or deselected.\n     * @type {?}\n     */\n    MatOption.prototype.onSelectionChange;\n    /**\n     * Emits when the state of the option changes and any parents have to be notified.\n     * @type {?}\n     */\n    MatOption.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._parent;\n    /** @type {?} */\n    MatOption.prototype.group;\n}\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/label/label-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\n *     `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n/**\n * Configurable options for floating labels.\n * @deprecated Use `MatFormFieldDefaultOptions` from `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @record\n */\nfunction LabelOptions() { }\nif (false) {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     * @type {?|undefined}\n     */\n    LabelOptions.prototype.float;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/month-constants.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, GestureConfig, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_HAMMER_OPTIONS, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, MATERIAL_SANITY_CHECKS_FACTORY as Éµangular_material_src_material_core_core_a };\n//# sourceMappingURL=core.js.map\n","import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Possible overrides for a dialog's position.\n * @record\n */\nfunction DialogPosition() { }\nif (false) {\n    /**\n     * Override for the dialog's top position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.top;\n    /**\n     * Override for the dialog's bottom position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.bottom;\n    /**\n     * Override for the dialog's left position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.left;\n    /**\n     * Override for the dialog's right position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.right;\n}\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n * @template D\n */\nclass MatDialogConfig {\n    constructor() {\n        /**\n         * The ARIA role of the dialog element.\n         */\n        this.role = 'dialog';\n        /**\n         * Custom class for the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the dialog has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Custom class for the backdrop.\n         */\n        this.backdropClass = '';\n        /**\n         * Whether the user can use escape or clicking on the backdrop to close the modal.\n         */\n        this.disableClose = false;\n        /**\n         * Width of the dialog.\n         */\n        this.width = '';\n        /**\n         * Height of the dialog.\n         */\n        this.height = '';\n        /**\n         * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n         */\n        this.maxWidth = '80vw';\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * ID of the element that describes the dialog.\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * ID of the element that labels the dialog.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Aria label to assign to the dialog element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the dialog should focus the first focusable element on open.\n         */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\nif (false) {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.viewContainerRef;\n    /**\n     * ID for the dialog. If omitted, a unique one will be generated.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.id;\n    /**\n     * The ARIA role of the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.role;\n    /**\n     * Custom class for the overlay pane.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.panelClass;\n    /**\n     * Whether the dialog has a backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.hasBackdrop;\n    /**\n     * Custom class for the backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.backdropClass;\n    /**\n     * Whether the user can use escape or clicking on the backdrop to close the modal.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.disableClose;\n    /**\n     * Width of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.width;\n    /**\n     * Height of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.height;\n    /**\n     * Min-width of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minWidth;\n    /**\n     * Min-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minHeight;\n    /**\n     * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxWidth;\n    /**\n     * Max-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxHeight;\n    /**\n     * Position overrides.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.position;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.data;\n    /**\n     * Layout direction for the dialog's content.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.direction;\n    /**\n     * ID of the element that describes the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaDescribedBy;\n    /**\n     * ID of the element that labels the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabelledBy;\n    /**\n     * Aria label to assign to the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabel;\n    /**\n     * Whether the dialog should focus the first focusable element on open.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.autoFocus;\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.restoreFocus;\n    /**\n     * Scroll strategy to be used for the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.scrollStrategy;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    MatDialogConfig.prototype.closeOnNavigation;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.componentFactoryResolver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatDialog.\n * \\@docs-private\n * @type {?}\n */\nconst matDialogAnimations = {\n    /**\n     * Animation that is applied on the dialog container by defalt.\n     */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nclass MatDialogContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _changeDetectorRef\n     * @param {?} _document\n     * @param {?} _config\n     */\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, _config) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        /**\n         * Element that was focused before the dialog was opened. Save this to restore upon close.\n         */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * State of the dialog animation.\n         */\n        this._state = 'enter';\n        /**\n         * Emits when an animation state changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            if (this._portalOutlet.hasAttached()) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            this._setupFocusTrap();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._setupFocusTrap();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._setupFocusTrap();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Moves focus back into the dialog if it was moved out.\n     * @return {?}\n     */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            /** @type {?} */\n            const focusWasTrapped = this._focusTrap.focusInitialElement();\n            if (!focusWasTrapped) {\n                this._elementRef.nativeElement.focus();\n            }\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else if (!this._containsFocus()) {\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            /** @type {?} */\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Sets up the focus trand and saves a reference to the\n     * element that was focused before the dialog was opened.\n     * @private\n     * @return {?}\n     */\n    _setupFocusTrap() {\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        }\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = (/** @type {?} */ (this._document.activeElement));\n            // Note that there is no focus method when rendering on the server.\n            if (this._elementRef.nativeElement.focus) {\n                // Move focus onto the dialog immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._elementRef.nativeElement.focus()));\n            }\n        }\n    }\n    /**\n     * Returns whether focus is inside the dialog.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const activeElement = this._document.activeElement;\n        return element === activeElement || element.contains(activeElement);\n    }\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[attr.id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)',\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatDialogContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig }\n];\nMatDialogContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._document;\n    /**\n     * The portal outlet inside of this container into which the dialog content will be loaded.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._portalOutlet;\n    /**\n     * The class that traps and manages focus within the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrap;\n    /**\n     * Element that was focused before the dialog was opened. Save this to restore upon close.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n    /**\n     * State of the dialog animation.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._state;\n    /**\n     * Emits when an animation state changes.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._animationStateChanged;\n    /**\n     * ID of the element that should be considered as the dialog's label.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._ariaLabelledBy;\n    /**\n     * ID for the container DOM element.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._id;\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDialogContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._changeDetectorRef;\n    /**\n     * The dialog configuration.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\n/** @type {?} */\nlet uniqueId = 0;\n/** @enum {number} */\nconst MatDialogState = {\n    OPEN: 0, CLOSING: 1, CLOSED: 2,\n};\n/**\n * Reference to a dialog opened via the MatDialog service.\n * @template T, R\n */\nclass MatDialogRef {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     * @param {?=} id\n     */\n    constructor(_overlayRef, _containerInstance, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /**\n         * Whether the user is allowed to close the dialog.\n         */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /**\n         * Subject for notifying the user that the dialog has finished opening.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has finished closing.\n         */\n        this._afterClosed = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has started closing.\n         */\n        this._beforeClosed = new Subject();\n        /**\n         * Current state of the dialog.\n         */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'enter')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'exit')), take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        }));\n        _overlayRef.detachments().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = (/** @type {?} */ (null));\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.keydownEvents()\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.preventDefault();\n            this.close();\n        }));\n        _overlayRef.backdropClick().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                this.close();\n            }\n        }));\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'start')), take(1))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => this._finishDialogClose()), event.totalTime + 100);\n        }));\n        this._containerInstance._startExitAnimation();\n        this._state = 1 /* CLOSING */;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    beforeClosed() {\n        return this._beforeClosed.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} position New dialog position.\n     * @return {THIS}\n     */\n    updatePosition(position) {\n        /** @type {?} */\n        let strategy = (/** @type {?} */ (this))._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {THIS}\n     */\n    updateSize(width = '', height = '') {\n        (/** @type {?} */ (this))._getPositionStrategy().width(width).height(height);\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    addPanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.addPanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    removePanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.removePanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the current state of the dialog's lifecycle.\n     * @return {?}\n     */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     * @private\n     * @return {?}\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @private\n     * @return {?}\n     */\n    _getPositionStrategy() {\n        return (/** @type {?} */ (this._overlayRef.getConfig().positionStrategy));\n    }\n}\nif (false) {\n    /**\n     * The instance of component opened into the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.componentInstance;\n    /**\n     * Whether the user is allowed to close the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.disableClose;\n    /**\n     * Subject for notifying the user that the dialog has finished opening.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the dialog has finished closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterClosed;\n    /**\n     * Subject for notifying the user that the dialog has started closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._beforeClosed;\n    /**\n     * Result to be passed to afterClosed.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._result;\n    /**\n     * Handle to the timeout that's running as a fallback in case the exit animation doesn't fire.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._closeFallbackTimeout;\n    /**\n     * Current state of the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._state;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._overlayRef;\n    /** @type {?} */\n    MatDialogRef.prototype._containerInstance;\n    /** @type {?} */\n    MatDialogRef.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a dialog.\n * @type {?}\n */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/**\n * Injection token that can be used to specify default dialog options.\n * @type {?}\n */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _location\n     * @param {?} _defaultOptions\n     * @param {?} scrollStrategy\n     * @param {?} _parentDialog\n     * @param {?} _overlayContainer\n     */\n    constructor(_overlay, _injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    _location, _defaultOptions, scrollStrategy, _parentDialog, _overlayContainer) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => this.openDialogs.length ?\n            this._afterAllClosed :\n            this._afterAllClosed.pipe(startWith(undefined))))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Keeps track of the currently-open dialogs.\n     * @return {?}\n     */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /**\n     * Stream that emits when a dialog has been opened.\n     * @return {?}\n     */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    /**\n     * @return {?}\n     */\n    get _afterAllClosed() {\n        /** @type {?} */\n        const parent = this._parentDialog;\n        return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n    }\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        /** @type {?} */\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this._removeOpenDialog(dialogRef)));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    getDialogById(id) {\n        return this.openDialogs.find((/**\n         * @param {?} dialog\n         * @return {?}\n         */\n        dialog => dialog.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @private\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @private\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        /** @type {?} */\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @private\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector, config.componentFactoryResolver);\n        /** @type {?} */\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @private\n     * @template T, R\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        /** @type {?} */\n        const dialogRef = new MatDialogRef(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({ $implicit: config.data, dialogRef }))));\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            /** @type {?} */\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @private\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n        // content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n        // added to the injection tokens.\n        /** @type {?} */\n        const providers = [\n            { provide: MatDialogContainer, useValue: dialogContainer },\n            { provide: MAT_DIALOG_DATA, useValue: config.data },\n            { provide: MatDialogRef, useValue: dialogRef }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @private\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    _removeOpenDialog(dialogRef) {\n        /** @type {?} */\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((/**\n                 * @param {?} previousValue\n                 * @param {?} element\n                 * @return {?}\n                 */\n                (previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                }));\n                this._ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     * @private\n     * @return {?}\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        /** @type {?} */\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            /** @type {?} */\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                /** @type {?} */\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /**\n     * Closes all of the dialogs in an array.\n     * @private\n     * @param {?} dialogs\n     * @return {?}\n     */\n    _closeDialogs(dialogs) {\n        /** @type {?} */\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\nMatDialog.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._openDialogsAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterAllClosedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterOpenedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._ariaHiddenElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._scrollStrategy;\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     * @type {?}\n     */\n    MatDialog.prototype.afterAllClosed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._defaultOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._parentDialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlayContainer;\n}\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @param {?=} defaultOptions Default options provided.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-content-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique IDs for dialog elements.\n * @type {?}\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    /**\n     * @param {?} dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /**\n         * Default to \"button\" to prevents accidental form submits.\n         */\n        this.type = 'button';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n}\nMatDialogClose.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': 'dialogRef.close(dialogResult)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type',\n                }\n            },] }\n];\n/** @nocollapse */\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\nif (false) {\n    /**\n     * Screenreader label for the button.\n     * @type {?}\n     */\n    MatDialogClose.prototype.ariaLabel;\n    /**\n     * Default to \"button\" to prevents accidental form submits.\n     * @type {?}\n     */\n    MatDialogClose.prototype.type;\n    /**\n     * Dialog close input.\n     * @type {?}\n     */\n    MatDialogClose.prototype.dialogResult;\n    /** @type {?} */\n    MatDialogClose.prototype._matDialogClose;\n    /** @type {?} */\n    MatDialogClose.prototype.dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._dialog;\n}\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    /**\n     * @param {?} _dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(_dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            }));\n        }\n    }\n}\nMatDialogTitle.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id',\n                },\n            },] }\n];\n/** @nocollapse */\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatDialogTitle.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialog;\n}\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.decorators = [\n    { type: Directive, args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            },] }\n];\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.decorators = [\n    { type: Directive, args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            },] }\n];\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param {?} element Element relative to which to look for a dialog.\n * @param {?} openDialogs References to the currently-open dialogs.\n * @return {?}\n */\nfunction getClosestDialog(element, openDialogs) {\n    /** @type {?} */\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find((/**\n     * @param {?} dialog\n     * @return {?}\n     */\n    dialog => dialog.id === (/** @type {?} */ (parent)).id)) : null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDialogModule {\n}\nMatDialogModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n//# sourceMappingURL=dialog.js.map\n"]}