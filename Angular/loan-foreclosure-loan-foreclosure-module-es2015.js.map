{"version":3,"sources":["./src/app/loan-foreclosure/dialog/dialog.component.html","./src/app/loan-foreclosure/loan-foreclosure.component.html","./src/app/loan-foreclosure/dialog/dialog.component.scss","./src/app/loan-foreclosure/dialog/dialog.component.ts","./src/app/loan-foreclosure/loan-foreclosure-routing.module.ts","./src/app/loan-foreclosure/loan-foreclosure.component.scss","./src/app/loan-foreclosure/loan-foreclosure.component.ts","./src/app/loan-foreclosure/loan-foreclosure.module.ts","./src/app/loan-foreclosure/services/index.ts","./src/app/loan-foreclosure/services/loan-foreclosure.service.ts"],"names":[],"mappings":"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","file":"loan-foreclosure-loan-foreclosure-module-es2015.js","sourcesContent":["export default \"<div id=\\\"data\\\">\\n    <h1 mat-dialog-title align=\\\"center\\\" id=\\\"title\\\">Letter for Loan Closure</h1>\\n    <mat-dialog-content class=\\\"mat-typography\\\">\\n        <h3 id=\\\"date\\\">Date: {{date| date:'dd-MM-yyyy'}}</h3>\\n        <br/>\\n        <h3 id=\\\"company\\\">ABC Company</h3>\\n        <h3 id=\\\"address1\\\">Nariman Point</h3>\\n        <h3 id=\\\"address2\\\">Mumbai</h3>\\n        <br/>\\n        <h3 id=\\\"salutation\\\">Dear {{name}}</h3>\\n        <h3 id=\\\"content\\\">We would like to notify that all the dues of {{name}} having Employee Id as {{id}} has been cleared and the loan of {{this.loanDate}} with loan amount = {{this.amount}} has been closed.</h3>\\n        <br/>\\n        <h3 id=\\\"thank\\\">Thanking You</h3>\\n        <br>\\n        <h3 id=\\\"bottom1\\\">Yours faithfully</h3>\\n        <h3 id=\\\"bottom2\\\">Amita Gupta</h3>\\n        <h3 id=\\\"bottom3\\\">Manager</h3>\\n    </mat-dialog-content>\\n</div>\\n<mat-dialog-actions align=\\\"end\\\">\\n    <button class=\\\"btn-danger\\\" mat-button mat-dialog-close>Cancel</button>\\n    <button class=\\\"btn-success\\\" mat-button (click)=\\\"onConfirmClick()\\\" cdkFocusInitial>Print</button>\\n</mat-dialog-actions>\\n\\n\";","export default \"<sb-layout-dashboard>\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.Foreclosure'| translate}}\\\"></sb-dashboard-head>\\n    <hr class=\\\"rounded\\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\n            <sb-card>\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Pages.Foreclosure'| translate}}</div>\\n                <div class=\\\"card-body table-responsive\\\">\\n                    <form class=\\\"form-inline\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"showTable()\\\">\\n                        <label>\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter Employee No\\\" formControlName=\\\"employeeNo\\\"/>\\n                        </label>\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!searchForm.valid\\\">{{'Accountant.GetInfo'| translate}}</button>\\n                    </form>\\n                    <table class=\\\"table table-striped\\\" *ngIf=\\\"table\\\" id=\\\"content\\\">\\n                        <tbody>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.EmployeeNo'| translate}}</td>\\n                            <td>{{text}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.EmployeeName'| translate}}</td>\\n                            <td>{{name}}</td>\\n                        </tr>\\n                        <!--tr>\\n                            <td>{{'Accountant.Tables.LoanType'| translate}}</td>\\n                            <td>{{loanType}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.Active'| translate}}</td>\\n                            <td>{{loanAmount| indianCurrency}}</td>\\n                        </tr-->\\n                        <!--tr>\\n                            <td>{{'Accountant.Tables.LoanDate'| translate}}</td>\\n                            <td>{{loanDate| date:'dd-MM-yyyy'}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.Amt'| translate}}</td>\\n                            <td>{{payAmount| indianCurrency}}</td>\\n                        </tr-->\\n                        <tr>\\n                            <td>{{'Accountant.Tables.DateForeclosure'| translate}}</td>\\n                            <td>\\n                                <label>\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"date\\\" name=\\\"date\\\"/>\\n                                </label>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </sb-card>\\n        </div>\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n    </div>\\n    <div *ngIf=\\\"table\\\">\\n        <sb-card>\\n            <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Tables.LoanDetails'| translate}}</div>\\n            <div class=\\\"card-body table-responsive\\\">\\n                <table class=\\\"table table-striped\\\" *ngIf=\\\"table\\\">\\n                    <thead>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.LoanDate'| translate}}</td>\\n                            <td>{{'Accountant.Tables.Loan'| translate}}</td>\\n                            <td>{{'Accountant.Tables.Duration'| translate}}</td>\\n                            <td>{{'Accountant.Tables.LoanType'| translate}}</td>\\n                            <td>{{'Accountant.Tables.PrincipleOutstanding'| translate}}</td>\\n                            <td>{{'Accountant.Tables.CloseLoan'| translate}}</td>\\n                        </tr>\\n                    </thead>\\n                    <tbody *ngFor=\\\"let loan of loanData; let i=index;\\\">\\n                        <tr>\\n                            <td>{{loan.date| date:'dd-MM-yyyy'}}</td>\\n                            <td>{{loan.amount| indianCurrency}}</td>\\n                            <td>{{loan.duration}}</td>\\n                            <td>{{loan.type}}</td>\\n                            <td>{{loan.pending| indianCurrency}}</td>\\n                            <td>\\n                                <label>\\n                                    <input type=\\\"checkbox\\\" (click)=\\\"pay(i)\\\"/>\\n                                </label>\\n                            </td>\\n                        </tr>\\n                        <tr *ngIf=\\\"payMode[i]\\\" align=\\\"center\\\">\\n                            <td colspan=\\\"6\\\">\\n                                <table class=\\\"table\\\">\\n                                    <tbody>\\n                                    <tr>\\n                                        <td>{{'Accountant.Tables.Mode' | translate}}</td>\\n                                        <td>\\n                                            <label>\\n                                                <select class=\\\"custom-select\\\" [(ngModel)]=\\\"type[i]\\\">\\n                                                    <option>{{'Accountant.Tables.Cash' | translate}}</option>\\n                                                    <option>{{'Accountant.Tables.Cheque' | translate}}</option>\\n                                                </select>\\n                                            </label>\\n                                        </td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"type == 'Cheque'\\\">\\n                                        <td>{{'Accountant.Tables.BankName' | translate}}</td>\\n                                        <td>\\n                                            <label>\\n                                                <select class=\\\"custom-select\\\" name=\\\"bankName\\\" [(ngModel)]=\\\"bankName[i]\\\">\\n                                                    <option *ngFor=\\\"let val of bankList\\\">{{val.bankName}}</option>\\n                                                </select>\\n                                            </label>\\n                                        </td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"type == 'Cheque'\\\">\\n                                        <td>{{'Accountant.Tables.ChequeDate' | translate}}</td>\\n                                        <td>\\n                                            <label>\\n                                                <input type=\\\"date\\\" [(ngModel)]=\\\"chequeDate[i]\\\" name=\\\"chequeDate\\\"/>\\n                                            </label>\\n                                        </td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"type == 'Cheque'\\\">\\n                                        <td>{{'Accountant.Tables.ChequeNo' | translate}}</td>\\n                                        <td>\\n                                            <label>\\n                                                <input type=\\\"text\\\" [(ngModel)]=\\\"chequeNo[i]\\\" name=\\\"chequeNo\\\"/>\\n                                            </label>\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>{{'Accountant.Tables.Remark'| translate}}</td>\\n                                        <td>\\n                                            <label>\\n                                                <input type=\\\"text\\\" [(ngModel)]=\\\"purpose[i]\\\" name=\\\"purpose\\\"/>\\n                                            </label>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                                <button (click)=\\\"close(loan.loanId, loan.amount, loan.date, type[i], bankName[i],chequeDate[i],chequeNo[i],purpose[i],loan.pending)\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </sb-card>\\n    </div>\\n</sb-layout-dashboard>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYW4tZm9yZWNsb3N1cmUvZGlhbG9nL2RpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n@Component({\n    selector: 'sb-dialog',\n    templateUrl: './dialog.component.html',\n    styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent {\n    id = '';\n    name = '';\n    date = '';\n    amount = '';\n    loanDate = '';\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private data: any,\n        private dialogRef: MatDialogRef<DialogComponent>\n    ) {\n        if (data) {\n            this.id = data.id || this.id;\n            this.name = data.name || this.name;\n            this.date = data.date || this.date;\n            this.amount = data.amount || this.amount;\n            this.loanDate = data.loandate || this.loanDate;\n        }\n        this.dialogRef.updateSize('300vw', '300vw');\n    }\n\n    onConfirmClick(): void {\n        // @ts-ignore\n        const docDefinition = {\n            title: 'Loan Closure Letter',\n            content: [\n                {\n                    // @ts-ignore\n                    text: document.getElementById('title').innerText,\n                    style: 'header',\n                    alignment: 'center',\n                },\n                { text: '\\n' },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('date').innerText,\n                },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('company').innerText,\n                },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('address1').innerText,\n                },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('address2').innerText,\n                },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('salutation').innerText,\n                },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text:\n                        'We would like to notify that all the dues of ' +\n                        this.name +\n                        ' having Employee Id as ' +\n                        this.id +\n                        ' has been cleared and the loan of ' +\n                        this.loanDate +\n                        ' with loan amount = ' +\n                        this.amount +\n                        ' has been closed.',\n                    alignment: 'justify',\n                },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('thank').innerText,\n                },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('bottom1').innerText,\n                },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('bottom2').innerText,\n                },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('bottom3').innerText,\n                },\n            ],\n            styles: {\n                header: {\n                    fontSize: 18,\n                    bold: true,\n                    margin: [0, 0, 0, 10],\n                },\n            },\n        };\n        // @ts-ignore\n        pdfMake.createPdf(docDefinition).download('Loan Closure Letter.pdf');\n        this.dialogRef.close(true);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoanForeclosureComponent } from './loan-foreclosure.component';\n\nconst routes: Routes = [{ path: '', component: LoanForeclosureComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoanForeclosureRoutingModule { }\n","export default \"table td {\\n  padding: 30px;\\n}\\n\\n#date {\\n  padding-top: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9hbi1mb3JlY2xvc3VyZS9DOlxcVXNlcnNcXExlbm92b1xcRG93bmxvYWRzXFxTb2NpZXR5X0Jhbmtpbmcvc3JjXFxhcHBcXGxvYW4tZm9yZWNsb3N1cmVcXGxvYW4tZm9yZWNsb3N1cmUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2xvYW4tZm9yZWNsb3N1cmUvbG9hbi1mb3JlY2xvc3VyZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUNDSjs7QURDQTtFQUNJLGlCQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9sb2FuLWZvcmVjbG9zdXJlL2xvYW4tZm9yZWNsb3N1cmUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB0ZHtcbiAgICBwYWRkaW5nOjMwcHg7XG59XG4jZGF0ZXtcbiAgICBwYWRkaW5nLXRvcDogNTBweDtcbn1cbiIsInRhYmxlIHRkIHtcbiAgcGFkZGluZzogMzBweDtcbn1cblxuI2RhdGUge1xuICBwYWRkaW5nLXRvcDogNTBweDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '@app/loan-foreclosure/dialog/dialog.component';\nimport { LoanForeclosureService } from '@app/loan-foreclosure/services';\n// @ts-ignore\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CreditEntryService } from '@app/credit-entry/services';\n\n@Component({\n    selector: 'sb-loan-foreclosure',\n    templateUrl: './loan-foreclosure.component.html',\n    styleUrls: ['./loan-foreclosure.component.scss'],\n})\nexport class LoanForeclosureComponent implements OnInit {\n    searchForm: FormGroup;\n    bankList: any;\n    text: any;\n    name: any;\n    table = false;\n    disable = true;\n    date: any;\n    loanData = [];\n    loanType: any;\n    loanAmount: any;\n    payAmount = 0;\n    type: any;\n    bankName: any;\n    chequeDate: any;\n    chequeNo: any;\n    purpose: any;\n    loanDate: any;\n    payMode: any;\n    constructor(\n        private loanService: LoanForeclosureService,\n        private dialog: MatDialog,\n        public fb: FormBuilder\n    ) {\n        this.searchForm = this.fb.group({\n            employeeNo: new FormControl('', Validators.compose([Validators.required])),\n        });\n    }\n    showTable() {\n        // @ts-ignore\n        this.text = this.searchForm.get('employeeNo').value;\n        const data = {\n            userId: this.text,\n        };\n        console.log(data);\n        this.loanService.getData(data).subscribe(\n            result => {\n                this.loanData = [];\n                console.log(result);\n                if (result.nameData.length === 0) {\n                    this.table = false;\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'This user does not exists!',\n                        icon: 'error',\n                    });\n                } else if (!result.loanData || result.loanData.length === 0) {\n                    this.table = false;\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'No loan exists!',\n                        icon: 'error',\n                    });\n                } else {\n                    console.log(result.loanData);\n                    this.payMode = new Array(result.loanData.length);\n                    this.bankName = new Array(result.loanData.length);\n                    this.purpose = new Array(result.loanData.length);\n                    this.chequeDate = new Array(result.loanData.length);\n                    this.chequeNo = new Array(result.loanData.length);\n                    this.type = new Array(result.loanData.length);\n                    // tslint:disable-next-line:prefer-for-of\n                    for (let j = 0; j < result.loanData.length; j++) {\n                        this.loanAmount = result.loanData[j].loanData.loanAmount;\n                        this.loanDate = result.loanData[j].loanData.date;\n                        this.payAmount = this.loanAmount;\n                        if (result.loanData[j].loanBook) {\n                            // tslint:disable-next-line:prefer-for-of\n                            for (let k = 0; k < result.loanData[j].loanBook.length; k++) {\n                                const interest =\n                                    this.payAmount * (result.loanData[j].loanData.interest / 1200);\n                                const amount = result.loanData[j].loanBook[k].credit - interest;\n                                this.payAmount -= amount;\n                            }\n                        }\n                        if (this.payAmount < 0) {\n                            this.payAmount = 0;\n                        }\n                        this.loanType = result.loanData[0].loanData.loanType;\n                        this.loanData.push({\n                            // @ts-ignore\n                            loanId: result.loanData[0].loanData.loanId,\n                            // @ts-ignore\n                            date: this.loanDate,\n                            // @ts-ignore\n                            amount: this.loanAmount,\n                            // @ts-ignore\n                            duration: result.loanData[0].loanData.loanDuration,\n                            // @ts-ignore\n                            type: this.loanType,\n                            // @ts-ignore\n                            pending: (Math.round(this.payAmount * 100) / 100).toFixed(0),\n                        });\n                    }\n                    this.name = result.nameData[0].name;\n                    this.table = true;\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n    }\n    close(\n        loanid: any,\n        loanAmount: any,\n        loanDate: any,\n        type: string,\n        bankname: string,\n        chequedate: string,\n        chequeno: string,\n        purpose: string,\n        payamount: any\n    ) {\n        if (!payamount || !type || !purpose || !this.date) {\n            Swal.fire({\n                title: 'Oops!',\n                text: 'Fill all the details!',\n                icon: 'error',\n            });\n        } else {\n            console.log(bankname);\n            const dialogRef = this.dialog.open(DialogComponent, {\n                data: {\n                    id: this.text,\n                    name: this.name,\n                    date: this.date,\n                    amount: loanAmount,\n                    loandate: loanDate,\n                },\n                height: '600px',\n                width: '700px',\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                const closeData = [];\n                if (result) {\n                    closeData.push({\n                        userId: this.text,\n                        loanId: loanid,\n                        date: this.date,\n                        mode: type,\n                        bankName: bankname,\n                        chequeDate: chequedate,\n                        chequeNo: chequeno,\n                        particulars: purpose,\n                        amount: payamount,\n                        type: 'Close Loan',\n                        status: 'Fore Closure',\n                        close: true,\n                    });\n                    this.loanService.sendData(closeData).subscribe(\n                        resultData => {\n                            Swal.fire({\n                                text: 'Loan Closed!',\n                                icon: 'success',\n                            }).then((isConfirm: any) => {\n                                if (isConfirm) {\n                                    this.loanData = this.loanData.filter(value => value === loanid);\n                                    console.log(this.loanData);\n                                    if (this.loanData.length === 0) {\n                                        // @ts-ignore\n                                        this.table = false;\n                                        this.text = null;\n                                        this.date = null;\n                                        this.loanAmount = null;\n                                        this.payAmount = 0;\n                                        this.loanDate = null;\n                                    }\n                                }\n                            });\n                        },\n                        error1 => {\n                            Swal.fire({\n                                title: 'Oops!',\n                                text: 'Try again!',\n                                icon: 'error',\n                            });\n                        }\n                    );\n                }\n            });\n        }\n    }\n    pay(index: any) {\n        this.payMode[index] = !this.payMode[index];\n    }\n    ngOnInit() {\n        this.loanService.getBankList().subscribe(result => {\n            this.bankList = result;\n            console.log(this.bankList);\n        });\n        this.loanData = [];\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { AppCommonModule } from '@app/app-common/app-common.module';\nimport { NavigationModule } from '@app/navigation/navigation.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { DialogComponent } from './dialog/dialog.component';\nimport { LoanForeclosureRoutingModule } from './loan-foreclosure-routing.module';\nimport { LoanForeclosureComponent } from './loan-foreclosure.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\n\n@NgModule({\n    declarations: [LoanForeclosureComponent, DialogComponent],\n    imports: [\n        CommonModule,\n        LoanForeclosureRoutingModule,\n        NavigationModule,\n        AppCommonModule,\n        TranslateModule,\n        FormsModule,\n        MatInputModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatMomentDateModule,\n        MatDialogModule,\n        MatButtonModule,\n        LayoutDashboardModule,\n        ReactiveFormsModule,\n    ],\n    exports: [DialogComponent],\n    entryComponents: [DialogComponent],\n})\nexport class LoanForeclosureModule {}\n","import { LoanForeclosureService } from './loan-foreclosure.service';\n\nexport const services = [LoanForeclosureService];\n\nexport * from './loan-foreclosure.service';\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LoanForeclosureService {\n    constructor(private http: HttpClient) {}\n\n    getBankList(): Observable<any> {\n        const url = 'http://206.189.129.219:8080/getBankList';\n        const headers = new HttpHeaders();\n        headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Access-Control-Allow-Methods', 'POST,GET,OPTIONS,PUT');\n        headers.append('Accept', 'application/json');\n        headers.append('content-type', 'application/json');\n        return this.http.get<any>(url, { headers });\n    }\n    getData(data: any): Observable<any> {\n        console.log(data);\n        const url = 'http://206.189.129.219:8080/getLoanData';\n        return this.http.post<any>(url, data);\n    }\n    sendData(data: any): Observable<any> {\n        console.log(data);\n        const url = 'http://206.189.129.219:8080/sendLoanForeCloseData';\n        const closeData = {\n            closeData: data,\n        };\n        return this.http.post<any>(url, closeData);\n    }\n}\n"],"sourceRoot":"webpack:///"}