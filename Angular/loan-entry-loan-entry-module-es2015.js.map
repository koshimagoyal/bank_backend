{"version":3,"sources":["./src/app/loan-entry/loan-entry.component.html","./src/app/loan-entry/loan-entry-routing.module.ts","./src/app/loan-entry/loan-entry.component.scss","./src/app/loan-entry/loan-entry.component.ts","./src/app/loan-entry/loan-entry.module.ts","./src/app/loan-entry/services/index.ts","./src/app/loan-entry/services/loan-entry.service.ts"],"names":[],"mappings":"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","file":"loan-entry-loan-entry-module-es2015.js","sourcesContent":["export default \"<sb-layout-dashboard>\\r\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.Entry'| translate}}\\\"></sb-dashboard-head>\\r\\n    <hr class=\\\"rounded\\\">\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Pages.Entry'| translate}}</div>\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <form class=\\\"form-inline\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"showTable()\\\">\\r\\n                        <label>\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter Employee No\\\" formControlName=\\\"employeeNo\\\"/>\\r\\n                        </label>\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!searchForm.valid\\\">{{'Accountant.GetInfo'| translate}}</button>\\r\\n                    </form>\\r\\n                    <table class=\\\"table table-striped\\\" *ngIf=\\\"table\\\" id=\\\"content\\\">\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.EmployeeNo'| translate}}</td>\\r\\n                            <td>{{text}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.EmployeeName'| translate}}</td>\\r\\n                            <td>{{name}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Corpus'| translate}}</td>\\r\\n                            <td>{{corpusData| indianCurrency}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Deposit'| translate}}</td>\\r\\n                            <td>{{depositData| indianCurrency}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.PreviousLoans'| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"checkbox\\\" (change)=\\\"focusoutHandler($event)\\\" />\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Date'| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"date\\\" name=\\\"date\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.LoanType'| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <select class=\\\"custom-select\\\" [(ngModel)]=\\\"type\\\">\\r\\n                                        <option>{{'Accountant.Tables.Personal'| translate}}</option>\\r\\n                                        <option>{{'Accountant.Tables.Emergency'| translate}}</option>\\r\\n                                    </select>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Interest'| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"number\\\" [(ngModel)]=\\\"interest\\\" name=\\\"interest\\\" />\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Loan'| translate}} (in INR)</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"number\\\" [(ngModel)]=\\\"loanAmount\\\" name=\\\"amount\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Duration'| translate}} (in Months)</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"number\\\" [(ngModel)]=\\\"duration\\\" name=\\\"duration\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <button *ngIf=\\\"table\\\" (click)=\\\"send()\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\r\\n                </div>\\r\\n            </sb-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"show\\\">\\r\\n        <ng-container *ngFor=\\\"let data of loans; let i = index\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header bg-primary headers\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\" style=\\\"margin-top: 10px; color: white;\\\">\\r\\n                            <h5><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"rupee-sign\\\"]'></fa-icon>&nbsp;{{'Employee.Loan'| translate}} ({{data.loanData.date| date:'dd-MM-yyyy'}})</h5>\\r\\n                        </div>\\r\\n                        <div class=\\\"col\\\" style=\\\"color: white;\\\">\\r\\n                            <span class=\\\"float-right\\\" style=\\\"margin: 10px;\\\"><h5 *ngIf=\\\"data.loanData.loanAmount; else not\\\">{{data.loanData.loanAmount| indianCurrency}}</h5></span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <ng-template #not>\\r\\n                    <td>-</td>\\r\\n                </ng-template>\\r\\n                <div class=\\\"card-header\\\" *ngIf=\\\"data.loanBook\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col\\\" style=\\\"margin-top: 10px;\\\">\\r\\n                            <fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>&nbsp;{{\\\"Employee.Loanbook.Title\\\" | translate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body table-responsive\\\" *ngIf=\\\"data.loanBook\\\">\\r\\n                    <table class=\\\"table table-striped\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th style=\\\"width: 16.66%;\\\" scope=\\\"col\\\"><span>{{\\\"Employee.Loanbook.Date\\\" | translate}}</span></th>\\r\\n                            <th style=\\\"width: 60%;\\\" scope=\\\"col\\\"><span>{{\\\"Employee.Loanbook.Particulars\\\" | translate}}</span></th>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Employee.Loanbook.Emi\\\" | translate}}</span></th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr *ngFor=\\\"let val of data.loanBook\\\">\\r\\n                            <th scope=\\\"row\\\" *ngIf=\\\"isDate(val.date); else notDate\\\">{{val.date| date:'dd-MM-yyyy'}}</th>\\r\\n                            <ng-template #notDate>\\r\\n                                <th scope=\\\"row\\\">{{val.date}}</th>\\r\\n                            </ng-template>\\r\\n                            <td *ngIf=\\\"val.particulars; else not\\\">{{val.particulars}}</td>\\r\\n                            <td *ngIf=\\\"val.credit; else not\\\">{{val.credit| indianCurrency}}</td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div class=\\\"card-body table-responsive\\\" *ngIf=\\\"data.closeData && data.closeData[0].mode==='Cash';else cheque\\\">\\r\\n                    <h3 style=\\\"font-weight: bold; text-align: center;\\\">Loan Closure Details</h3>\\r\\n                    <table class=\\\"table table-striped\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ShowDate\\\" | translate}}</span></th>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.LoanStatus\\\"  | translate}}</span></th>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Mode\\\" | translate}}</span></th>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Pay\\\" | translate}}</span></th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"row\\\" *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</th>\\r\\n                            <ng-template #notDate>\\r\\n                                <th scope=\\\"row\\\">{{data.closeData[0].date}}</th>\\r\\n                            </ng-template>\\r\\n                            <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\r\\n                            <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\r\\n                            <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <ng-template #cheque>\\r\\n                    <div class=\\\"card-body table-responsive\\\" *ngIf=\\\"data.closeData && data.closeData[0].mode==='Cheque'\\\">\\r\\n                        <h3 style=\\\"font-weight: bold; text-align: center;\\\">{{\\\"Accountant.Tables.LoanStatus\\\" | translate}}</h3>\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ShowDate\\\" | translate}}</span></th>\\r\\n                                <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.LoanStatus\\\"  | translate}}</span></th>\\r\\n                                <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Mode\\\" | translate}}</span></th>\\r\\n                                <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Pay\\\" | translate}}</span></th>\\r\\n                                <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ChequeDate\\\" | translate}}</span></th>\\r\\n                                <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.BankName\\\"  | translate}}</span></th>\\r\\n                                <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ChequeNo\\\" | translate}}</span></th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <th scope=\\\"row\\\" *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</th>\\r\\n                                <ng-template #notDate>\\r\\n                                    <th scope=\\\"row\\\">{{data.closeData[0].date}}</th>\\r\\n                                </ng-template>\\r\\n                                <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\r\\n                                <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\r\\n                                <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\r\\n                                <td *ngIf=\\\"data.chequeData[0].chequeDate; else not\\\">{{data.chequeData[0].chequeDate| indianCurrency}}</td>\\r\\n                                <td *ngIf=\\\"data.chequeData[0].bankName; else not\\\">{{data.chequeData[0].bankName| indianCurrency}}</td>\\r\\n                                <td *ngIf=\\\"data.chequeData[0].chequeNo; else not\\\">{{data.chequeData[0].chequeNo| indianCurrency}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </sb-card>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n</sb-layout-dashboard>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoanEntryComponent } from './loan-entry.component';\r\n\r\nconst routes: Routes = [{ path: '', component: LoanEntryComponent }];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class LoanEntryRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYW4tZW50cnkvbG9hbi1lbnRyeS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ExpenseCorpusService } from '@app/expense/services';\r\nimport { LoanEntryService } from '@app/loan-entry/services';\r\n// @ts-ignore\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'sb-loan-entry',\r\n    templateUrl: './loan-entry.component.html',\r\n    styleUrls: ['./loan-entry.component.scss'],\r\n})\r\nexport class LoanEntryComponent implements OnInit {\r\n    searchForm: FormGroup;\r\n    text: any;\r\n    depositData = 23478;\r\n    table = false;\r\n    loanAmount: any;\r\n    duration: any;\r\n    type: any;\r\n    data: any;\r\n    name: any;\r\n    interest: any;\r\n    date: any;\r\n    corpusData = 0;\r\n    show = false;\r\n    loans: any;\r\n    p: any;\r\n    loanTerm: any;\r\n    constructor(private loanService: LoanEntryService, public fb: FormBuilder) {\r\n        this.searchForm = this.fb.group({\r\n            employeeNo: new FormControl('', Validators.compose([Validators.required])),\r\n        });\r\n    }\r\n    showTable() {\r\n        // @ts-ignore\r\n        this.text = this.searchForm.get('employeeNo').value;\r\n        console.log(this.text);\r\n        this.loanService.getData(this.text).subscribe(\r\n            result => {\r\n                console.log(result);\r\n                if (result.nameData.length === 0) {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'This user does not exists!',\r\n                        icon: 'error',\r\n                    });\r\n                } else {\r\n                    console.log(result);\r\n                    this.name = result.nameData[0].name;\r\n                    this.table = true;\r\n                }\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n    }\r\n    focusoutHandler($event: any) {\r\n        if ($event.target.checked) {\r\n            this.loanService.getAllData(this.text).subscribe(\r\n                result => {\r\n                    if (result) {\r\n                        console.log(result);\r\n                        if (result.length === 0) {\r\n                            Swal.fire({\r\n                                title: 'Oops!',\r\n                                text: 'No Previous Loan Exists!',\r\n                                icon: 'error',\r\n                            });\r\n                        } else {\r\n                            this.loanTerm = [result.loanData.length];\r\n                            this.loans = result.loanData;\r\n                            this.show = true;\r\n                        }\r\n                    }\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.show = false;\r\n        }\r\n    }\r\n    send() {\r\n        if (\r\n            !this.text ||\r\n            !this.loanAmount ||\r\n            !this.duration ||\r\n            !this.date ||\r\n            !this.type ||\r\n            !this.interest\r\n        ) {\r\n            Swal.fire({\r\n                title: 'Oops!',\r\n                text: 'Fill all the details!',\r\n                icon: 'error',\r\n            });\r\n        } else {\r\n            this.data = {\r\n                userId: this.text,\r\n                loanAmount: this.loanAmount,\r\n                loanDuration: this.duration,\r\n                date: this.date,\r\n                loanType: this.type,\r\n                interest: this.interest,\r\n                closeLoan: false,\r\n            };\r\n            this.loanService.sendData(this.data).subscribe(\r\n                result => {\r\n                    Swal.fire({\r\n                        text: 'Sent!',\r\n                        icon: 'success',\r\n                    }).then((isConfirm: any) => {\r\n                        if (isConfirm) {\r\n                            // @ts-ignore\r\n                            this.table = false;\r\n                            this.text = null;\r\n                            this.date = null;\r\n                            this.loanAmount = null;\r\n                            this.type = null;\r\n                            this.duration = null;\r\n                            this.interest = null;\r\n                            this.show = false;\r\n                            this.searchForm = this.fb.group({\r\n                                employeeNo: new FormControl('', Validators.compose([Validators.required])),\r\n                            });\r\n                        }\r\n                    });\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.loanService.getCorpusData().subscribe(\r\n            result => {\r\n                console.log(result);\r\n                // tslint:disable-next-line:prefer-for-of\r\n                for (let i = 0; i < result.balance.length; i++) {\r\n                    this.corpusData =\r\n                        this.corpusData + result.balance[i].credit - result.balance[i].debit;\r\n                }\r\n                console.log(this.corpusData);\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n        return this.corpusData;\r\n    }\r\n    isDate(d: any) {\r\n        const result = Date.parse(d);\r\n        if (!result) return false;\r\n        else return true;\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppCommonModule } from '@app/app-common/app-common.module';\r\nimport * as service from '@app/loan-entry/services';\r\nimport { NavigationModule } from '@app/navigation/navigation.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { LoanEntryRoutingModule } from './loan-entry-routing.module';\r\nimport { LoanEntryComponent } from './loan-entry.component';\r\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\r\n\r\n@NgModule({\r\n    declarations: [LoanEntryComponent],\r\n    imports: [\r\n        CommonModule,\r\n        LoanEntryRoutingModule,\r\n        TranslateModule,\r\n        FormsModule,\r\n        AppCommonModule,\r\n        NavigationModule,\r\n        NgxPaginationModule,\r\n        Ng2SearchPipeModule,\r\n        LayoutDashboardModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    providers: [...service.services],\r\n})\r\nexport class LoanEntryModule {}\r\n","import { LoanEntryService } from './loan-entry.service';\r\n\r\nexport const services = [LoanEntryService];\r\n\r\nexport * from './loan-entry.service';\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LoanEntryService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getData(text: any): Observable<any> {\r\n        console.log(text);\r\n        const url = 'http://206.189.129.219:8080/getUserData';\r\n        const data = {\r\n            userId: text,\r\n        };\r\n        return this.http.post<any>(url, data);\r\n    }\r\n    getCorpusData(): Observable<any> {\r\n        const url = 'http://206.189.129.219:8080/getCorpusData';\r\n        return this.http.get<any>(url);\r\n    }\r\n    getAllData(text: any): Observable<any> {\r\n        const data = {\r\n            userId: text,\r\n        };\r\n        const url = 'http://206.189.129.219:8080/getUserLoanData';\r\n        return this.http.post(url, data);\r\n    }\r\n    sendData(data: any): Observable<any> {\r\n        console.log(data);\r\n        const url = 'http://206.189.129.219:8080/sendLoanEntry';\r\n        return this.http.post<any>(url, data);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}