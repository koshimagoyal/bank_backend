{"version":3,"sources":["webpack:///src/app/generate-statement/dialog.component.html","webpack:///src/app/generate-statement/generate-statement.component.html","webpack:///src/app/generate-statement/dialog.component.ts","webpack:///src/app/generate-statement/generate-statement-routing.module.ts","webpack:///src/app/generate-statement/generate-statement.component.scss","webpack:///src/app/generate-statement/generate-statement.component.ts","webpack:///src/app/generate-statement/generate-statement.module.ts","webpack:///src/app/generate-statement/services/generate-statement.service.ts","webpack:///src/app/generate-statement/services/index.ts"],"names":["vfs","pdfMake","DialogComponent","data","dialogRef","id","name","start","end","balance","accountData","loanData","console","log","body","columns","text","style","fillColor","push","forEach","val","account","credit","isDate","date","format","particulars","toString","mode","debit","cheque","createChequeTable","colSpan","alignment","table","widths","headerRows","createChequeBody","chequeDate","bankName","chequeNo","dateOfClosure","closeLoan","loanAmount","loanDuration","loanType","closeStatus","loanBook","createLoanBookTable","closeData","createCloseTable","chequeData","createLoanBookBody","createCloseBody","docDefinition","pageSize","pageOrientation","pageMargins","content","document","getElementById","innerText","layout","innerHTML","createAccountBody","createLoanBody","styles","header","fontSize","bold","margin","subheader","tableExample","nestedTable","tableHeader","color","createPdf","download","close","d","result","Date","parse","selector","template","routes","path","component","GenerateStatementRoutingModule","imports","forChild","exports","GenerateStatementComponent","dialog","snackBar","generateService","fb","searchForm","group","employeeNo","compose","required","reportForm","get","value","getData","subscribe","nameData","length","fire","title","icon","i","error1","userId","getDialogData","open","height","width","afterClosed","res","GenerateStatementModule","declarations","entryComponents","GenerateStatementService","http","url","post","providedIn","services"],"mappings":"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","file":"generate-statement-generate-statement-module-es5.js","sourcesContent":["export default \"<div id=\\\"data\\\">\\n    <h1 mat-dialog-title align=\\\"center\\\" id=\\\"title\\\">Bank Statement</h1>\\n    <mat-dialog-content class=\\\"mat-typography\\\">\\n        <h3 id=\\\"empId\\\">Employee Id: {{id}}</h3>\\n        <h3 id=\\\"empName\\\">Employee Name: {{name}}</h3>\\n        <br>\\n        <table class=\\\"table table-borderless\\\">\\n            <thead>\\n                <tr>\\n                    <th>Particulars</th>\\n                    <th>Value</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n            <tr>\\n                <td>Start Date</td>\\n                <td id=\\\"start\\\">{{start| date:'dd-MM-yyyy'}}</td>\\n            </tr>\\n            <tr>\\n                <td>End Date</td>\\n                <td id=\\\"end\\\">{{end| date:'dd-MM-yyyy'}}</td>\\n            </tr>\\n            <tr>\\n                <td>Balance</td>\\n                <td id=\\\"bal\\\">{{balance| indianCurrency}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n        <br>\\n        <h1 id=\\\"subDetail1\\\">Operating Account Details</h1>\\n        <table class=\\\"table table-bordered\\\">\\n            <thead>\\n            <tr>\\n                <th style=\\\"width: 16.66%;\\\">Date</th>\\n                <th style=\\\"width: 60%;\\\">Particulars</th>\\n                <th>Mode</th>\\n                <th>Deposit</th>\\n                <th>Withdrawal</th>\\n            </tr>\\n            </thead>\\n            <tbody *ngFor=\\\"let val of accountData\\\">\\n            <tr>\\n                <td *ngIf=\\\"isDate(val.account.date); else notDate\\\">{{val.account.date| date:'dd-MM-yyyy'}}</td>\\n                <ng-template #notDate>\\n                    <td>{{val.account.date}}</td>\\n                </ng-template>\\n                <td *ngIf=\\\"val.account.particulars; else not\\\">{{val.account.particulars}}</td>\\n                <td *ngIf=\\\"val.account.mode; else not\\\">{{val.account.mode}}</td>\\n                <td class=\\\"table-success\\\" *ngIf=\\\"val.account.credit; else not\\\" id=\\\"deposit\\\">{{val.account.credit| indianCurrency}}</td>\\n                <td class=\\\"table-danger\\\" *ngIf=\\\"val.account.debit; else not\\\" id=\\\"withDraw\\\">{{val.account.debit| indianCurrency}}</td>\\n            </tr>\\n            <tr>\\n                <td *ngIf=\\\"val.cheque\\\" align=\\\"center\\\" colspan=\\\"5\\\">\\n                    <h3 style=\\\"font-weight: bold\\\">Cheque Details</h3>\\n                    <table style=\\\"width: 100%;\\\">\\n                        <thead>\\n                        <tr>\\n                            <th style=\\\"width: 16.66%;\\\">Cheque Date</th>\\n                            <th style=\\\"width: 60%;\\\">Bank Name</th>\\n                            <th>Cheque Number</th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr>\\n                            <td *ngIf=\\\"val.cheque[0].chequeDate; else not\\\">{{val.cheque[0].chequeDate| date:'dd-MM-yyyy'}}</td>\\n                            <td class=\\\"col-5\\\" *ngIf=\\\"val.cheque[0].bankName; else not\\\">{{val.cheque[0].bankName}}</td>\\n                            <td *ngIf=\\\"val.cheque[0].chequeNo; else not\\\">{{val.cheque[0].chequeNo}}</td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </td>\\n            </tr>\\n            </tbody>\\n        </table>\\n        <br>\\n        <h1 id=\\\"subDetail2\\\">Loan Account Details</h1>\\n        <table class=\\\"table table-bordered\\\">\\n            <thead>\\n                <tr>\\n                    <th>Loan Date</th>\\n                    <th>Loan Amount</th>\\n                    <th>Loan Duration</th>\\n                    <th>Loan Type</th>\\n                    <th>Close Loan</th>\\n                    <th>Closure Status</th>\\n                    <th>Date of Loan Closure</th>\\n                </tr>\\n            </thead>\\n            <tbody *ngFor=\\\"let data of loanData;\\\">\\n            <tr>\\n                <td *ngIf=\\\"isDate(data.loanData.date); else notDate\\\">{{data.loanData.date| date:'dd-MM-yyyy'}}</td>\\n                <ng-template #notDate>\\n                    <td>{{data.loanData.date}}</td>\\n                </ng-template>\\n                <td *ngIf=\\\"data.loanData.loanAmount; else not\\\">{{data.loanData.loanAmount| indianCurrency}}</td>\\n                <td *ngIf=\\\"data.loanData.loanDuration; else not\\\">{{data.loanData.loanDuration}}</td>\\n                <td *ngIf=\\\"data.loanData.loanType; else not\\\">{{data.loanData.loanType}}</td>\\n                <td *ngIf=\\\"data.loanData.closeLoan; else not\\\">{{data.loanData.closeLoan}}</td>\\n                <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\n                <td *ngIf=\\\"data.loanData.dateOfClosure; else not\\\">{{data.loanData.dateOfClosure| date:'dd-MM-yyyy'}}</td>\\n            </tr>\\n            <tr>\\n                <td *ngIf=\\\"data.loanBook\\\" align=\\\"center\\\" colspan=\\\"7\\\">\\n                    <h3 style=\\\"font-weight: bold\\\">EMI Details</h3>\\n                    <table style=\\\"width: 100%;\\\">\\n                        <thead>\\n                        <tr>\\n                            <th style=\\\"width: 16.66%;\\\">EMI Date</th>\\n                            <th style=\\\"width: 60%;\\\">Particulars</th>\\n                            <th>EMI Paid</th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr *ngFor=\\\"let value of data.loanBook\\\">\\n                            <td *ngIf=\\\"isDate(value.date); else notDate\\\">{{value.date}}</td>\\n                            <ng-template #notDate>\\n                                <td>{{value.date}}</td>\\n                            </ng-template>\\n                            <td class=\\\"col-5\\\" *ngIf=\\\"value.particulars; else not\\\">{{value.particulars}}</td>\\n                            <td *ngIf=\\\"value.credit; else not\\\">{{value.credit| indianCurrency}}</td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td *ngIf=\\\"data.closeData && data.closeData[0].mode==='Cash';else cheque\\\" align=\\\"center\\\" colspan=\\\"7\\\">\\n                    <h3 style=\\\"font-weight: bold\\\">Loan Closure Details</h3>\\n                    <table style=\\\"width: 100%;\\\">\\n                        <thead>\\n                        <tr>\\n                            <th style=\\\"width: 16.66%;\\\">Date</th>\\n                            <th>Loan Status</th>\\n                            <th>Mode of Payment</th>\\n                            <th>Paid Amount</th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr>\\n                            <td *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</td>\\n                            <ng-template #notDate>\\n                                <td>{{data.closeData[0].date}}</td>\\n                            </ng-template>\\n                            <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\n                            <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\n                            <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </td>\\n                <ng-template #cheque>\\n                    <td *ngIf=\\\"data.closeData && data.closeData[0].mode==='Cheque';\\\" align=\\\"center\\\" colspan=\\\"7\\\">\\n                        <h3 style=\\\"font-weight: bold\\\">Loan Closure Details</h3>\\n                        <table style=\\\"width: 100%;\\\">\\n                            <thead>\\n                            <tr>\\n                                <th style=\\\"width: 16.66%;\\\">Date</th>\\n                                <th>Loan Status</th>\\n                                <th>Mode of Payment</th>\\n                                <th>Paid Amount</th>\\n                                <th>Cheque Date</th>\\n                                <th>Bank Name</th>\\n                                <th>Cheque Number</th>\\n                            </tr>\\n                            </thead>\\n                            <tbody>\\n                            <tr>\\n                                <td *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</td>\\n                                <ng-template #notDate>\\n                                    <td>{{data.closeData[0].date}}</td>\\n                                </ng-template>\\n                                <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\n                                <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\n                                <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\n                                <td *ngIf=\\\"data.chequeData[0].chequeDate; else not\\\">{{data.chequeData[0].chequeDate| date:'dd-MM-yyyy'}}</td>\\n                                <td *ngIf=\\\"data.chequeData[0].bankName; else not\\\">{{data.chequeData[0].bankName}}</td>\\n                                <td *ngIf=\\\"data.chequeData[0].chequeNo; else not\\\">{{data.chequeData[0].chequeNo}}</td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </td>\\n                </ng-template>\\n            </tr>\\n            </tbody>\\n        </table>\\n        <ng-template #not>\\n            <td>-</td>\\n        </ng-template>\\n    </mat-dialog-content>\\n</div>\\n<mat-dialog-actions align=\\\"end\\\">\\n    <button class=\\\"btn-danger\\\" mat-button mat-dialog-close>Cancel</button>\\n    <button class=\\\"btn-success\\\" mat-button (click)=\\\"onConfirmClick()\\\" cdkFocusInitial>Download</button>\\n</mat-dialog-actions>\\n\";","export default \"<sb-layout-dashboard>\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.GenerateStatement' | translate}}\\\"></sb-dashboard-head>\\n    <hr class=\\\"rounded\\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\n            <sb-card>\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Pages.GenerateStatement' | translate}}</div>\\n                <div class=\\\"card-body table-responsive\\\">\\n                    <form class=\\\"form-inline\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"showTable()\\\">\\n                        <label>\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter Employee No\\\" formControlName=\\\"employeeNo\\\"/>\\n                        </label>\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!searchForm.valid\\\">{{'Accountant.GetInfo'| translate}}</button>\\n                    </form>\\n                    <form class=\\\"form-inline\\\" [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"openDialog()\\\">\\n                        <table class=\\\"table table-striped\\\" *ngIf=\\\"table\\\" id=\\\"content\\\">\\n                            <tbody>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.EmployeeNo' | translate}}</td>\\n                                <td><div style=\\\"margin-left: 16%;\\\">{{text}}</div></td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.EmployeeName' | translate}}</td>\\n                                <td><div style=\\\"margin-left: 16%;\\\">{{name}}</div></td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Balance' | translate}}</td>\\n                                <td><div style=\\\"margin-left: 16%;\\\">{{balance| indianCurrency}}</div></td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Start' | translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"date\\\" formControlName=\\\"start\\\"/>\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"reportForm.get('start').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.End' | translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"date\\\" formControlName=\\\"end\\\"/>\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"reportForm.get('end').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                            <button type=\\\"submit\\\" [disabled]=\\\"!reportForm.valid\\\">{{'Accountant.Pages.GenerateStatement' | translate}}</button>\\n                        </table>\\n                    </form>\\n                </div>\\n            </sb-card>\\n        </div>\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n    </div>\\n</sb-layout-dashboard>\\n\";","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n// @ts-ignore\nimport moment from 'moment';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n@Component({\n    selector: 'sb-dialog',\n    templateUrl: './dialog.component.html',\n})\nexport class DialogComponent {\n    id = '';\n    name = '';\n    start = '';\n    end = '';\n    balance = 0;\n    accountData = [];\n    loanData = [];\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private data: any,\n        private dialogRef: MatDialogRef<DialogComponent>\n    ) {\n        console.log(data);\n        if (data) {\n            this.id = data.id || this.id;\n            this.name = data.name || this.name;\n            this.start = data.start || this.start;\n            this.end = data.end || this.end;\n            this.balance = data.balance || this.balance;\n            this.accountData = data.accountData || this.accountData;\n            this.loanData = data.loanData || this.loanData;\n        }\n        // this.dialogRef.updateSize('300vw', '300vw');\n    }\n    createAccountBody(data: any[]) {\n        const body: any[][] = [];\n        const columns = [\n            { text: 'Date', style: 'tableHeader' },\n            { text: 'Particulars', style: 'tableHeader' },\n            { text: 'Mode', style: 'tableHeader' },\n            { text: 'Deposit', style: 'tableHeader', fillColor: '#7CFC00' },\n            { text: 'Withdrawal', style: 'tableHeader', fillColor: '#DC143C' },\n        ];\n        body.push(columns);\n        data.forEach(val => {\n            if (val.account.credit === null) {\n                if (this.isDate(val.account.date)) {\n                    body.push([\n                        moment(val.account.date).format('DD-MM-YYYY'),\n                        val.account.particulars.toString(),\n                        val.account.mode.toString(),\n                        { text: '-', fillColor: '#7CFC00' },\n                        { text: val.account.debit, fillColor: '#DC143C' },\n                    ]);\n                } else {\n                    body.push([\n                        val.account.date.toString(),\n                        val.account.particulars.toString(),\n                        val.account.mode.toString(),\n                        { text: '-', fillColor: '#7CFC00' },\n                        { text: val.account.debit, fillColor: '#DC143C' },\n                    ]);\n                }\n            } else {\n                if (this.isDate(val.account.date)) {\n                    body.push([\n                        moment(val.account.date).format('DD-MM-YYYY'),\n                        val.account.particulars.toString(),\n                        val.account.mode.toString(),\n                        { text: val.account.credit, fillColor: '#7CFC00' },\n                        { text: '-', fillColor: '#DC143C' },\n                    ]);\n                } else {\n                    body.push([\n                        val.account.date.toString(),\n                        val.account.particulars.toString(),\n                        val.account.mode.toString(),\n                        { text: val.account.credit, fillColor: '#7CFC00' },\n                        { text: '-', fillColor: '#DC143C' }\n                    ]);\n                }\n            }\n            if (val.cheque) {\n                body.push([this.createChequeTable(val.cheque), {}, {}, {}, {}]);\n            }\n        });\n        console.log(body);\n        return body;\n    }\n    createChequeTable(data: any) {\n        return {\n            colSpan: 5,\n            alignment: 'center',\n            style: 'nestedTable',\n            table: {\n                widths: ['14.28%', '*', '14.28%', '*', '14.28%'],\n                headerRows: 1,\n                body: this.createChequeBody(data),\n            },\n        };\n    }\n    createChequeBody(data: any[]) {\n        const body: any[][] = [];\n        body.push([\n            { text: 'Cheque Details', colSpan: 5, style: 'subheader', alignment: 'center' },\n            {},\n            {},\n            {},\n            {},\n        ]);\n        body.push([\n            { text: 'Cheque Date', style: 'tableHeader', alignment: 'center' },\n            { text: 'Bank Name', colSpan: 2, style: 'tableHeader', alignment: 'center' },\n            {},\n            { text: 'Cheque Number', colSpan: 2, style: 'tableHeader', alignment: 'center' },\n            {},\n        ]);\n        data.forEach(val => {\n            console.log(val);\n            if (this.isDate(val.chequeDate)) {\n                body.push([\n                    {\n                        text: moment(val.chequeDate).format('DD-MM-YYYY'),\n                        alignment: 'center',\n                    },\n                    { text: val.bankName.toString(), colSpan: 2, alignment: 'center' },\n                    {},\n                    { text: val.chequeNo.toString(), colSpan: 2, alignment: 'center' },\n                    {},\n                ]);\n            } else {\n                body.push([\n                    { text: val.chequeDate.toString(), alignment: 'center' },\n                    { text: val.bankName.toString(), colSpan: 2, alignment: 'center' },\n                    {},\n                    { text: val.chequeNo.toString(), colSpan: 2, alignment: 'center' },\n                    {},\n                ]);\n            }\n        });\n\n        return body;\n    }\n    createLoanBody(data: any[]) {\n        const body: any[][] = [];\n        const columns = [\n            { text: 'Loan Date', style: 'tableHeader' },\n            { text: 'Loan Amount', style: 'tableHeader' },\n            { text: 'Loan Duration', style: 'tableHeader' },\n            { text: 'Loan Type', style: 'tableHeader' },\n            { text: 'Close Loan', style: 'tableHeader' },\n            { text: 'Closure Status', style: 'tableHeader' },\n            { text: 'Date of Loan Closure', style: 'tableHeader' },\n        ];\n        body.push(columns);\n        data.forEach(val => {\n            if (this.isDate(val.loanData.date)) {\n                if (this.isDate(val.loanData.dateOfClosure)) {\n                    if (val.loanData.closeLoan === 0) {\n                        body.push([\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\n                            val.loanData.loanAmount.toString(),\n                            val.loanData.loanDuration.toString(),\n                            val.loanData.loanType.toString(),\n                            'No',\n                            val.loanData.closeStatus.toString(),\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\n                        ]);\n                    } else {\n                        body.push([\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\n                            val.loanData.loanAmount.toString(),\n                            val.loanData.loanDuration.toString(),\n                            val.loanData.loanType.toString(),\n                            'Yes',\n                            val.loanData.closeStatus.toString(),\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\n                        ]);\n                    }\n                } else {\n                    if (val.loanData.closeLoan === 0) {\n                        body.push([\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\n                            val.loanData.loanAmount.toString(),\n                            val.loanData.loanDuration.toString(),\n                            val.loanData.loanType.toString(),\n                            'No',\n                            val.loanData.closeStatus,\n                            val.loanData.dateOfClosure,\n                        ]);\n                    } else {\n                        body.push([\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\n                            val.loanData.loanAmount.toString(),\n                            val.loanData.loanDuration.toString(),\n                            val.loanData.loanType.toString(),\n                            'Yes',\n                            val.loanData.closeStatus,\n                            val.loanData.dateOfClosure,\n                        ]);\n                    }\n                }\n            } else {\n                if (this.isDate(val.loanData.dateOfClosure)) {\n                    if (val.loanData.closeLoan === 0) {\n                        body.push([\n                            val.loanData.date.toString(),\n                            val.loanData.loanAmount.toString(),\n                            val.loanData.loanDuration.toString(),\n                            val.loanData.loanType.toString(),\n                            'No',\n                            val.loanData.closeStatus,\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\n                        ]);\n                    } else {\n                        body.push([\n                            val.loanData.date.toString(),\n                            val.loanData.loanAmount.toString(),\n                            val.loanData.loanDuration.toString(),\n                            val.loanData.loanType.toString(),\n                            'Yes',\n                            val.loanData.closeStatus,\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\n                        ]);\n                    }\n                } else {\n                    if (val.loanData.closeLoan === 0) {\n                        body.push([\n                            val.loanData.date.toString(),\n                            val.loanData.loanAmount.toString(),\n                            val.loanData.loanDuration.toString(),\n                            val.loanData.loanType.toString(),\n                            'No',\n                            val.loanData.closeStatus,\n                            val.loanData.dateOfClosure,\n                        ]);\n                    } else {\n                        body.push([\n                            val.loanData.date.toString(),\n                            val.loanData.loanAmount.toString(),\n                            val.loanData.loanDuration.toString(),\n                            val.loanData.loanType.toString(),\n                            'Yes',\n                            val.loanData.closeStatus,\n                            val.loanData.dateOfClosure,\n                        ]);\n                    }\n                }\n            }\n            if (val.loanBook) {\n                body.push([this.createLoanBookTable(val.loanBook), {}, {}, {}, {}, {}, {}]);\n            }\n            if (val.closeData) {\n                body.push([\n                    this.createCloseTable(val.closeData, val.loanData, val.chequeData),\n                    {},\n                    {},\n                    {},\n                    {},\n                    {},\n                    {},\n                ]);\n            }\n        });\n        console.log(body);\n        return body;\n    }\n    createLoanBookTable(data: any) {\n        return {\n            colSpan: 7,\n            alignment: 'center',\n            style: 'nestedTable',\n            table: {\n                widths: ['14.28%', '*', '14.28%', '*', '*', '14.28%', '*'],\n                headerRows: 1,\n                body: this.createLoanBookBody(data),\n            },\n        };\n    }\n    createLoanBookBody(data: any[]) {\n        const body: any[][] = [];\n        body.push([\n            { text: 'EMI Details', colSpan: 7, style: 'subheader', alignment: 'center' },\n            {},\n            {},\n            {},\n            {},\n            {},\n            {},\n        ]);\n        body.push([\n            { text: 'EMI Date', colSpan: 2, style: 'tableHeader', alignment: 'center' },\n            {},\n            { text: 'Particulars', colSpan: 3, style: 'tableHeader', alignment: 'center' },\n            {},\n            {},\n            { text: 'EMI Paid', colSpan: 2, style: 'tableHeader', alignment: 'center' },\n            {},\n        ]);\n        data.forEach(val => {\n            console.log(val);\n            if (this.isDate(val.date)) {\n                body.push([\n                    {\n                        text: moment(val.date).format('DD-MM-YYYY'),\n                        colSpan: 2,\n                        alignment: 'center',\n                    },\n                    {},\n                    { text: val.particulars.toString(), colSpan: 3, alignment: 'center' },\n                    {},\n                    {},\n                    { text: val.credit.toString(), colSpan: 2, alignment: 'center' },\n                    {},\n                ]);\n            } else {\n                body.push([\n                    { text: val.date.toString(), colSpan: 2, alignment: 'center' },\n                    {},\n                    { text: val.particulars.toString(), colSpan: 3, alignment: 'center' },\n                    {},\n                    {},\n                    { text: val.credit.toString(), colSpan: 2, alignment: 'center' },\n                    {},\n                ]);\n            }\n        });\n\n        return body;\n    }\n    createCloseTable(data: any, loanData: any, chequeData: any) {\n        return {\n            colSpan: 7,\n            alignment: 'center',\n            style: 'nestedTable',\n            table: {\n                widths: ['14.28%', '*', '*', '*', '*', '*', '*'],\n                headerRows: 1,\n                body: this.createCloseBody(data, loanData, chequeData),\n            },\n        };\n    }\n    createCloseBody(data: any[], loanData: any, chequeData: any[]) {\n        const body: any[][] = [];\n        body.push([\n            { text: 'Loan Closure Details', colSpan: 7, style: 'subheader', alignment: 'center' },\n            {},\n            {},\n            {},\n            {},\n            {},\n            {},\n        ]);\n        if (data[0].mode === 'Cash') {\n            body.push([\n                { text: 'Date', colSpan: 2, style: 'tableHeader', alignment: 'center' },\n                {},\n                { text: 'Loan Status', colSpan: 2, style: 'tableHeader', alignment: 'center' },\n                {},\n                { text: 'Mode of Payment', style: 'tableHeader', alignment: 'center' },\n                { text: 'Paid Amount', colSpan: 2, style: 'tableHeader', alignment: 'center' },\n                {},\n            ]);\n            if (this.isDate(data[0].date)) {\n                body.push([\n                    {\n                        text: moment(data[0].date).format('DD-MM-YYYY'),\n                        colSpan: 2,\n                        alignment: 'center',\n                    },\n                    {},\n                    { text: loanData.closeStatus, colSpan: 2, alignment: 'center' },\n                    {},\n                    { text: data[0].mode.toString(), alignment: 'center' },\n                    { text: data[0].credit.toString(), colSpan: 2, alignment: 'center' },\n                    {},\n                ]);\n            } else {\n                body.push([\n                    {\n                        text: data[0].date.toString(),\n                        colSpan: 2,\n                        alignment: 'center',\n                    },\n                    {},\n                    { text: loanData.closeStatus, colSpan: 2, alignment: 'center' },\n                    {},\n                    { text: data[0].mode.toString(), alignment: 'center' },\n                    { text: data[0].credit.toString(), colSpan: 2, alignment: 'center' },\n                    {},\n                ]);\n            }\n\n            return body;\n        } else {\n            body.push([\n                { text: 'Date', style: 'tableHeader', alignment: 'center' },\n                { text: 'Loan Status', style: 'tableHeader', alignment: 'center' },\n                { text: 'Mode of Payment', style: 'tableHeader', alignment: 'center' },\n                { text: 'Paid Amount', style: 'tableHeader', alignment: 'center' },\n                { text: 'Cheque Date', style: 'tableHeader', alignment: 'center' },\n                { text: 'Bank Name', style: 'tableHeader', alignment: 'center' },\n                { text: 'Cheque Number', style: 'tableHeader', alignment: 'center' },\n            ]);\n            if (this.isDate(data[0].date)) {\n                if (this.isDate(chequeData[0].chequeDate)) {\n                    body.push([\n                        {\n                            text: moment(data[0].date).format('DD-MM-YYYY'),\n                            alignment: 'center',\n                        },\n                        { text: loanData.closeStatus, alignment: 'center' },\n                        { text: data[0].mode.toString(), alignment: 'center' },\n                        { text: data[0].credit.toString(), alignment: 'center' },\n                        {\n                            text: moment(chequeData[0].chequeDate).format('DD-MM-YYYY'),\n                            alignment: 'center',\n                        },\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\n                        { text: chequeData[0].chequeNo.toString(), alignment: 'center' },\n                    ]);\n                } else {\n                    body.push([\n                        {\n                            text: moment(data[0].date).format('DD-MM-YYYY'),\n                            alignment: 'center',\n                        },\n                        { text: loanData.closeStatus, alignment: 'center' },\n                        { text: data[0].mode.toString(), alignment: 'center' },\n                        { text: data[0].credit.toString(), alignment: 'center' },\n                        {\n                            text: chequeData[0].chequeDate,\n                            alignment: 'center',\n                        },\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\n                        { text: chequeData[0].chequeNo.toString(), alignment: 'center' },\n                    ]);\n                }\n            } else {\n                if (this.isDate(chequeData[0].chequeDate)) {\n                    body.push([\n                        {\n                            text: data[0].date,\n                            alignment: 'center',\n                        },\n                        { text: loanData.closeStatus, alignment: 'center' },\n                        { text: data[0].mode.toString(), alignment: 'center' },\n                        { text: data[0].credit.toString(), alignment: 'center' },\n                        {\n                            text: moment(chequeData[0].chequeDate).format('DD-MM-YYYY'),\n                            alignment: 'center',\n                        },\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\n                        { text: chequeData[0].chequeNo.toString(), alignment: 'center' },\n                    ]);\n                } else {\n                    body.push([\n                        {\n                            text: data[0].date,\n                            alignment: 'center',\n                        },\n                        { text: loanData.closeStatus, alignment: 'center' },\n                        { text: data[0].mode.toString(), alignment: 'center' },\n                        { text: data[0].credit.toString(), alignment: 'center' },\n                        {\n                            text: chequeData[0].chequeDate,\n                            alignment: 'center',\n                        },\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\n                        { text: chequeData[0].chequeNo.toString(), alignment: 'center' },\n                    ]);\n                }\n            }\n\n            return body;\n        }\n    }\n    onConfirmClick(): void {\n        // @ts-ignore\n        const docDefinition = {\n            pageSize: 'A4',\n            pageOrientation: 'landscape',\n            pageMargins: [20, 20, 20, 30],\n            content: [\n                {\n                    // @ts-ignore\n                    text: document.getElementById('title').innerText,\n                    style: 'header',\n                    alignment: 'center',\n                },\n                { text: '\\n' },\n                { text: '\\n' },\n                {\n                    style: 'tableExample',\n                    table: {\n                        widths: ['15%', '*', '*', '*', '*', '25%', '*'],\n                        body: [\n                            [\n                                {\n                                    text: 'Employee Id',\n                                    style: 'tableHeader',\n                                    alignment: 'right ',\n                                },\n                                this.id,\n                                {},\n                                {},\n                                {},\n                                {\n                                    text: 'Employee Name',\n                                    style: 'tableHeader',\n                                    alignment: 'right',\n                                },\n                                this.name,\n                            ],\n                        ],\n                    },\n                    layout: 'noBorders',\n                    alignment: 'center',\n                },\n                { text: '\\n' },\n                {\n                    style: 'tableExample',\n                    table: {\n                        alignment: 'center',\n                        widths: ['30%', '30%'],\n                        headerRows: 1,\n                        body: [\n                            [\n                                {\n                                    text: 'Particulars',\n                                    style: 'tableHeader',\n                                },\n                                {\n                                    text: 'Value',\n                                    style: 'tableHeader',\n                                },\n                            ],\n                            [\n                                {\n                                    text: 'Start Date',\n                                },\n                                // @ts-ignore\n                                document.getElementById('start').innerHTML,\n                            ],\n                            [\n                                {\n                                    text: 'End Date',\n                                },\n                                // @ts-ignore\n                                document.getElementById('end').innerHTML,\n                            ],\n                            [\n                                {\n                                    text: 'Balance',\n                                },\n                                // @ts-ignore\n                                document.getElementById('bal').innerHTML,\n                            ],\n                        ],\n                    },\n                },\n                { text: '\\n' },\n                // @ts-ignore\n                { text: document.getElementById('subDetail1').innerText, style: 'subheader' },\n                {\n                    style: 'tableExample',\n                    table: {\n                        widths: ['16.66%', '50%', '*', '*', '*'],\n                        headerRows: 1,\n                        body: this.createAccountBody(this.accountData),\n                    },\n                },\n                // @ts-ignore\n                { text: document.getElementById('subDetail2').innerText, style: 'subheader' },\n                {\n                    style: 'tableExample',\n                    table: {\n                        widths: ['*', '*', '*', '*', '*', '*', '*'],\n                        headerRows: 1,\n                        body: this.createLoanBody(this.loanData),\n                    },\n                },\n            ],\n            styles: {\n                header: {\n                    fontSize: 18,\n                    bold: true,\n                    margin: [0, 0, 0, 10],\n                },\n                subheader: {\n                    fontSize: 16,\n                    bold: true,\n                    margin: [0, 10, 0, 5],\n                },\n                tableExample: {\n                    margin: [0, 15, 0, 15],\n                },\n                nestedTable: {\n                    margin: [5, 5, 5, 5],\n                },\n                tableHeader: {\n                    bold: true,\n                    fontSize: 13,\n                    color: 'black',\n                },\n            },\n        };\n        // @ts-ignore\n        pdfMake.createPdf(docDefinition).download('Bank Statement.pdf');\n        this.dialogRef.close(true);\n    }\n    isDate(d: any) {\n        const result = Date.parse(d);\n        if (!result) return false;\n        else return true;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GenerateStatementComponent } from './generate-statement.component';\n\nconst routes: Routes = [{ path: '', component: GenerateStatementComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GenerateStatementRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlbmVyYXRlLXN0YXRlbWVudC9nZW5lcmF0ZS1zdGF0ZW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DialogComponent } from '@app/generate-statement/dialog.component';\nimport { GenerateStatementService } from '@app/generate-statement/services';\n// @ts-ignore\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'sb-generate-statement',\n    templateUrl: './generate-statement.component.html',\n    styleUrls: ['./generate-statement.component.scss'],\n})\nexport class GenerateStatementComponent implements OnInit {\n    searchForm: FormGroup;\n    text: any;\n    table = false;\n    name: any;\n    start: any;\n    end: any;\n    balance = 0;\n    loanData = [];\n    accountData = [];\n    reportForm: FormGroup;\n    constructor(\n        private dialog: MatDialog,\n        private snackBar: MatSnackBar,\n        private generateService: GenerateStatementService,\n        public fb: FormBuilder\n    ) {\n        this.searchForm = this.fb.group({\n            employeeNo: new FormControl('', Validators.compose([Validators.required])),\n        });\n        this.reportForm = this.fb.group({\n            start: new FormControl('', Validators.compose([Validators.required])),\n            end: new FormControl('', Validators.compose([Validators.required])),\n        });\n    }\n    showTable() {\n        // @ts-ignore\n        this.text = this.searchForm.get('employeeNo').value;\n        console.log(this.text);\n        this.generateService.getData(this.text).subscribe(\n            result => {\n                console.log(result);\n                if (result.nameData.length === 0) {\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'This user does not exists!',\n                        icon: 'error',\n                    });\n                } else {\n                    console.log(result);\n                    // tslint:disable-next-line:prefer-for-of\n                    for (let i = 0; i < result.balance.length; i++) {\n                        this.balance =\n                            this.balance + result.balance[i].credit - result.balance[i].debit;\n                    }\n                    this.name = result.nameData[0].name;\n                    this.table = true;\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n        return this.balance;\n    }\n\n    openDialog() {\n        const data = {\n            userId: this.text,\n            // @ts-ignore\n            start: this.reportForm.get('start').value,\n            // @ts-ignore\n            end: this.reportForm.get('end').value,\n        };\n        this.generateService.getDialogData(data).subscribe(\n            result => {\n                console.log(result);\n                if (result.accountData.length === 0) {\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'Data in this range does not exists!',\n                        icon: 'error',\n                    });\n                } else {\n                    console.log(result);\n                    this.accountData = result.accountData;\n                    this.loanData = result.loanData;\n                    const dialogRef = this.dialog.open(DialogComponent, {\n                        data: {\n                            id: this.text,\n                            name: this.name,\n                            // @ts-ignore\n                            start: this.reportForm.get('start').value,\n                            // @ts-ignore\n                            end: this.reportForm.get('end').value,\n                            balance: this.balance,\n                            accountData: this.accountData,\n                            loanData: this.loanData,\n                        },\n                        height: '600px',\n                        width: '800px',\n                    });\n                    dialogRef.afterClosed().subscribe(res => {\n                        if (res) {\n                            this.table = false;\n                            this.searchForm = this.fb.group({\n                                employeeNo: new FormControl('', Validators.compose([Validators.required])),\n                            });\n                            this.reportForm = this.fb.group({\n                                start: new FormControl('', Validators.compose([Validators.required])),\n                                end: new FormControl('', Validators.compose([Validators.required])),\n                            });\n                        }\n                    });\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n    }\n\n    ngOnInit(): void {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppCommonModule } from '@app/app-common/app-common.module';\nimport { NavigationModule } from '@app/navigation/navigation.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { DialogComponent } from './dialog.component';\nimport { GenerateStatementRoutingModule } from './generate-statement-routing.module';\nimport { GenerateStatementComponent } from './generate-statement.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\n\n@NgModule({\n    declarations: [GenerateStatementComponent, DialogComponent],\n    imports: [\n        CommonModule,\n        GenerateStatementRoutingModule,\n        NavigationModule,\n        AppCommonModule,\n        TranslateModule,\n        FormsModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatSnackBarModule,\n        LayoutDashboardModule,\n        ReactiveFormsModule,\n    ],\n    entryComponents: [DialogComponent],\n})\nexport class GenerateStatementModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GenerateStatementService {\n    constructor(private http: HttpClient) {}\n\n    getData(text: any): Observable<any> {\n        console.log(text);\n        const url = 'http://drsunitanayak.com:8080/getOperationalAccountData';\n        const data = {\n            userId: text,\n        };\n        return this.http.post<any>(url, data);\n    }\n\n    getDialogData(data: any): Observable<any> {\n        const url = 'http://drsunitanayak.com:8080/getAllUserData';\n        return this.http.post<any>(url, data);\n    }\n}\n","import { GenerateStatementService } from './generate-statement.service';\n\nexport const services = [GenerateStatementService];\n\nexport * from './generate-statement.service';\n"]}