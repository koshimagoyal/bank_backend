{"version":3,"sources":["./src/app/generate-statement/dialog.component.html","./src/app/generate-statement/generate-statement.component.html","./src/app/generate-statement/dialog.component.ts","./src/app/generate-statement/generate-statement-routing.module.ts","./src/app/generate-statement/generate-statement.component.scss","./src/app/generate-statement/generate-statement.component.ts","./src/app/generate-statement/generate-statement.module.ts","./src/app/generate-statement/services/generate-statement.service.ts","./src/app/generate-statement/services/index.ts"],"names":[],"mappings":"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","file":"generate-statement-generate-statement-module-es2015.js","sourcesContent":["export default \"<div id=\\\"data\\\">\\r\\n    <h1 mat-dialog-title align=\\\"center\\\" id=\\\"title\\\">Bank Statement</h1>\\r\\n    <mat-dialog-content class=\\\"mat-typography\\\">\\r\\n        <h3 id=\\\"empId\\\">Employee Id: {{id}}</h3>\\r\\n        <h3 id=\\\"empName\\\">Employee Name: {{name}}</h3>\\r\\n        <br>\\r\\n        <table class=\\\"table table-borderless\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>Particulars</th>\\r\\n                    <th>Value</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr>\\r\\n                <td>Start Date</td>\\r\\n                <td id=\\\"start\\\">{{start| date:'dd-MM-yyyy'}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>End Date</td>\\r\\n                <td id=\\\"end\\\">{{end| date:'dd-MM-yyyy'}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Balance</td>\\r\\n                <td id=\\\"bal\\\">{{balance| indianCurrency}}</td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <br>\\r\\n        <h1 id=\\\"subDetail1\\\">Operating Account Details</h1>\\r\\n        <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th style=\\\"width: 16.66%;\\\">Date</th>\\r\\n                <th style=\\\"width: 60%;\\\">Particulars</th>\\r\\n                <th>Mode</th>\\r\\n                <th>Deposit</th>\\r\\n                <th>Withdrawal</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody *ngFor=\\\"let val of accountData\\\">\\r\\n            <tr>\\r\\n                <td *ngIf=\\\"isDate(val.account.date); else notDate\\\">{{val.account.date| date:'dd-MM-yyyy'}}</td>\\r\\n                <ng-template #notDate>\\r\\n                    <td>{{val.account.date}}</td>\\r\\n                </ng-template>\\r\\n                <td *ngIf=\\\"val.account.particulars; else not\\\">{{val.account.particulars}}</td>\\r\\n                <td *ngIf=\\\"val.account.mode; else not\\\">{{val.account.mode}}</td>\\r\\n                <td class=\\\"table-success\\\" *ngIf=\\\"val.account.credit; else not\\\" id=\\\"deposit\\\">{{val.account.credit| indianCurrency}}</td>\\r\\n                <td class=\\\"table-danger\\\" *ngIf=\\\"val.account.debit; else not\\\" id=\\\"withDraw\\\">{{val.account.debit| indianCurrency}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td *ngIf=\\\"val.cheque\\\" align=\\\"center\\\" colspan=\\\"5\\\">\\r\\n                    <h3 style=\\\"font-weight: bold\\\">Cheque Details</h3>\\r\\n                    <table style=\\\"width: 100%;\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th style=\\\"width: 16.66%;\\\">Cheque Date</th>\\r\\n                            <th style=\\\"width: 60%;\\\">Bank Name</th>\\r\\n                            <th>Cheque Number</th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <td *ngIf=\\\"val.cheque[0].chequeDate; else not\\\">{{val.cheque[0].chequeDate| date:'dd-MM-yyyy'}}</td>\\r\\n                            <td class=\\\"col-5\\\" *ngIf=\\\"val.cheque[0].bankName; else not\\\">{{val.cheque[0].bankName}}</td>\\r\\n                            <td *ngIf=\\\"val.cheque[0].chequeNo; else not\\\">{{val.cheque[0].chequeNo}}</td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <br>\\r\\n        <h1 id=\\\"subDetail2\\\">Loan Account Details</h1>\\r\\n        <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>Loan Date</th>\\r\\n                    <th>Loan Amount</th>\\r\\n                    <th>Loan Duration</th>\\r\\n                    <th>Loan Type</th>\\r\\n                    <th>Close Loan</th>\\r\\n                    <th>Closure Status</th>\\r\\n                    <th>Date of Loan Closure</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody *ngFor=\\\"let data of loanData;\\\">\\r\\n            <tr>\\r\\n                <td *ngIf=\\\"isDate(data.loanData.date); else notDate\\\">{{data.loanData.date| date:'dd-MM-yyyy'}}</td>\\r\\n                <ng-template #notDate>\\r\\n                    <td>{{data.loanData.date}}</td>\\r\\n                </ng-template>\\r\\n                <td *ngIf=\\\"data.loanData.loanAmount; else not\\\">{{data.loanData.loanAmount| indianCurrency}}</td>\\r\\n                <td *ngIf=\\\"data.loanData.loanDuration; else not\\\">{{data.loanData.loanDuration}}</td>\\r\\n                <td *ngIf=\\\"data.loanData.loanType; else not\\\">{{data.loanData.loanType}}</td>\\r\\n                <td *ngIf=\\\"data.loanData.closeLoan; else not\\\">{{data.loanData.closeLoan}}</td>\\r\\n                <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\r\\n                <td *ngIf=\\\"data.loanData.dateOfClosure; else not\\\">{{data.loanData.dateOfClosure| date:'dd-MM-yyyy'}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td *ngIf=\\\"data.loanBook\\\" align=\\\"center\\\" colspan=\\\"7\\\">\\r\\n                    <h3 style=\\\"font-weight: bold\\\">EMI Details</h3>\\r\\n                    <table style=\\\"width: 100%;\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th style=\\\"width: 16.66%;\\\">EMI Date</th>\\r\\n                            <th style=\\\"width: 60%;\\\">Particulars</th>\\r\\n                            <th>EMI Paid</th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr *ngFor=\\\"let value of data.loanBook\\\">\\r\\n                            <td *ngIf=\\\"isDate(value.date); else notDate\\\">{{value.date}}</td>\\r\\n                            <ng-template #notDate>\\r\\n                                <td>{{value.date}}</td>\\r\\n                            </ng-template>\\r\\n                            <td class=\\\"col-5\\\" *ngIf=\\\"value.particulars; else not\\\">{{value.particulars}}</td>\\r\\n                            <td *ngIf=\\\"value.credit; else not\\\">{{value.credit| indianCurrency}}</td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td *ngIf=\\\"data.closeData && data.closeData[0].mode==='Cash';else cheque\\\" align=\\\"center\\\" colspan=\\\"7\\\">\\r\\n                    <h3 style=\\\"font-weight: bold\\\">Loan Closure Details</h3>\\r\\n                    <table style=\\\"width: 100%;\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th style=\\\"width: 16.66%;\\\">Date</th>\\r\\n                            <th>Loan Status</th>\\r\\n                            <th>Mode of Payment</th>\\r\\n                            <th>Paid Amount</th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <td *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</td>\\r\\n                            <ng-template #notDate>\\r\\n                                <td>{{data.closeData[0].date}}</td>\\r\\n                            </ng-template>\\r\\n                            <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\r\\n                            <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\r\\n                            <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </td>\\r\\n                <ng-template #cheque>\\r\\n                    <td *ngIf=\\\"data.closeData && data.closeData[0].mode==='Cheque';\\\" align=\\\"center\\\" colspan=\\\"7\\\">\\r\\n                        <h3 style=\\\"font-weight: bold\\\">Loan Closure Details</h3>\\r\\n                        <table style=\\\"width: 100%;\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width: 16.66%;\\\">Date</th>\\r\\n                                <th>Loan Status</th>\\r\\n                                <th>Mode of Payment</th>\\r\\n                                <th>Paid Amount</th>\\r\\n                                <th>Cheque Date</th>\\r\\n                                <th>Bank Name</th>\\r\\n                                <th>Cheque Number</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</td>\\r\\n                                <ng-template #notDate>\\r\\n                                    <td>{{data.closeData[0].date}}</td>\\r\\n                                </ng-template>\\r\\n                                <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\r\\n                                <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\r\\n                                <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\r\\n                                <td *ngIf=\\\"data.chequeData[0].chequeDate; else not\\\">{{data.chequeData[0].chequeDate| date:'dd-MM-yyyy'}}</td>\\r\\n                                <td *ngIf=\\\"data.chequeData[0].bankName; else not\\\">{{data.chequeData[0].bankName}}</td>\\r\\n                                <td *ngIf=\\\"data.chequeData[0].chequeNo; else not\\\">{{data.chequeData[0].chequeNo}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </ng-template>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <ng-template #not>\\r\\n            <td>-</td>\\r\\n        </ng-template>\\r\\n    </mat-dialog-content>\\r\\n</div>\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n    <button class=\\\"btn-danger\\\" mat-button mat-dialog-close>Cancel</button>\\r\\n    <button class=\\\"btn-success\\\" mat-button (click)=\\\"onConfirmClick()\\\" cdkFocusInitial>Download</button>\\r\\n</mat-dialog-actions>\\r\\n\";","export default \"<sb-layout-dashboard>\\r\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.GenerateStatement' | translate}}\\\"></sb-dashboard-head>\\r\\n    <hr class=\\\"rounded\\\">\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Pages.GenerateStatement' | translate}}</div>\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <form class=\\\"form-inline\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"showTable()\\\">\\r\\n                        <label>\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter Employee No\\\" formControlName=\\\"employeeNo\\\"/>\\r\\n                        </label>\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!searchForm.valid\\\">{{'Accountant.GetInfo'| translate}}</button>\\r\\n                    </form>\\r\\n                    <form class=\\\"form-inline\\\" [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"openDialog()\\\">\\r\\n                        <table class=\\\"table table-striped\\\" *ngIf=\\\"table\\\" id=\\\"content\\\">\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.EmployeeNo' | translate}}</td>\\r\\n                                <td><div style=\\\"margin-left: 16%;\\\">{{text}}</div></td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.EmployeeName' | translate}}</td>\\r\\n                                <td><div style=\\\"margin-left: 16%;\\\">{{name}}</div></td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Balance' | translate}}</td>\\r\\n                                <td><div style=\\\"margin-left: 16%;\\\">{{balance| indianCurrency}}</div></td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Start' | translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"date\\\" formControlName=\\\"start\\\"/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"reportForm.get('start').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.End' | translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"date\\\" formControlName=\\\"end\\\"/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"reportForm.get('end').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                            <button type=\\\"submit\\\" [disabled]=\\\"!reportForm.valid\\\">{{'Accountant.Pages.GenerateStatement' | translate}}</button>\\r\\n                        </table>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </sb-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n    </div>\\r\\n</sb-layout-dashboard>\\r\\n\";","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n// @ts-ignore\r\nimport moment from 'moment';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n@Component({\r\n    selector: 'sb-dialog',\r\n    templateUrl: './dialog.component.html',\r\n})\r\nexport class DialogComponent {\r\n    id = '';\r\n    name = '';\r\n    start = '';\r\n    end = '';\r\n    balance = 0;\r\n    accountData = [];\r\n    loanData = [];\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) private data: any,\r\n        private dialogRef: MatDialogRef<DialogComponent>\r\n    ) {\r\n        console.log(data);\r\n        if (data) {\r\n            this.id = data.id || this.id;\r\n            this.name = data.name || this.name;\r\n            this.start = data.start || this.start;\r\n            this.end = data.end || this.end;\r\n            this.balance = data.balance || this.balance;\r\n            this.accountData = data.accountData || this.accountData;\r\n            this.loanData = data.loanData || this.loanData;\r\n        }\r\n        // this.dialogRef.updateSize('300vw', '300vw');\r\n    }\r\n    createAccountBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        const columns = [\r\n            { text: 'Date', style: 'tableHeader' },\r\n            { text: 'Particulars', style: 'tableHeader' },\r\n            { text: 'Mode', style: 'tableHeader' },\r\n            { text: 'Deposit', style: 'tableHeader', fillColor: '#7CFC00' },\r\n            { text: 'Withdrawal', style: 'tableHeader', fillColor: '#DC143C' },\r\n        ];\r\n        body.push(columns);\r\n        data.forEach(val => {\r\n            if (val.account.credit === null) {\r\n                if (this.isDate(val.account.date)) {\r\n                    body.push([\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        { text: val.account.debit, fillColor: '#DC143C' },\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        val.account.date.toString(),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        { text: val.account.debit, fillColor: '#DC143C' },\r\n                    ]);\r\n                }\r\n            } else {\r\n                if (this.isDate(val.account.date)) {\r\n                    body.push([\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: val.account.credit, fillColor: '#7CFC00' },\r\n                        { text: '-', fillColor: '#DC143C' },\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        val.account.date.toString(),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: val.account.credit, fillColor: '#7CFC00' },\r\n                        { text: '-', fillColor: '#DC143C' }\r\n                    ]);\r\n                }\r\n            }\r\n            if (val.cheque) {\r\n                body.push([this.createChequeTable(val.cheque), {}, {}, {}, {}]);\r\n            }\r\n        });\r\n        console.log(body);\r\n        return body;\r\n    }\r\n    createChequeTable(data: any) {\r\n        return {\r\n            colSpan: 5,\r\n            alignment: 'center',\r\n            style: 'nestedTable',\r\n            table: {\r\n                widths: ['14.28%', '*', '14.28%', '*', '14.28%'],\r\n                headerRows: 1,\r\n                body: this.createChequeBody(data),\r\n            },\r\n        };\r\n    }\r\n    createChequeBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        body.push([\r\n            { text: 'Cheque Details', colSpan: 5, style: 'subheader', alignment: 'center' },\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n        ]);\r\n        body.push([\r\n            { text: 'Cheque Date', style: 'tableHeader', alignment: 'center' },\r\n            { text: 'Bank Name', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n            { text: 'Cheque Number', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n        ]);\r\n        data.forEach(val => {\r\n            console.log(val);\r\n            if (this.isDate(val.chequeDate)) {\r\n                body.push([\r\n                    {\r\n                        text: moment(val.chequeDate).format('DD-MM-YYYY'),\r\n                        alignment: 'center',\r\n                    },\r\n                    { text: val.bankName.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: val.chequeNo.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            } else {\r\n                body.push([\r\n                    { text: val.chequeDate.toString(), alignment: 'center' },\r\n                    { text: val.bankName.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: val.chequeNo.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            }\r\n        });\r\n\r\n        return body;\r\n    }\r\n    createLoanBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        const columns = [\r\n            { text: 'Loan Date', style: 'tableHeader' },\r\n            { text: 'Loan Amount', style: 'tableHeader' },\r\n            { text: 'Loan Duration', style: 'tableHeader' },\r\n            { text: 'Loan Type', style: 'tableHeader' },\r\n            { text: 'Close Loan', style: 'tableHeader' },\r\n            { text: 'Closure Status', style: 'tableHeader' },\r\n            { text: 'Date of Loan Closure', style: 'tableHeader' },\r\n        ];\r\n        body.push(columns);\r\n        data.forEach(val => {\r\n            if (this.isDate(val.loanData.date)) {\r\n                if (this.isDate(val.loanData.dateOfClosure)) {\r\n                    if (val.loanData.closeLoan === 0) {\r\n                        body.push([\r\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'No',\r\n                            val.loanData.closeStatus.toString(),\r\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\r\n                        ]);\r\n                    } else {\r\n                        body.push([\r\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'Yes',\r\n                            val.loanData.closeStatus.toString(),\r\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\r\n                        ]);\r\n                    }\r\n                } else {\r\n                    if (val.loanData.closeLoan === 0) {\r\n                        body.push([\r\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'No',\r\n                            val.loanData.closeStatus,\r\n                            val.loanData.dateOfClosure,\r\n                        ]);\r\n                    } else {\r\n                        body.push([\r\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'Yes',\r\n                            val.loanData.closeStatus,\r\n                            val.loanData.dateOfClosure,\r\n                        ]);\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.isDate(val.loanData.dateOfClosure)) {\r\n                    if (val.loanData.closeLoan === 0) {\r\n                        body.push([\r\n                            val.loanData.date.toString(),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'No',\r\n                            val.loanData.closeStatus,\r\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\r\n                        ]);\r\n                    } else {\r\n                        body.push([\r\n                            val.loanData.date.toString(),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'Yes',\r\n                            val.loanData.closeStatus,\r\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\r\n                        ]);\r\n                    }\r\n                } else {\r\n                    if (val.loanData.closeLoan === 0) {\r\n                        body.push([\r\n                            val.loanData.date.toString(),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'No',\r\n                            val.loanData.closeStatus,\r\n                            val.loanData.dateOfClosure,\r\n                        ]);\r\n                    } else {\r\n                        body.push([\r\n                            val.loanData.date.toString(),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'Yes',\r\n                            val.loanData.closeStatus,\r\n                            val.loanData.dateOfClosure,\r\n                        ]);\r\n                    }\r\n                }\r\n            }\r\n            if (val.loanBook) {\r\n                body.push([this.createLoanBookTable(val.loanBook), {}, {}, {}, {}, {}, {}]);\r\n            }\r\n            if (val.closeData) {\r\n                body.push([\r\n                    this.createCloseTable(val.closeData, val.loanData, val.chequeData),\r\n                    {},\r\n                    {},\r\n                    {},\r\n                    {},\r\n                    {},\r\n                    {},\r\n                ]);\r\n            }\r\n        });\r\n        console.log(body);\r\n        return body;\r\n    }\r\n    createLoanBookTable(data: any) {\r\n        return {\r\n            colSpan: 7,\r\n            alignment: 'center',\r\n            style: 'nestedTable',\r\n            table: {\r\n                widths: ['14.28%', '*', '14.28%', '*', '*', '14.28%', '*'],\r\n                headerRows: 1,\r\n                body: this.createLoanBookBody(data),\r\n            },\r\n        };\r\n    }\r\n    createLoanBookBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        body.push([\r\n            { text: 'EMI Details', colSpan: 7, style: 'subheader', alignment: 'center' },\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n        ]);\r\n        body.push([\r\n            { text: 'EMI Date', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n            { text: 'Particulars', colSpan: 3, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n            {},\r\n            { text: 'EMI Paid', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n        ]);\r\n        data.forEach(val => {\r\n            console.log(val);\r\n            if (this.isDate(val.date)) {\r\n                body.push([\r\n                    {\r\n                        text: moment(val.date).format('DD-MM-YYYY'),\r\n                        colSpan: 2,\r\n                        alignment: 'center',\r\n                    },\r\n                    {},\r\n                    { text: val.particulars.toString(), colSpan: 3, alignment: 'center' },\r\n                    {},\r\n                    {},\r\n                    { text: val.credit.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            } else {\r\n                body.push([\r\n                    { text: val.date.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: val.particulars.toString(), colSpan: 3, alignment: 'center' },\r\n                    {},\r\n                    {},\r\n                    { text: val.credit.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            }\r\n        });\r\n\r\n        return body;\r\n    }\r\n    createCloseTable(data: any, loanData: any, chequeData: any) {\r\n        return {\r\n            colSpan: 7,\r\n            alignment: 'center',\r\n            style: 'nestedTable',\r\n            table: {\r\n                widths: ['14.28%', '*', '*', '*', '*', '*', '*'],\r\n                headerRows: 1,\r\n                body: this.createCloseBody(data, loanData, chequeData),\r\n            },\r\n        };\r\n    }\r\n    createCloseBody(data: any[], loanData: any, chequeData: any[]) {\r\n        const body: any[][] = [];\r\n        body.push([\r\n            { text: 'Loan Closure Details', colSpan: 7, style: 'subheader', alignment: 'center' },\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n        ]);\r\n        if (data[0].mode === 'Cash') {\r\n            body.push([\r\n                { text: 'Date', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n                {},\r\n                { text: 'Loan Status', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n                {},\r\n                { text: 'Mode of Payment', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Paid Amount', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n                {},\r\n            ]);\r\n            if (this.isDate(data[0].date)) {\r\n                body.push([\r\n                    {\r\n                        text: moment(data[0].date).format('DD-MM-YYYY'),\r\n                        colSpan: 2,\r\n                        alignment: 'center',\r\n                    },\r\n                    {},\r\n                    { text: loanData.closeStatus, colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: data[0].mode.toString(), alignment: 'center' },\r\n                    { text: data[0].credit.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            } else {\r\n                body.push([\r\n                    {\r\n                        text: data[0].date.toString(),\r\n                        colSpan: 2,\r\n                        alignment: 'center',\r\n                    },\r\n                    {},\r\n                    { text: loanData.closeStatus, colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: data[0].mode.toString(), alignment: 'center' },\r\n                    { text: data[0].credit.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            }\r\n\r\n            return body;\r\n        } else {\r\n            body.push([\r\n                { text: 'Date', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Loan Status', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Mode of Payment', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Paid Amount', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Cheque Date', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Bank Name', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Cheque Number', style: 'tableHeader', alignment: 'center' },\r\n            ]);\r\n            if (this.isDate(data[0].date)) {\r\n                if (this.isDate(chequeData[0].chequeDate)) {\r\n                    body.push([\r\n                        {\r\n                            text: moment(data[0].date).format('DD-MM-YYYY'),\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: loanData.closeStatus, alignment: 'center' },\r\n                        { text: data[0].mode.toString(), alignment: 'center' },\r\n                        { text: data[0].credit.toString(), alignment: 'center' },\r\n                        {\r\n                            text: moment(chequeData[0].chequeDate).format('DD-MM-YYYY'),\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\r\n                        { text: chequeData[0].chequeNo.toString(), alignment: 'center' },\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        {\r\n                            text: moment(data[0].date).format('DD-MM-YYYY'),\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: loanData.closeStatus, alignment: 'center' },\r\n                        { text: data[0].mode.toString(), alignment: 'center' },\r\n                        { text: data[0].credit.toString(), alignment: 'center' },\r\n                        {\r\n                            text: chequeData[0].chequeDate,\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\r\n                        { text: chequeData[0].chequeNo.toString(), alignment: 'center' },\r\n                    ]);\r\n                }\r\n            } else {\r\n                if (this.isDate(chequeData[0].chequeDate)) {\r\n                    body.push([\r\n                        {\r\n                            text: data[0].date,\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: loanData.closeStatus, alignment: 'center' },\r\n                        { text: data[0].mode.toString(), alignment: 'center' },\r\n                        { text: data[0].credit.toString(), alignment: 'center' },\r\n                        {\r\n                            text: moment(chequeData[0].chequeDate).format('DD-MM-YYYY'),\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\r\n                        { text: chequeData[0].chequeNo.toString(), alignment: 'center' },\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        {\r\n                            text: data[0].date,\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: loanData.closeStatus, alignment: 'center' },\r\n                        { text: data[0].mode.toString(), alignment: 'center' },\r\n                        { text: data[0].credit.toString(), alignment: 'center' },\r\n                        {\r\n                            text: chequeData[0].chequeDate,\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\r\n                        { text: chequeData[0].chequeNo.toString(), alignment: 'center' },\r\n                    ]);\r\n                }\r\n            }\r\n\r\n            return body;\r\n        }\r\n    }\r\n    onConfirmClick(): void {\r\n        // @ts-ignore\r\n        const docDefinition = {\r\n            pageSize: 'A4',\r\n            pageOrientation: 'landscape',\r\n            pageMargins: [20, 20, 20, 30],\r\n            content: [\r\n                {\r\n                    // @ts-ignore\r\n                    text: document.getElementById('title').innerText,\r\n                    style: 'header',\r\n                    alignment: 'center',\r\n                },\r\n                { text: '\\n' },\r\n                { text: '\\n' },\r\n                {\r\n                    style: 'tableExample',\r\n                    table: {\r\n                        widths: ['15%', '*', '*', '*', '*', '25%', '*'],\r\n                        body: [\r\n                            [\r\n                                {\r\n                                    text: 'Employee Id',\r\n                                    style: 'tableHeader',\r\n                                    alignment: 'right ',\r\n                                },\r\n                                this.id,\r\n                                {},\r\n                                {},\r\n                                {},\r\n                                {\r\n                                    text: 'Employee Name',\r\n                                    style: 'tableHeader',\r\n                                    alignment: 'right',\r\n                                },\r\n                                this.name,\r\n                            ],\r\n                        ],\r\n                    },\r\n                    layout: 'noBorders',\r\n                    alignment: 'center',\r\n                },\r\n                { text: '\\n' },\r\n                {\r\n                    style: 'tableExample',\r\n                    table: {\r\n                        alignment: 'center',\r\n                        widths: ['30%', '30%'],\r\n                        headerRows: 1,\r\n                        body: [\r\n                            [\r\n                                {\r\n                                    text: 'Particulars',\r\n                                    style: 'tableHeader',\r\n                                },\r\n                                {\r\n                                    text: 'Value',\r\n                                    style: 'tableHeader',\r\n                                },\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'Start Date',\r\n                                },\r\n                                // @ts-ignore\r\n                                document.getElementById('start').innerHTML,\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'End Date',\r\n                                },\r\n                                // @ts-ignore\r\n                                document.getElementById('end').innerHTML,\r\n                            ],\r\n                            [\r\n                                {\r\n                                    text: 'Balance',\r\n                                },\r\n                                // @ts-ignore\r\n                                document.getElementById('bal').innerHTML,\r\n                            ],\r\n                        ],\r\n                    },\r\n                },\r\n                { text: '\\n' },\r\n                // @ts-ignore\r\n                { text: document.getElementById('subDetail1').innerText, style: 'subheader' },\r\n                {\r\n                    style: 'tableExample',\r\n                    table: {\r\n                        widths: ['16.66%', '50%', '*', '*', '*'],\r\n                        headerRows: 1,\r\n                        body: this.createAccountBody(this.accountData),\r\n                    },\r\n                },\r\n                // @ts-ignore\r\n                { text: document.getElementById('subDetail2').innerText, style: 'subheader' },\r\n                {\r\n                    style: 'tableExample',\r\n                    table: {\r\n                        widths: ['*', '*', '*', '*', '*', '*', '*'],\r\n                        headerRows: 1,\r\n                        body: this.createLoanBody(this.loanData),\r\n                    },\r\n                },\r\n            ],\r\n            styles: {\r\n                header: {\r\n                    fontSize: 18,\r\n                    bold: true,\r\n                    margin: [0, 0, 0, 10],\r\n                },\r\n                subheader: {\r\n                    fontSize: 16,\r\n                    bold: true,\r\n                    margin: [0, 10, 0, 5],\r\n                },\r\n                tableExample: {\r\n                    margin: [0, 15, 0, 15],\r\n                },\r\n                nestedTable: {\r\n                    margin: [5, 5, 5, 5],\r\n                },\r\n                tableHeader: {\r\n                    bold: true,\r\n                    fontSize: 13,\r\n                    color: 'black',\r\n                },\r\n            },\r\n        };\r\n        // @ts-ignore\r\n        pdfMake.createPdf(docDefinition).download('Bank Statement.pdf');\r\n        this.dialogRef.close(true);\r\n    }\r\n    isDate(d: any) {\r\n        const result = Date.parse(d);\r\n        if (!result) return false;\r\n        else return true;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GenerateStatementComponent } from './generate-statement.component';\r\n\r\nconst routes: Routes = [{ path: '', component: GenerateStatementComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GenerateStatementRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlbmVyYXRlLXN0YXRlbWVudC9nZW5lcmF0ZS1zdGF0ZW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DialogComponent } from '@app/generate-statement/dialog.component';\r\nimport { GenerateStatementService } from '@app/generate-statement/services';\r\n// @ts-ignore\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'sb-generate-statement',\r\n    templateUrl: './generate-statement.component.html',\r\n    styleUrls: ['./generate-statement.component.scss'],\r\n})\r\nexport class GenerateStatementComponent implements OnInit {\r\n    searchForm: FormGroup;\r\n    text: any;\r\n    table = false;\r\n    name: any;\r\n    start: any;\r\n    end: any;\r\n    balance = 0;\r\n    loanData = [];\r\n    accountData = [];\r\n    reportForm: FormGroup;\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private generateService: GenerateStatementService,\r\n        public fb: FormBuilder\r\n    ) {\r\n        this.searchForm = this.fb.group({\r\n            employeeNo: new FormControl('', Validators.compose([Validators.required])),\r\n        });\r\n        this.reportForm = this.fb.group({\r\n            start: new FormControl('', Validators.compose([Validators.required])),\r\n            end: new FormControl('', Validators.compose([Validators.required])),\r\n        });\r\n    }\r\n    showTable() {\r\n        // @ts-ignore\r\n        this.text = this.searchForm.get('employeeNo').value;\r\n        console.log(this.text);\r\n        this.generateService.getData(this.text).subscribe(\r\n            result => {\r\n                console.log(result);\r\n                if (result.nameData.length === 0) {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'This user does not exists!',\r\n                        icon: 'error',\r\n                    });\r\n                } else {\r\n                    console.log(result);\r\n                    // tslint:disable-next-line:prefer-for-of\r\n                    for (let i = 0; i < result.balance.length; i++) {\r\n                        this.balance =\r\n                            this.balance + result.balance[i].credit - result.balance[i].debit;\r\n                    }\r\n                    this.name = result.nameData[0].name;\r\n                    this.table = true;\r\n                }\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n        return this.balance;\r\n    }\r\n\r\n    openDialog() {\r\n        const data = {\r\n            userId: this.text,\r\n            // @ts-ignore\r\n            start: this.reportForm.get('start').value,\r\n            // @ts-ignore\r\n            end: this.reportForm.get('end').value,\r\n        };\r\n        this.generateService.getDialogData(data).subscribe(\r\n            result => {\r\n                console.log(result);\r\n                if (result.accountData.length === 0) {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Data in this range does not exists!',\r\n                        icon: 'error',\r\n                    });\r\n                } else {\r\n                    console.log(result);\r\n                    this.accountData = result.accountData;\r\n                    this.loanData = result.loanData;\r\n                    const dialogRef = this.dialog.open(DialogComponent, {\r\n                        data: {\r\n                            id: this.text,\r\n                            name: this.name,\r\n                            // @ts-ignore\r\n                            start: this.reportForm.get('start').value,\r\n                            // @ts-ignore\r\n                            end: this.reportForm.get('end').value,\r\n                            balance: this.balance,\r\n                            accountData: this.accountData,\r\n                            loanData: this.loanData,\r\n                        },\r\n                        height: '600px',\r\n                        width: '800px',\r\n                    });\r\n                    dialogRef.afterClosed().subscribe(res => {\r\n                        if (res) {\r\n                            this.table = false;\r\n                            this.searchForm = this.fb.group({\r\n                                employeeNo: new FormControl('', Validators.compose([Validators.required])),\r\n                            });\r\n                            this.reportForm = this.fb.group({\r\n                                start: new FormControl('', Validators.compose([Validators.required])),\r\n                                end: new FormControl('', Validators.compose([Validators.required])),\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnInit(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppCommonModule } from '@app/app-common/app-common.module';\r\nimport { NavigationModule } from '@app/navigation/navigation.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { DialogComponent } from './dialog.component';\r\nimport { GenerateStatementRoutingModule } from './generate-statement-routing.module';\r\nimport { GenerateStatementComponent } from './generate-statement.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\r\n\r\n@NgModule({\r\n    declarations: [GenerateStatementComponent, DialogComponent],\r\n    imports: [\r\n        CommonModule,\r\n        GenerateStatementRoutingModule,\r\n        NavigationModule,\r\n        AppCommonModule,\r\n        TranslateModule,\r\n        FormsModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSnackBarModule,\r\n        LayoutDashboardModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    entryComponents: [DialogComponent],\r\n})\r\nexport class GenerateStatementModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class GenerateStatementService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getData(text: any): Observable<any> {\r\n        console.log(text);\r\n        const url = 'http://206.189.129.219:8080/getOperationalAccountData';\r\n        const data = {\r\n            userId: text,\r\n        };\r\n        return this.http.post<any>(url, data);\r\n    }\r\n\r\n    getDialogData(data: any): Observable<any> {\r\n        const url = 'http://206.189.129.219:8080/getAllUserData';\r\n        return this.http.post<any>(url, data);\r\n    }\r\n}\r\n","import { GenerateStatementService } from './generate-statement.service';\r\n\r\nexport const services = [GenerateStatementService];\r\n\r\nexport * from './generate-statement.service';\r\n"],"sourceRoot":"webpack:///"}