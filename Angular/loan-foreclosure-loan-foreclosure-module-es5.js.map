{"version":3,"sources":["webpack:///src/app/loan-foreclosure/dialog/dialog.component.html","webpack:///src/app/loan-foreclosure/loan-foreclosure.component.html","webpack:///src/app/loan-foreclosure/dialog/dialog.component.scss","webpack:///src/app/loan-foreclosure/dialog/dialog.component.ts","webpack:///src/app/loan-foreclosure/loan-foreclosure-routing.module.ts","webpack:///src/app/loan-foreclosure/loan-foreclosure.component.scss","webpack:///src/app/loan-foreclosure/loan-foreclosure.component.ts","webpack:///src/app/loan-foreclosure/loan-foreclosure.module.ts","webpack:///src/app/loan-foreclosure/services/index.ts","webpack:///src/app/loan-foreclosure/services/loan-foreclosure.service.ts"],"names":["vfs","pdfMake","DialogComponent","data","dialogRef","id","name","date","amount","loanDate","loandate","updateSize","docDefinition","title","content","text","document","getElementById","innerText","style","alignment","styles","header","fontSize","bold","margin","createPdf","download","close","selector","template","routes","path","component","LoanForeclosureRoutingModule","imports","forChild","exports","LoanForeclosureComponent","loanService","dialog","fb","table","disable","loanData","payAmount","searchForm","group","employeeNo","compose","required","get","value","userId","console","log","getData","subscribe","result","nameData","length","fire","icon","payMode","Array","bankName","purpose","chequeDate","chequeNo","type","j","loanAmount","loanBook","k","interest","credit","loanType","push","loanId","duration","loanDuration","pending","Math","round","toFixed","error1","loanid","bankname","chequedate","chequeno","payamount","open","height","width","afterClosed","closeData","mode","particulars","status","sendData","resultData","then","isConfirm","filter","index","getBankList","bankList","LoanForeclosureModule","declarations","entryComponents","services","LoanForeclosureService","http","url","headers","append","post","providedIn"],"mappings":"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","file":"loan-foreclosure-loan-foreclosure-module-es5.js","sourcesContent":["export default \"<div id=\\\"data\\\">\\n    <h1 mat-dialog-title align=\\\"center\\\" id=\\\"title\\\">Letter for Loan Closure</h1>\\n    <mat-dialog-content class=\\\"mat-typography\\\">\\n        <h3 id=\\\"date\\\">Date: {{date| date:'dd-MM-yyyy'}}</h3>\\n        <br/>\\n        <h3 id=\\\"company\\\">ABC Company</h3>\\n        <h3 id=\\\"address1\\\">Nariman Point</h3>\\n        <h3 id=\\\"address2\\\">Mumbai</h3>\\n        <br/>\\n        <h3 id=\\\"salutation\\\">Dear {{name}}</h3>\\n        <h3 id=\\\"content\\\">We would like to notify that all the dues of {{name}} having Employee Id as {{id}} has been cleared and the loan of {{this.loanDate}} with loan amount = {{this.amount}} has been closed.</h3>\\n        <br/>\\n        <h3 id=\\\"thank\\\">Thanking You</h3>\\n        <br>\\n        <h3 id=\\\"bottom1\\\">Yours faithfully</h3>\\n        <h3 id=\\\"bottom2\\\">Amita Gupta</h3>\\n        <h3 id=\\\"bottom3\\\">Manager</h3>\\n    </mat-dialog-content>\\n</div>\\n<mat-dialog-actions align=\\\"end\\\">\\n    <button class=\\\"btn-danger\\\" mat-button mat-dialog-close>Cancel</button>\\n    <button class=\\\"btn-success\\\" mat-button (click)=\\\"onConfirmClick()\\\" cdkFocusInitial>Print</button>\\n</mat-dialog-actions>\\n\\n\";","export default \"<sb-layout-dashboard>\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.Foreclosure'| translate}}\\\"></sb-dashboard-head>\\n    <hr class=\\\"rounded\\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\n            <sb-card>\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Pages.Foreclosure'| translate}}</div>\\n                <div class=\\\"card-body table-responsive\\\">\\n                    <form class=\\\"form-inline\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"showTable()\\\">\\n                        <label>\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter Employee No\\\" formControlName=\\\"employeeNo\\\"/>\\n                        </label>\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!searchForm.valid\\\">{{'Accountant.GetInfo'| translate}}</button>\\n                    </form>\\n                    <table class=\\\"table table-striped\\\" *ngIf=\\\"table\\\" id=\\\"content\\\">\\n                        <tbody>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.EmployeeNo'| translate}}</td>\\n                            <td>{{text}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.EmployeeName'| translate}}</td>\\n                            <td>{{name}}</td>\\n                        </tr>\\n                        <!--tr>\\n                            <td>{{'Accountant.Tables.LoanType'| translate}}</td>\\n                            <td>{{loanType}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.Active'| translate}}</td>\\n                            <td>{{loanAmount| indianCurrency}}</td>\\n                        </tr-->\\n                        <!--tr>\\n                            <td>{{'Accountant.Tables.LoanDate'| translate}}</td>\\n                            <td>{{loanDate| date:'dd-MM-yyyy'}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.Amt'| translate}}</td>\\n                            <td>{{payAmount| indianCurrency}}</td>\\n                        </tr-->\\n                        <tr>\\n                            <td>{{'Accountant.Tables.DateForeclosure'| translate}}</td>\\n                            <td>\\n                                <label>\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"date\\\" name=\\\"date\\\"/>\\n                                </label>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </sb-card>\\n        </div>\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n    </div>\\n    <div *ngIf=\\\"table\\\">\\n        <sb-card>\\n            <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Tables.LoanDetails'| translate}}</div>\\n            <div class=\\\"card-body table-responsive\\\">\\n                <table class=\\\"table table-striped\\\" *ngIf=\\\"table\\\">\\n                    <thead>\\n                        <tr>\\n                            <td>{{'Accountant.Tables.LoanDate'| translate}}</td>\\n                            <td>{{'Accountant.Tables.Loan'| translate}}</td>\\n                            <td>{{'Accountant.Tables.Duration'| translate}}</td>\\n                            <td>{{'Accountant.Tables.LoanType'| translate}}</td>\\n                            <td>{{'Accountant.Tables.PrincipleOutstanding'| translate}}</td>\\n                            <td>{{'Accountant.Tables.CloseLoan'| translate}}</td>\\n                        </tr>\\n                    </thead>\\n                    <tbody *ngFor=\\\"let loan of loanData; let i=index;\\\">\\n                        <tr>\\n                            <td>{{loan.date| date:'dd-MM-yyyy'}}</td>\\n                            <td>{{loan.amount| indianCurrency}}</td>\\n                            <td>{{loan.duration}}</td>\\n                            <td>{{loan.type}}</td>\\n                            <td>{{loan.pending| indianCurrency}}</td>\\n                            <td>\\n                                <label>\\n                                    <input type=\\\"checkbox\\\" (click)=\\\"pay(i)\\\"/>\\n                                </label>\\n                            </td>\\n                        </tr>\\n                        <tr *ngIf=\\\"payMode[i]\\\" align=\\\"center\\\">\\n                            <td colspan=\\\"6\\\">\\n                                <table class=\\\"table\\\">\\n                                    <tbody>\\n                                    <tr>\\n                                        <td>{{'Accountant.Tables.Mode' | translate}}</td>\\n                                        <td>\\n                                            <label>\\n                                                <select class=\\\"custom-select\\\" [(ngModel)]=\\\"type[i]\\\">\\n                                                    <option>{{'Accountant.Tables.Cash' | translate}}</option>\\n                                                    <option>{{'Accountant.Tables.Cheque' | translate}}</option>\\n                                                </select>\\n                                            </label>\\n                                        </td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"type == 'Cheque'\\\">\\n                                        <td>{{'Accountant.Tables.BankName' | translate}}</td>\\n                                        <td>\\n                                            <label>\\n                                                <select class=\\\"custom-select\\\" name=\\\"bankName\\\" [(ngModel)]=\\\"bankName[i]\\\">\\n                                                    <option *ngFor=\\\"let val of bankList\\\">{{val.bankName}}</option>\\n                                                </select>\\n                                            </label>\\n                                        </td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"type == 'Cheque'\\\">\\n                                        <td>{{'Accountant.Tables.ChequeDate' | translate}}</td>\\n                                        <td>\\n                                            <label>\\n                                                <input type=\\\"date\\\" [(ngModel)]=\\\"chequeDate[i]\\\" name=\\\"chequeDate\\\"/>\\n                                            </label>\\n                                        </td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"type == 'Cheque'\\\">\\n                                        <td>{{'Accountant.Tables.ChequeNo' | translate}}</td>\\n                                        <td>\\n                                            <label>\\n                                                <input type=\\\"text\\\" [(ngModel)]=\\\"chequeNo[i]\\\" name=\\\"chequeNo\\\"/>\\n                                            </label>\\n                                        </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>{{'Accountant.Tables.Remark'| translate}}</td>\\n                                        <td>\\n                                            <label>\\n                                                <input type=\\\"text\\\" [(ngModel)]=\\\"purpose[i]\\\" name=\\\"purpose\\\"/>\\n                                            </label>\\n                                        </td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                                <button (click)=\\\"close(loan.loanId, loan.amount, loan.date, type[i], bankName[i],chequeDate[i],chequeNo[i],purpose[i],loan.pending)\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </sb-card>\\n    </div>\\n</sb-layout-dashboard>\\n\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYW4tZm9yZWNsb3N1cmUvZGlhbG9nL2RpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n@Component({\n    selector: 'sb-dialog',\n    templateUrl: './dialog.component.html',\n    styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent {\n    id = '';\n    name = '';\n    date = '';\n    amount = '';\n    loanDate = '';\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private data: any,\n        private dialogRef: MatDialogRef<DialogComponent>\n    ) {\n        if (data) {\n            this.id = data.id || this.id;\n            this.name = data.name || this.name;\n            this.date = data.date || this.date;\n            this.amount = data.amount || this.amount;\n            this.loanDate = data.loandate || this.loanDate;\n        }\n        this.dialogRef.updateSize('300vw', '300vw');\n    }\n\n    onConfirmClick(): void {\n        // @ts-ignore\n        const docDefinition = {\n            title: 'Loan Closure Letter',\n            content: [\n                {\n                    // @ts-ignore\n                    text: document.getElementById('title').innerText,\n                    style: 'header',\n                    alignment: 'center',\n                },\n                { text: '\\n' },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('date').innerText,\n                },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('company').innerText,\n                },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('address1').innerText,\n                },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('address2').innerText,\n                },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('salutation').innerText,\n                },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text:\n                        'We would like to notify that all the dues of ' +\n                        this.name +\n                        ' having Employee Id as ' +\n                        this.id +\n                        ' has been cleared and the loan of ' +\n                        this.loanDate +\n                        ' with loan amount = ' +\n                        this.amount +\n                        ' has been closed.',\n                    alignment: 'justify',\n                },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('thank').innerText,\n                },\n                { text: '\\n' },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('bottom1').innerText,\n                },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('bottom2').innerText,\n                },\n                {\n                    // @ts-ignore\n                    text: document.getElementById('bottom3').innerText,\n                },\n            ],\n            styles: {\n                header: {\n                    fontSize: 18,\n                    bold: true,\n                    margin: [0, 0, 0, 10],\n                },\n            },\n        };\n        // @ts-ignore\n        pdfMake.createPdf(docDefinition).download('Loan Closure Letter.pdf');\n        this.dialogRef.close(true);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoanForeclosureComponent } from './loan-foreclosure.component';\n\nconst routes: Routes = [{ path: '', component: LoanForeclosureComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoanForeclosureRoutingModule { }\n","export default \"table td {\\n  padding: 30px;\\n}\\n\\n#date {\\n  padding-top: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9hbi1mb3JlY2xvc3VyZS9DOlxcVXNlcnNcXExlbm92b1xcRG93bmxvYWRzXFxTb2NpZXR5X0Jhbmtpbmcvc3JjXFxhcHBcXGxvYW4tZm9yZWNsb3N1cmVcXGxvYW4tZm9yZWNsb3N1cmUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2xvYW4tZm9yZWNsb3N1cmUvbG9hbi1mb3JlY2xvc3VyZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUNDSjs7QURDQTtFQUNJLGlCQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9sb2FuLWZvcmVjbG9zdXJlL2xvYW4tZm9yZWNsb3N1cmUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB0ZHtcbiAgICBwYWRkaW5nOjMwcHg7XG59XG4jZGF0ZXtcbiAgICBwYWRkaW5nLXRvcDogNTBweDtcbn1cbiIsInRhYmxlIHRkIHtcbiAgcGFkZGluZzogMzBweDtcbn1cblxuI2RhdGUge1xuICBwYWRkaW5nLXRvcDogNTBweDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '@app/loan-foreclosure/dialog/dialog.component';\nimport { LoanForeclosureService } from '@app/loan-foreclosure/services';\n// @ts-ignore\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CreditEntryService } from '@app/credit-entry/services';\n\n@Component({\n    selector: 'sb-loan-foreclosure',\n    templateUrl: './loan-foreclosure.component.html',\n    styleUrls: ['./loan-foreclosure.component.scss'],\n})\nexport class LoanForeclosureComponent implements OnInit {\n    searchForm: FormGroup;\n    bankList: any;\n    text: any;\n    name: any;\n    table = false;\n    disable = true;\n    date: any;\n    loanData = [];\n    loanType: any;\n    loanAmount: any;\n    payAmount = 0;\n    type: any;\n    bankName: any;\n    chequeDate: any;\n    chequeNo: any;\n    purpose: any;\n    loanDate: any;\n    payMode: any;\n    constructor(\n        private loanService: LoanForeclosureService,\n        private dialog: MatDialog,\n        public fb: FormBuilder\n    ) {\n        this.searchForm = this.fb.group({\n            employeeNo: new FormControl('', Validators.compose([Validators.required])),\n        });\n    }\n    showTable() {\n        // @ts-ignore\n        this.text = this.searchForm.get('employeeNo').value;\n        const data = {\n            userId: this.text,\n        };\n        console.log(data);\n        this.loanService.getData(data).subscribe(\n            result => {\n                this.loanData = [];\n                console.log(result);\n                if (result.nameData.length === 0) {\n                    this.table = false;\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'This user does not exists!',\n                        icon: 'error',\n                    });\n                } else if (!result.loanData || result.loanData.length === 0) {\n                    this.table = false;\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'No loan exists!',\n                        icon: 'error',\n                    });\n                } else {\n                    console.log(result.loanData);\n                    this.payMode = new Array(result.loanData.length);\n                    this.bankName = new Array(result.loanData.length);\n                    this.purpose = new Array(result.loanData.length);\n                    this.chequeDate = new Array(result.loanData.length);\n                    this.chequeNo = new Array(result.loanData.length);\n                    this.type = new Array(result.loanData.length);\n                    // tslint:disable-next-line:prefer-for-of\n                    for (let j = 0; j < result.loanData.length; j++) {\n                        this.loanAmount = result.loanData[j].loanData.loanAmount;\n                        this.loanDate = result.loanData[j].loanData.date;\n                        this.payAmount = this.loanAmount;\n                        if (result.loanData[j].loanBook) {\n                            // tslint:disable-next-line:prefer-for-of\n                            for (let k = 0; k < result.loanData[j].loanBook.length; k++) {\n                                const interest =\n                                    this.payAmount * (result.loanData[j].loanData.interest / 1200);\n                                const amount = result.loanData[j].loanBook[k].credit - interest;\n                                this.payAmount -= amount;\n                            }\n                        }\n                        if (this.payAmount < 0) {\n                            this.payAmount = 0;\n                        }\n                        this.loanType = result.loanData[0].loanData.loanType;\n                        this.loanData.push({\n                            // @ts-ignore\n                            loanId: result.loanData[0].loanData.loanId,\n                            // @ts-ignore\n                            date: this.loanDate,\n                            // @ts-ignore\n                            amount: this.loanAmount,\n                            // @ts-ignore\n                            duration: result.loanData[0].loanData.loanDuration,\n                            // @ts-ignore\n                            type: this.loanType,\n                            // @ts-ignore\n                            pending: (Math.round(this.payAmount * 100) / 100).toFixed(0),\n                        });\n                    }\n                    this.name = result.nameData[0].name;\n                    this.table = true;\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n    }\n    close(\n        loanid: any,\n        loanAmount: any,\n        loanDate: any,\n        type: string,\n        bankname: string,\n        chequedate: string,\n        chequeno: string,\n        purpose: string,\n        payamount: any\n    ) {\n        if (!payamount || !type || !purpose || !this.date) {\n            Swal.fire({\n                title: 'Oops!',\n                text: 'Fill all the details!',\n                icon: 'error',\n            });\n        } else {\n            console.log(bankname);\n            const dialogRef = this.dialog.open(DialogComponent, {\n                data: {\n                    id: this.text,\n                    name: this.name,\n                    date: this.date,\n                    amount: loanAmount,\n                    loandate: loanDate,\n                },\n                height: '600px',\n                width: '700px',\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                const closeData = [];\n                if (result) {\n                    closeData.push({\n                        userId: this.text,\n                        loanId: loanid,\n                        date: this.date,\n                        mode: type,\n                        bankName: bankname,\n                        chequeDate: chequedate,\n                        chequeNo: chequeno,\n                        particulars: purpose,\n                        amount: payamount,\n                        type: 'Close Loan',\n                        status: 'Fore Closure',\n                        close: true,\n                    });\n                    this.loanService.sendData(closeData).subscribe(\n                        resultData => {\n                            Swal.fire({\n                                text: 'Loan Closed!',\n                                icon: 'success',\n                            }).then((isConfirm: any) => {\n                                if (isConfirm) {\n                                    this.loanData = this.loanData.filter(value => value === loanid);\n                                    console.log(this.loanData);\n                                    if (this.loanData.length === 0) {\n                                        // @ts-ignore\n                                        this.table = false;\n                                        this.text = null;\n                                        this.date = null;\n                                        this.loanAmount = null;\n                                        this.payAmount = 0;\n                                        this.loanDate = null;\n                                    }\n                                }\n                            });\n                        },\n                        error1 => {\n                            Swal.fire({\n                                title: 'Oops!',\n                                text: 'Try again!',\n                                icon: 'error',\n                            });\n                        }\n                    );\n                }\n            });\n        }\n    }\n    pay(index: any) {\n        this.payMode[index] = !this.payMode[index];\n    }\n    ngOnInit() {\n        this.loanService.getBankList().subscribe(result => {\n            this.bankList = result;\n            console.log(this.bankList);\n        });\n        this.loanData = [];\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { AppCommonModule } from '@app/app-common/app-common.module';\nimport { NavigationModule } from '@app/navigation/navigation.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { DialogComponent } from './dialog/dialog.component';\nimport { LoanForeclosureRoutingModule } from './loan-foreclosure-routing.module';\nimport { LoanForeclosureComponent } from './loan-foreclosure.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\n\n@NgModule({\n    declarations: [LoanForeclosureComponent, DialogComponent],\n    imports: [\n        CommonModule,\n        LoanForeclosureRoutingModule,\n        NavigationModule,\n        AppCommonModule,\n        TranslateModule,\n        FormsModule,\n        MatInputModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatMomentDateModule,\n        MatDialogModule,\n        MatButtonModule,\n        LayoutDashboardModule,\n        ReactiveFormsModule,\n    ],\n    exports: [DialogComponent],\n    entryComponents: [DialogComponent],\n})\nexport class LoanForeclosureModule {}\n","import { LoanForeclosureService } from './loan-foreclosure.service';\n\nexport const services = [LoanForeclosureService];\n\nexport * from './loan-foreclosure.service';\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LoanForeclosureService {\n    constructor(private http: HttpClient) {}\n\n    getBankList(): Observable<any> {\n        const url = 'http://drsunitanayak.com/getBankList';\n        const headers = new HttpHeaders();\n        headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Access-Control-Allow-Methods', 'POST,GET,OPTIONS,PUT');\n        headers.append('Accept', 'application/json');\n        headers.append('content-type', 'application/json');\n        return this.http.get<any>(url, { headers });\n    }\n    getData(data: any): Observable<any> {\n        console.log(data);\n        const url = 'http://drsunitanayak.com/getLoanData';\n        return this.http.post<any>(url, data);\n    }\n    sendData(data: any): Observable<any> {\n        console.log(data);\n        const url = 'http://drsunitanayak.com/sendLoanForeCloseData';\n        const closeData = {\n            closeData: data,\n        };\n        return this.http.post<any>(url, closeData);\n    }\n}\n"]}