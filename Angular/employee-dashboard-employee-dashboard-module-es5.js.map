{"version":3,"sources":["webpack:///src/app/employee-dashboard/employee-dashboard/employee-dashboard.component.html","webpack:///src/app/employee-dashboard/employee-dashboard-routing.module.ts","webpack:///src/app/employee-dashboard/employee-dashboard.module.ts","webpack:///src/app/employee-dashboard/employee-dashboard/employee-dashboard.component.scss","webpack:///src/app/employee-dashboard/employee-dashboard/employee-dashboard.component.ts","webpack:///src/app/employee-dashboard/services/dashboard.service.ts","webpack:///src/app/employee-dashboard/services/index.ts"],"names":["routes","path","component","EmployeeDashboardRoutingModule","imports","forChild","exports","EmployeeDashboardModule","declarations","EmployeeDashboardComponent","dashboardService","session","loanAmount","loanDebit","emi","balance","user","retrieve","console","log","text","id","getData","subscribe","result","show","loanData","length","q","Array","i","principle","r","interest","loanBook","j","credit","amt","amount","Math","round","toFixed","accountData","account","debit","loans","error1","fire","title","icon","event","d","Date","parse","selector","template","DashboardService","httpService","data","userId","url","post","providedIn","services"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CAAC;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KAAD,CAAvB;;AAMA,QAAaC,8BAA8B;AAAA;AAAA,KAA3C;;AAAaA,kCAA8B,6DAJ1C,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAI0C,GAA9BH,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBb,QAAaI,uBAAuB;AAAA;AAAA,KAApC;;AAAaA,2BAAuB,6DAdnC,+DAAS;AACRC,kBAAY,EAAE,CAAC,2GAAD,CADN;AAENJ,aAAO,EAAE,CACL,4DADK,EAEL,iGAFK,EAGL,8GAHK,EAIL,kFAJK,EAKL,iFALK,EAML,0DANK,EAOL,mEAPK,EAQL,mEARK,EASL,sEATK;AAFH,KAAT,CAcmC,GAAvBG,uBAAuB,CAAvB;;;;;;;;;;;;;;;;AC5Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iLCGf;;;AAQA,QAAaE,0BAA0B;AAcnC,0CACYC,gBADZ,EAEWC,OAFX,EAEyC;AAAA;;AAD7B,aAAAD,gBAAA,GAAAA,gBAAA;AACD,aAAAC,OAAA,GAAAA,OAAA;AARX,aAAAC,UAAA,GAAa,CAAb;AACA,aAAAC,SAAA,GAAY,CAAZ;AACA,aAAAC,GAAA,GAAM,CAAN;AACA,aAAAC,OAAA,GAAU,CAAV;AAMI;;AAjB+B;AAAA;AAAA,mCAkBxB;AAAA;;AACP,eAAKC,IAAL,GAAY,KAAKL,OAAL,CAAaM,QAAb,CAAsB,MAAtB,CAAZ;AACAC,iBAAO,CAACC,GAAR,CAAY,KAAKH,IAAjB;AACA,cAAMI,IAAI,GAAG,KAAKJ,IAAL,CAAUK,EAAvB;AACAH,iBAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,eAAKV,gBAAL,CAAsBY,OAAtB,CAA8BF,IAA9B,EAAoCG,SAApC,CACI,UAAAC,MAAM,EAAI;AACN,gBAAIA,MAAJ,EAAY;AACRN,qBAAO,CAACC,GAAR,CAAYK,MAAZ;AACA,mBAAI,CAACC,IAAL,GAAY,CAACD,MAAM,CAACE,QAAP,CAAgBC,MAAjB,CAAZ;AACA,mBAAI,CAACC,CAAL,GAAS,IAAIC,KAAJ,CAAUL,MAAM,CAACE,QAAP,CAAgBC,MAA1B,CAAT,CAHQ,CAIR;;AACA,mBAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,MAAM,CAACE,QAAP,CAAgBC,MAApC,EAA4CG,CAAC,EAA7C,EAAiD;AAC7C,oBAAIC,SAAS,GAAGP,MAAM,CAACE,QAAP,CAAgBI,CAAhB,EAAmBJ,QAAnB,CAA4Bd,UAA5C;AACA,qBAAI,CAACA,UAAL,IAAmBmB,SAAnB;AACA,oBAAMC,CAAC,GAAGR,MAAM,CAACE,QAAP,CAAgBI,CAAhB,EAAmBJ,QAAnB,CAA4BO,QAA5B,GAAuC,GAAjD;;AACA,oBAAIT,MAAM,CAACE,QAAP,CAAgBI,CAAhB,EAAmBI,QAAvB,EAAiC;AAC7B;AACA,uBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,MAAM,CAACE,QAAP,CAAgBI,CAAhB,EAAmBI,QAAnB,CAA4BP,MAAhD,EAAwDQ,CAAC,EAAzD,EAA6D;AACzD,wBAAMrB,GAAG,GAAGU,MAAM,CAACE,QAAP,CAAgBI,CAAhB,EAAmBI,QAAnB,CAA4BC,CAA5B,EAA+BC,MAA3C;AACA,wBAAMC,GAAG,GAAGvB,GAAG,GAAGkB,CAAlB;AACAD,6BAAS,IAAIM,GAAb;AACA,yBAAI,CAACvB,GAAL,IAAYA,GAAZ;AACAI,2BAAO,CAACC,GAAR,CAAYY,SAAZ;AACH;AACJ;;AACD,qBAAI,CAAClB,SAAL,IAAkBkB,SAAlB;AACAb,uBAAO,CAACC,GAAR,CAAY,KAAI,CAACN,SAAjB;AACA,qBAAI,CAACY,IAAL,CAAUK,CAAV,IAAe,KAAf;AACH;;AACD,mBAAI,CAACQ,MAAL,GAAc,CAACC,IAAI,CAACC,KAAL,CAAW,KAAI,CAAC3B,SAAL,GAAiB,GAA5B,IAAmC,GAApC,EAAyC4B,OAAzC,CAAiD,CAAjD,CAAd,CAvBQ,CAwBR;;AACA,mBAAK,IAAIX,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGN,MAAM,CAACkB,WAAP,CAAmBf,MAAvC,EAA+CG,EAAC,EAAhD,EAAoD;AAChD,qBAAI,CAACf,OAAL,IACIS,MAAM,CAACkB,WAAP,CAAmBZ,EAAnB,EAAsBa,OAAtB,CAA8BP,MAA9B,GACAZ,MAAM,CAACkB,WAAP,CAAmBZ,EAAnB,EAAsBa,OAAtB,CAA8BC,KAFlC;AAGH;;AAED,mBAAI,CAACD,OAAL,GAAenB,MAAM,CAACkB,WAAtB;AACA,mBAAI,CAACG,KAAL,GAAarB,MAAM,CAACE,QAApB;AACH;AACJ,WApCL,EAqCI,UAAAoB,MAAM,EAAI;AACN,mFAAKC,IAAL,CAAU;AACNC,mBAAK,EAAE,OADD;AAEN5B,kBAAI,EAAE,YAFA;AAGN6B,kBAAI,EAAE;AAHA,aAAV;AAKH,WA3CL;AA6CH;AApEkC;AAAA;AAAA,kCAqEzBC,KArEyB,EAqEb;AAClBhC,iBAAO,CAACC,GAAR,CAAY+B,KAAZ;;AACA,cAAI,KAAKzB,IAAL,CAAUyB,KAAV,CAAJ,EAAsB;AAClB,iBAAKzB,IAAL,CAAUyB,KAAV,IAAmB,KAAnB;AACH,WAFD,MAEO;AACH,iBAAKzB,IAAL,CAAUyB,KAAV,IAAmB,IAAnB;AACH;AACJ;AA5EkC;AAAA;AAAA,+BA6E5BC,CA7E4B,EA6EpB;AACX,cAAM3B,MAAM,GAAG4B,IAAI,CAACC,KAAL,CAAWF,CAAX,CAAf;AACA,cAAI,CAAC3B,MAAL,EAAa,OAAO,KAAP,CAAb,KACK,OAAO,IAAP;AACR;AAjFkC;;AAAA;AAAA,OAAvC;;;;cAekC;;cACV;;;;AAhBXf,8BAA0B,6DALtC,gEAAU;AACP6C,cAAQ,EAAE,uBADH;AAEPC,cAAQ,EAAR;AAAA;AAAA,4IAFO;;;;AAAA,KAAV,CAKsC,E,+EAeL,iF,EACV,oE,EAhBe,GAA1B9C,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJb,QAAa+C,gBAAgB;AACzB,gCAAoBC,WAApB,EAA6C;AAAA;;AAAzB,aAAAA,WAAA,GAAAA,WAAA;AAA2B;;AADtB;AAAA;AAAA,gCAGjBrC,IAHiB,EAGR;AACb,cAAMsC,IAAI,GAAG;AACTC,kBAAM,EAAEvC;AADC,WAAb;AAGA,cAAMwC,GAAG,GAAG,0CAAZ;AACA,iBAAO,KAAKH,WAAL,CAAiBI,IAAjB,CAAsBD,GAAtB,EAA2BF,IAA3B,CAAP;AACH;AATwB;;AAAA;AAAA,OAA7B;;;;cACqC;;;;AADxBF,oBAAgB,6DAH5B,iEAAW;AACRM,gBAAU,EAAE;AADJ,KAAX,CAG4B,E,+EACQ,+D,EADR,GAAhBN,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLN,QAAMO,QAAQ,GAAG,CAAC,mEAAD,CAAjB","file":"employee-dashboard-employee-dashboard-module-es5.js","sourcesContent":["export default \"<sb-layout-emp-dashboard>\\r\\n    <sb-dashboard-head title=\\\"{{user.name}}'s {{'Common.Title'|translate}}\\\"></sb-dashboard-head>\\r\\n    <hr class=\\\"rounded\\\">\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-3 col-md-6\\\">\\r\\n            <sb-card-view-details link=\\\"\\\" text=\\\"{{loanAmount| indianCurrency}}\\\" background=\\\"bg-primary\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <fa-icon class=\\\"mr-1 fa-pull-right\\\" style=\\\"opacity: 0.5; font-size: 30px;\\\" [icon]='[\\\"fas\\\", \\\"hockey-puck\\\"]'></fa-icon>\\r\\n                    <p style=\\\"margin-top: 10px;\\\">{{'Employee.Cards.Loan'| translate}}</p>\\r\\n                </div>\\r\\n            </sb-card-view-details>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-3 col-md-6\\\">\\r\\n            <sb-card-view-details link=\\\"\\\" text=\\\"{{emi| indianCurrency}}\\\" background=\\\"bg-warning\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <fa-icon class=\\\"mr-1 fa-pull-right\\\" style=\\\"opacity: 0.5; font-size: 30px;\\\" [icon]='[\\\"fas\\\", \\\"wallet\\\"]'></fa-icon>\\r\\n                    <p style=\\\"margin-top: 10px;\\\">{{'Employee.Cards.Deposit'| translate}}</p>\\r\\n                </div>\\r\\n            </sb-card-view-details>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-3 col-md-6\\\">\\r\\n            <sb-card-view-details link=\\\"\\\" text=\\\"{{amount| indianCurrency}}\\\" background=\\\"bg-success\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <fa-icon class=\\\"mr-1 fa-pull-right\\\" style=\\\"opacity: 0.5; font-size: 30px;\\\" [icon]='[\\\"fas\\\", \\\"coins\\\"]'></fa-icon>\\r\\n                    <p style=\\\"margin-top: 10px;\\\">{{'Employee.Cards.Debit'| translate}}</p>\\r\\n                </div>\\r\\n            </sb-card-view-details>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-3 col-md-6\\\">\\r\\n            <sb-card-view-details link=\\\"\\\" text=\\\"{{balance| indianCurrency}}\\\" background=\\\"bg-danger\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <fa-icon class=\\\"mr-1 fa-pull-right\\\" style=\\\"opacity: 0.5; font-size: 30px;\\\" [icon]='[\\\"fas\\\", \\\"money-check\\\"]'></fa-icon>\\r\\n                    <p style=\\\"margin-top: 10px;\\\">{{'Employee.Cards.Credit'| translate}}</p>\\r\\n                </div>\\r\\n            </sb-card-view-details>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--PassBook Table-->\\r\\n    <sb-card>\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\" style=\\\"margin-top: 10px;\\\">\\r\\n                    <fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{\\\"Employee.Passbook.Title\\\" | translate}}\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" placeholder=\\\"Search..\\\" [(ngModel)]=\\\"term\\\"/>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <ng-template #not>\\r\\n            <td>-</td>\\r\\n        </ng-template>\\r\\n        <div class=\\\"card-body table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 16.66%;\\\" scope=\\\"col\\\"><span>{{\\\"Employee.Passbook.Date\\\" | translate}}</span></th>\\r\\n                    <th style=\\\"width: 60%;\\\" scope=\\\"col\\\"><span>{{\\\"Employee.Passbook.Particulars\\\" | translate}}</span></th>\\r\\n                    <th scope=\\\"col\\\"><span>Mode</span></th>\\r\\n                    <th scope=\\\"col\\\"><span>{{\\\"Employee.Passbook.Deposit\\\" | translate}}</span></th>\\r\\n                    <th scope=\\\"col\\\"><span>{{\\\"Employee.Passbook.Withdrawal\\\" | translate}}</span></th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let val of account | filter: term | paginate: { itemsPerPage:5, currentPage: p} \\\">\\r\\n                <tr>\\r\\n                    <th scope=\\\"row\\\" *ngIf=\\\"isDate(val.account.date); else notDate\\\">{{ val.account.date| date:'dd-MM-yyyy' }}</th>\\r\\n                    <ng-template #notDate>\\r\\n                        <th scope=\\\"row\\\">{{val.account.date}}</th>\\r\\n                    </ng-template>\\r\\n                    <td *ngIf=\\\"val.account.particulars; else not\\\">{{val.account.particulars}}</td>\\r\\n                    <td *ngIf=\\\"val.account.mode; else not\\\">{{val.account.mode}}</td>\\r\\n                    <td class=\\\"table-success\\\" *ngIf=\\\"val.account.credit; else not\\\">{{val.account.credit| indianCurrency}}</td>\\r\\n                    <td class=\\\"table-danger\\\" *ngIf=\\\"val.account.debit; else not\\\">{{val.account.debit| indianCurrency}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"val.cheque\\\" align=\\\"center\\\" colspan=\\\"5\\\">\\r\\n                        <h6 style=\\\"font-weight: bold\\\">Cheque Details</h6>\\r\\n                        <table style=\\\"width: 100%;\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <td style=\\\"width: 16.66%;\\\">Cheque Date</td>\\r\\n                                <td style=\\\"width: 60%;\\\">Bank Name</td>\\r\\n                                <td>Cheque Number</td>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeDate; else not\\\">{{val.cheque[0].chequeDate| date:'dd-MM-yyyy'}}</td>\\r\\n                                <td class=\\\"col-5\\\" *ngIf=\\\"val.cheque[0].bankName; else not\\\">{{val.cheque[0].bankName}}</td>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeNo; else not\\\">{{val.cheque[0].chequeNo}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"pagination\\\">\\r\\n                <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\r\\n            </div>\\r\\n        </div>\\r\\n    </sb-card>\\r\\n    <!--Loan Table-->\\r\\n    <ng-container *ngFor=\\\"let data of loans; let i = index\\\">\\r\\n        <sb-card>\\r\\n            <div class=\\\"card-header bg-primary headers\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\" style=\\\"margin-top: 10px; color: white;\\\">\\r\\n                        <h5><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"rupee-sign\\\"]'></fa-icon>&nbsp;{{'Employee.Loan'| translate}} ({{data.loanData.date| date:'dd-MM-yyyy'}})</h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\" style=\\\"color: white;\\\">\\r\\n                        <fa-icon class=\\\"fa-pull-right rotate\\\" [ngClass]=\\\"{'clicked': show[i]}\\\" (click)=\\\"showTable(i)\\\" [icon]='[\\\"fas\\\",\\\"caret-right\\\"]' style=\\\"margin-top: 10px;\\\">\\r\\n                        </fa-icon>&nbsp;\\r\\n                        <span class=\\\"float-right\\\" style=\\\"margin: 10px;\\\"><h5 *ngIf=\\\"data.loanData.loanAmount; else not\\\">{{data.loanData.loanAmount| indianCurrency}}</h5></span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-header\\\" *ngIf=\\\"show[i]  && data.loanBook\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\" style=\\\"margin-top: 10px;\\\">\\r\\n                        <fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>&nbsp;{{\\\"Employee.Loanbook.Title\\\" | translate}}\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body table-responsive\\\" *ngIf=\\\"show[i] && data.loanBook\\\">\\r\\n                <table class=\\\"table table-striped\\\">\\r\\n                    <thead>\\r\\n                    <tr>\\r\\n                        <th style=\\\"width: 16.66%;\\\" scope=\\\"col\\\"><span>{{\\\"Employee.Loanbook.Date\\\" | translate}}</span></th>\\r\\n                        <th style=\\\"width: 60%;\\\" scope=\\\"col\\\"><span>{{\\\"Employee.Loanbook.Particulars\\\" | translate}}</span></th>\\r\\n                        <th scope=\\\"col\\\"><span>{{\\\"Employee.Loanbook.Emi\\\" | translate}}</span></th>\\r\\n                    </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                    <tr *ngFor=\\\"let val of data.loanBook\\\">\\r\\n                        <th scope=\\\"row\\\" *ngIf=\\\"isDate(val.date); else notDate\\\">{{val.date| date:'dd-MM-yyyy'}}</th>\\r\\n                        <ng-template #notDate>\\r\\n                            <th scope=\\\"row\\\">{{val.date}}</th>\\r\\n                        </ng-template>\\r\\n                        <td *ngIf=\\\"val.particulars; else not\\\">{{val.particulars}}</td>\\r\\n                        <td *ngIf=\\\"val.credit; else not\\\">{{val.credit| indianCurrency}}</td>\\r\\n                    </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            <div class=\\\"card-body table-responsive\\\" *ngIf=\\\"show[i] && data.closeData && data.closeData[0].mode==='Cash';else cheque\\\">\\r\\n                <h3 style=\\\"font-weight: bold; text-align: center;\\\">Loan Closure Details</h3>\\r\\n                <table class=\\\"table table-striped\\\">\\r\\n                    <thead>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ShowDate\\\" | translate}}</span></th>\\r\\n                        <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.LoanStatus\\\"  | translate}}</span></th>\\r\\n                        <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Mode\\\" | translate}}</span></th>\\r\\n                        <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Pay\\\" | translate}}</span></th>\\r\\n                    </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                    <tr>\\r\\n                        <th scope=\\\"row\\\" *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</th>\\r\\n                        <ng-template #notDate>\\r\\n                            <th scope=\\\"row\\\">{{data.closeData[0].date}}</th>\\r\\n                        </ng-template>\\r\\n                        <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\r\\n                        <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\r\\n                        <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\r\\n                    </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            <ng-template #cheque>\\r\\n                <div class=\\\"card-body table-responsive\\\" *ngIf=\\\"show[i] && data.closeData && data.closeData[0].mode==='Cheque'\\\">\\r\\n                    <h3 style=\\\"font-weight: bold; text-align: center;\\\">Loan Closure Details</h3>\\r\\n                    <table class=\\\"table table-striped\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ShowDate\\\" | translate}}</span></th>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.LoanStatus\\\"  | translate}}</span></th>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Mode\\\" | translate}}</span></th>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.Pay\\\" | translate}}</span></th>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ChequeDate\\\" | translate}}</span></th>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.BankName\\\"  | translate}}</span></th>\\r\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Tables.ChequeNo\\\" | translate}}</span></th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <th scope=\\\"row\\\" *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</th>\\r\\n                            <ng-template #notDate>\\r\\n                                <th scope=\\\"row\\\">{{data.closeData[0].date}}</th>\\r\\n                            </ng-template>\\r\\n                            <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\r\\n                            <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\r\\n                            <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\r\\n                            <td *ngIf=\\\"data.chequeData[0].chequeDate; else not\\\">{{data.chequeData[0].chequeDate| indianCurrency}}</td>\\r\\n                            <td *ngIf=\\\"data.chequeData[0].bankName; else not\\\">{{data.chequeData[0].bankName| indianCurrency}}</td>\\r\\n                            <td *ngIf=\\\"data.chequeData[0].chequeNo; else not\\\">{{data.chequeData[0].chequeNo| indianCurrency}}</td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </sb-card>\\r\\n    </ng-container>\\r\\n</sb-layout-emp-dashboard>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmployeeDashboardComponent } from '@app/employee-dashboard/employee-dashboard/employee-dashboard.component';\r\n\r\n\r\nconst routes: Routes = [{ path: '', component: EmployeeDashboardComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmployeeDashboardRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EmployeeDashboardRoutingModule } from './employee-dashboard-routing.module';\r\nimport { EmployeeDashboardComponent } from './employee-dashboard/employee-dashboard.component';\r\nimport { LayoutEmpDashboardModule } from '@app/layout-emp-dashboard/layout-emp-dashboard.module';\r\nimport { NavigationModule } from '@app/navigation/navigation.module';\r\nimport { AppCommonModule } from '@app/app-common/app-common.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\n\r\n@NgModule({\r\n  declarations: [EmployeeDashboardComponent],\r\n    imports: [\r\n        CommonModule,\r\n        EmployeeDashboardRoutingModule,\r\n        LayoutEmpDashboardModule,\r\n        NavigationModule,\r\n        AppCommonModule,\r\n        FormsModule,\r\n        TranslateModule,\r\n        NgxPaginationModule,\r\n        Ng2SearchPipeModule,\r\n    ],\r\n})\r\nexport class EmployeeDashboardModule { }\r\n","export default \".headers {\\n  color: white;\\n}\\n\\n.pagination a {\\n  border-radius: 5px;\\n}\\n\\n.pagination a.active {\\n  border-radius: 5px;\\n}\\n\\n/* Style the search box inside the navigation bar */\\n\\n.card-header input[type=text] {\\n  border-radius: 5px;\\n  float: right;\\n  padding: 6px;\\n  margin-right: 16px;\\n  font-size: 17px;\\n  border: 1px solid #000000;\\n}\\n\\n.rotate {\\n  margin: 10px;\\n  transition: all 0s ease-out !important;\\n}\\n\\n.clicked {\\n  transform: rotate(90deg);\\n}\\n\\n/* When the screen is less than 600px wide, stack the links and the search field vertically instead of horizontally */\\n\\n@media screen and (max-width: 600px) {\\n  .card-header a, .card-header input[type=text] {\\n    border-radius: 5px;\\n    float: none;\\n    display: block;\\n    text-align: left;\\n    width: 100%;\\n    margin: 0;\\n    padding: 14px;\\n  }\\n\\n  .card-header input[type=text] {\\n    border: 1px solid #ccc;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWUtZGFzaGJvYXJkL2VtcGxveWVlLWRhc2hib2FyZC9DOlxcVXNlcnNcXFBSQUtIQVJcXERvY3VtZW50c1xcQW5ndWxhciBQcm9qZWN0XFxLb3NoaW1hXFxTb2NpZXR5X0Jhbmtpbmcvc3JjXFxhcHBcXGVtcGxveWVlLWRhc2hib2FyZFxcZW1wbG95ZWUtZGFzaGJvYXJkXFxlbXBsb3llZS1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2VtcGxveWVlLWRhc2hib2FyZC9lbXBsb3llZS1kYXNoYm9hcmQvZW1wbG95ZWUtZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksWUFBQTtBQ0RKOztBREdBO0VBQ0ksa0JBQUE7QUNBSjs7QURHQTtFQUNJLGtCQUFBO0FDQUo7O0FERUEsbURBQUE7O0FBQ0E7RUFDSSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7QUNDSjs7QURDQTtFQUNJLFlBQUE7RUFDQSxzQ0FBQTtBQ0VKOztBREFBO0VBQ0ksd0JBQUE7QUNHSjs7QURBQSxxSEFBQTs7QUFDQTtFQUNJO0lBQ0ksa0JBQUE7SUFDQSxXQUFBO0lBQ0EsY0FBQTtJQUNBLGdCQUFBO0lBQ0EsV0FBQTtJQUNBLFNBQUE7SUFDQSxhQUFBO0VDR047O0VEREU7SUFDSSxzQkFBQTtFQ0lOO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9lbXBsb3llZS1kYXNoYm9hcmQvZW1wbG95ZWUtZGFzaGJvYXJkL2VtcGxveWVlLWRhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3N0eWxlcy92YXJpYWJsZXMuc2Nzcyc7XHJcblxyXG4uaGVhZGVyc3tcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG4ucGFnaW5hdGlvbiBhIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLnBhZ2luYXRpb24gYS5hY3RpdmUge1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcbi8qIFN0eWxlIHRoZSBzZWFyY2ggYm94IGluc2lkZSB0aGUgbmF2aWdhdGlvbiBiYXIgKi9cclxuLmNhcmQtaGVhZGVyIGlucHV0W3R5cGU9dGV4dF0ge1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgcGFkZGluZzogNnB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG4gICAgZm9udC1zaXplOiAxN3B4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcclxufVxyXG4ucm90YXRlIHtcclxuICAgIG1hcmdpbjogMTBweDtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwcyBlYXNlLW91dCAhaW1wb3J0YW50O1xyXG59XHJcbi5jbGlja2VkIHtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKVxyXG59XHJcblxyXG4vKiBXaGVuIHRoZSBzY3JlZW4gaXMgbGVzcyB0aGFuIDYwMHB4IHdpZGUsIHN0YWNrIHRoZSBsaW5rcyBhbmQgdGhlIHNlYXJjaCBmaWVsZCB2ZXJ0aWNhbGx5IGluc3RlYWQgb2YgaG9yaXpvbnRhbGx5ICovXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XHJcbiAgICAuY2FyZC1oZWFkZXIgYSwgLmNhcmQtaGVhZGVyIGlucHV0W3R5cGU9dGV4dF0ge1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICBmbG9hdDogbm9uZTtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBwYWRkaW5nOiAxNHB4O1xyXG4gICAgfVxyXG4gICAgLmNhcmQtaGVhZGVyIGlucHV0W3R5cGU9dGV4dF0ge1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICB9XHJcbn1cclxuIiwiLmhlYWRlcnMge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5wYWdpbmF0aW9uIGEge1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbi5wYWdpbmF0aW9uIGEuYWN0aXZlIHtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG4vKiBTdHlsZSB0aGUgc2VhcmNoIGJveCBpbnNpZGUgdGhlIG5hdmlnYXRpb24gYmFyICovXG4uY2FyZC1oZWFkZXIgaW5wdXRbdHlwZT10ZXh0XSB7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBwYWRkaW5nOiA2cHg7XG4gIG1hcmdpbi1yaWdodDogMTZweDtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwO1xufVxuXG4ucm90YXRlIHtcbiAgbWFyZ2luOiAxMHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMHMgZWFzZS1vdXQgIWltcG9ydGFudDtcbn1cblxuLmNsaWNrZWQge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG59XG5cbi8qIFdoZW4gdGhlIHNjcmVlbiBpcyBsZXNzIHRoYW4gNjAwcHggd2lkZSwgc3RhY2sgdGhlIGxpbmtzIGFuZCB0aGUgc2VhcmNoIGZpZWxkIHZlcnRpY2FsbHkgaW5zdGVhZCBvZiBob3Jpem9udGFsbHkgKi9cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gIC5jYXJkLWhlYWRlciBhLCAuY2FyZC1oZWFkZXIgaW5wdXRbdHlwZT10ZXh0XSB7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGZsb2F0OiBub25lO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDE0cHg7XG4gIH1cblxuICAuY2FyZC1oZWFkZXIgaW5wdXRbdHlwZT10ZXh0XSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgfVxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '@app/employee-dashboard/services';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\n// @ts-ignore\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\n@Component({\r\n    selector: 'sb-employee-dashboard',\r\n    templateUrl: './employee-dashboard.component.html',\r\n    styleUrls: ['./employee-dashboard.component.scss'],\r\n})\r\nexport class EmployeeDashboardComponent implements OnInit {\r\n    p: any;\r\n    q: any;\r\n    account: any;\r\n    loans: any;\r\n    term: any;\r\n    loanTerm: any;\r\n    show: any;\r\n    loanAmount = 0;\r\n    loanDebit = 0;\r\n    emi = 0;\r\n    balance = 0;\r\n    amount: any;\r\n    user: any;\r\n    constructor(\r\n        private dashboardService: DashboardService,\r\n        public session: SessionStorageService\r\n    ) {}\r\n    ngOnInit() {\r\n        this.user = this.session.retrieve('user');\r\n        console.log(this.user);\r\n        const text = this.user.id;\r\n        console.log(text);\r\n        this.dashboardService.getData(text).subscribe(\r\n            result => {\r\n                if (result) {\r\n                    console.log(result);\r\n                    this.show = [result.loanData.length];\r\n                    this.q = new Array(result.loanData.length);\r\n                    // tslint:disable-next-line:prefer-for-of\r\n                    for (let i = 0; i < result.loanData.length; i++) {\r\n                        let principle = result.loanData[i].loanData.loanAmount;\r\n                        this.loanAmount += principle;\r\n                        const r = result.loanData[i].loanData.interest / 100;\r\n                        if (result.loanData[i].loanBook) {\r\n                            // tslint:disable-next-line:prefer-for-of\r\n                            for (let j = 0; j < result.loanData[i].loanBook.length; j++) {\r\n                                const emi = result.loanData[i].loanBook[j].credit;\r\n                                const amt = emi * r;\r\n                                principle -= amt;\r\n                                this.emi += emi;\r\n                                console.log(principle);\r\n                            }\r\n                        }\r\n                        this.loanDebit += principle;\r\n                        console.log(this.loanDebit);\r\n                        this.show[i] = false;\r\n                    }\r\n                    this.amount = (Math.round(this.loanDebit * 100) / 100).toFixed(0);\r\n                    // tslint:disable-next-line:prefer-for-of\r\n                    for (let i = 0; i < result.accountData.length; i++) {\r\n                        this.balance +=\r\n                            result.accountData[i].account.credit -\r\n                            result.accountData[i].account.debit;\r\n                    }\r\n\r\n                    this.account = result.accountData;\r\n                    this.loans = result.loanData;\r\n                }\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n    }\r\n    showTable(event: any) {\r\n        console.log(event);\r\n        if (this.show[event]) {\r\n            this.show[event] = false;\r\n        } else {\r\n            this.show[event] = true;\r\n        }\r\n    }\r\n    isDate(d: any) {\r\n        const result = Date.parse(d);\r\n        if (!result) return false;\r\n        else return true;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class DashboardService {\r\n    constructor(private httpService: HttpClient) {}\r\n\r\n    getData(text: any): Observable<any> {\r\n        const data = {\r\n            userId: text,\r\n        };\r\n        const url = 'http://206.189.129.219:8080/get/userData';\r\n        return this.httpService.post(url, data);\r\n    }\r\n}\r\n","import { DashboardService } from './dashboard.service';\r\n\r\nexport const services = [DashboardService];\r\n\r\nexport * from './dashboard.service';\r\n"]}