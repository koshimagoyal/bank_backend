{"version":3,"sources":["./src/app/debit-entry/debit-entry.component.html","./src/app/debit-entry/debit-entry-routing.module.ts","./src/app/debit-entry/debit-entry.component.scss","./src/app/debit-entry/debit-entry.component.ts","./src/app/debit-entry/debit-entry.module.ts","./src/app/debit-entry/services/debit-entry.service.ts","./src/app/debit-entry/services/index.ts"],"names":[],"mappings":"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","file":"debit-entry-debit-entry-module-es2015.js","sourcesContent":["export default \"<sb-layout-dashboard>\\r\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.Debit'| translate}}\\\"></sb-dashboard-head>\\r\\n    <hr class=\\\"rounded\\\">\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Pages.Debit'| translate}}</div>\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <form class=\\\"form-inline\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"showTable()\\\">\\r\\n                        <label>\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter Employee No\\\" formControlName=\\\"employeeNo\\\"/>\\r\\n                        </label>\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!searchForm.valid\\\">{{'Accountant.GetInfo'| translate}}</button>\\r\\n                    </form>\\r\\n                    <table class=\\\"table table-striped\\\" *ngIf=\\\"table\\\" id=\\\"content\\\">\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.EmployeeNo'| translate}}</td>\\r\\n                            <td>{{text}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.EmployeeName'| translate}}</td>\\r\\n                            <td>{{name}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Corpus'| translate}}</td>\\r\\n                            <td>{{corpusData| indianCurrency}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Balance'| translate}}</td>\\r\\n                            <td>{{balance| indianCurrency}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Date'| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"date\\\" name=\\\"date\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.DebitAmount'| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"number\\\" [(ngModel)]=\\\"debitAmount\\\" (focusout)=\\\"debit($event)\\\" name=\\\"amount\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Mode' | translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <select class=\\\"custom-select\\\" [(ngModel)]=\\\"type\\\">\\r\\n                                        <option>{{'Accountant.Tables.Cash' | translate}}</option>\\r\\n                                        <option>{{'Accountant.Tables.Cheque' | translate}}</option>\\r\\n                                    </select>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"type == 'Cheque'\\\">\\r\\n                            <td>{{'Accountant.Tables.BankName' | translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <select class=\\\"custom-select\\\" name=\\\"bankName\\\" [(ngModel)]=\\\"bankName\\\">\\r\\n                                        <option *ngFor=\\\"let val of bankList\\\">{{val.bankName}}</option>\\r\\n                                    </select>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"type == 'Cheque'\\\">\\r\\n                            <td>{{'Accountant.Tables.ChequeDate' | translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"chequeDate\\\" name=\\\"chequeDate\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"type == 'Cheque'\\\">\\r\\n                            <td>{{'Accountant.Tables.ChequeNo' | translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"chequeNo\\\" name=\\\"chequeNo\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Remark'| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"purpose\\\" name=\\\"purpose\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <button *ngIf=\\\"table\\\" (click)=\\\"send()\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\r\\n                </div>\\r\\n            </sb-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n    </div>\\r\\n</sb-layout-dashboard>\\r\\n\\r\\n\\r\\n\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DebitEntryComponent } from './debit-entry.component';\r\n\r\nconst routes: Routes = [{ path: '', component: DebitEntryComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DebitEntryRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlYml0LWVudHJ5L2RlYml0LWVudHJ5LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { DebitEntryService } from '@app/debit-entry/services';\r\n// @ts-ignore\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CreditEntryService } from '@app/credit-entry/services';\r\n@Component({\r\n    selector: 'sb-debit-entry',\r\n    templateUrl: './debit-entry.component.html',\r\n    styleUrls: ['./debit-entry.component.scss'],\r\n})\r\nexport class DebitEntryComponent implements OnInit {\r\n    searchForm: FormGroup;\r\n    text: any;\r\n    debitAmount: any;\r\n    purpose: any;\r\n    type: any;\r\n    data: any;\r\n    bankName: any;\r\n    chequeNo: any;\r\n    chequeDate: any;\r\n    name: any;\r\n    date: any;\r\n    balance = 0;\r\n    table = false;\r\n    bankList: any;\r\n    corpusData = 0;\r\n    constructor(private debitService: DebitEntryService, public fb: FormBuilder) {\r\n        this.searchForm = this.fb.group({\r\n            employeeNo: new FormControl('', Validators.compose([Validators.required])),\r\n        });\r\n    }\r\n    send() {\r\n        if (!this.text || !this.debitAmount || !this.purpose || !this.type || !this.date) {\r\n            Swal.fire({\r\n                title: 'Oops!',\r\n                text: 'Fill all the details!',\r\n                icon: 'error',\r\n            });\r\n        } else {\r\n            const accountData = {\r\n                userId: this.text,\r\n                debit: this.debitAmount,\r\n                particulars: this.purpose,\r\n                mode: this.type,\r\n                type: 'Operational',\r\n                date: this.date,\r\n                chequeDate: this.chequeDate,\r\n                chequeNo: this.chequeNo,\r\n                bankName: this.bankName,\r\n            };\r\n            this.debitService.sendData(accountData).subscribe(\r\n                result => {\r\n                    Swal.fire({\r\n                        text: 'Sent!',\r\n                        icon: 'success',\r\n                    }).then((isConfirm: any) => {\r\n                        if (isConfirm) {\r\n                            // @ts-ignore\r\n                            this.table = false;\r\n                            this.text = null;\r\n                            this.debitAmount = null;\r\n                            this.purpose = null;\r\n                            this.date = null;\r\n                            this.chequeDate = null;\r\n                            this.chequeNo = null;\r\n                            this.bankName = null;\r\n                            this.balance = 0;\r\n                            this.type = null;\r\n                            this.searchForm = this.fb.group({\r\n                                employeeNo: new FormControl('', Validators.compose([Validators.required])),\r\n                            });\r\n                        }\r\n                    });\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n    showTable() {\r\n        // @ts-ignore\r\n        this.text = this.searchForm.get('employeeNo').value;\r\n        console.log(this.text);\r\n        this.debitService.getData(this.text).subscribe(\r\n            result => {\r\n                console.log(result);\r\n                if (result.nameData.length === 0) {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'This user does not exists!',\r\n                        icon: 'error',\r\n                    });\r\n                } else {\r\n                    console.log(result);\r\n                    // tslint:disable-next-line:prefer-for-of\r\n                    for (let i = 0; i < result.balance.length; i++) {\r\n                        this.balance =\r\n                            this.balance + result.balance[i].credit - result.balance[i].debit;\r\n                    }\r\n                    console.log(this.balance);\r\n                    this.name = result.nameData[0].name;\r\n                    this.table = true;\r\n                }\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n        return this.balance;\r\n    }\r\n    debit($event: any) {\r\n        console.log(this.balance);\r\n        if ($event.target.value > this.balance) {\r\n            Swal.fire({\r\n                title: 'Oops!',\r\n                text: 'Balance is less than debit amount',\r\n                icon: 'error',\r\n            });\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.debitService.getBankList().subscribe(result => {\r\n            this.bankList = result;\r\n            console.log(this.bankList);\r\n        });\r\n        this.debitService.getCorpusData().subscribe(\r\n            result => {\r\n                console.log(result);\r\n                // tslint:disable-next-line:prefer-for-of\r\n                for (let i = 0; i < result.balance.length; i++) {\r\n                    this.corpusData =\r\n                        this.corpusData + result.balance[i].credit - result.balance[i].debit;\r\n                }\r\n                console.log(this.corpusData);\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n        return this.corpusData;\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppCommonModule } from '@app/app-common/app-common.module';\r\nimport { NavigationModule } from '@app/navigation/navigation.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { DebitEntryRoutingModule } from './debit-entry-routing.module';\r\nimport { DebitEntryComponent } from './debit-entry.component';\r\nimport * as service from './services';\r\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\r\n\r\n@NgModule({\r\n    declarations: [DebitEntryComponent],\r\n    imports: [\r\n        CommonModule,\r\n        DebitEntryRoutingModule,\r\n        TranslateModule,\r\n        FormsModule,\r\n        AppCommonModule,\r\n        NavigationModule,\r\n        LayoutDashboardModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    providers: [...service.services],\r\n})\r\nexport class DebitEntryModule {}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class DebitEntryService {\r\n    constructor(private http: HttpClient) {}\r\n    getBankList(): Observable<any> {\r\n        const url = 'http://206.189.129.219:8080/getBankList';\r\n        const headers = new HttpHeaders();\r\n        headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Access-Control-Allow-Methods', 'POST,GET,OPTIONS,PUT');\r\n        headers.append('Accept', 'application/json');\r\n        headers.append('content-type', 'application/json');\r\n        return this.http.get<any>(url, { headers });\r\n    }\r\n    getData(text: any): Observable<any> {\r\n        console.log(text);\r\n        const url = 'http://206.189.129.219:8080/getOperationalAccountData';\r\n        const data = {\r\n            userId: text,\r\n        };\r\n        return this.http.post<any>(url, data);\r\n    }\r\n    getCorpusData(): Observable<any> {\r\n        const url = 'http://206.189.129.219:8080/getCorpusData';\r\n        return this.http.get<any>(url);\r\n    }\r\n    sendData(data: any): Observable<any> {\r\n        console.log(data);\r\n        const url = 'http://206.189.129.219:8080/sendDebitEntry';\r\n        return this.http.post<any>(url, data);\r\n    }\r\n}\r\n","import { DebitEntryService } from './debit-entry.service';\r\n\r\nexport const services = [DebitEntryService];\r\n\r\nexport * from './debit-entry.service';\r\n"],"sourceRoot":"webpack:///"}