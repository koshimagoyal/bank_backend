{"version":3,"sources":["webpack:///src/app/close-account/close-account.component.html","webpack:///src/app/close-account/dialog/dialog.component.html","webpack:///src/app/close-account/close-account-routing.module.ts","webpack:///src/app/close-account/close-account.component.scss","webpack:///src/app/close-account/close-account.component.ts","webpack:///src/app/close-account/close-account.module.ts","webpack:///src/app/close-account/dialog/dialog.component.ts","webpack:///src/app/close-account/services/close-account.service.ts","webpack:///src/app/close-account/services/index.ts"],"names":["routes","path","component","CloseAccountRoutingModule","imports","forChild","exports","CloseAccountComponent","dialog","snackBar","closeAccount","fb","table","loanClose","hide","disable","searchForm","group","employeeNo","compose","required","text","get","value","console","log","getData","subscribe","result","nameData","length","fire","title","icon","name","loanData","error1","data","date","close","userId","sendData","resultData","then","isConfirm","event","target","checked","dialogRef","open","id","height","width","afterClosed","selector","template","CloseAccountModule","declarations","entryComponents","vfs","pdfMake","DialogComponent","updateSize","docDefinition","content","document","getElementById","innerText","style","alignment","styles","header","fontSize","bold","margin","createPdf","download","CloseAccountService","http","url","post","providedIn","services"],"mappings":"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","file":"close-account-close-account-module-es5.js","sourcesContent":["export default \"<sb-layout-dashboard>\\r\\n    <sb-dashboard-head title=\\\"{{'Accountant.Tables.CloseAcc'|translate}}\\\"></sb-dashboard-head>\\r\\n    <hr class=\\\"rounded\\\">\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{\\\"Accountant.Tables.CloseAcc\\\"| translate}}</div>\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <form class=\\\"form-inline\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"showTable()\\\">\\r\\n                        <label>\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter Employee No\\\" formControlName=\\\"employeeNo\\\"/>\\r\\n                        </label>\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!searchForm.valid\\\">{{'Accountant.GetInfo'| translate}}</button>\\r\\n                    </form>\\r\\n                    <table class=\\\"table table-striped\\\" *ngIf=\\\"table\\\" id=\\\"content\\\">\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <td>{{\\\"Accountant.Tables.EmployeeNo\\\"| translate}}</td>\\r\\n                            <td>{{text}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.EmployeeName' | translate}}</td>\\r\\n                            <td>{{name}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Date' | translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"date\\\" name=\\\"date\\\" />\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{\\\"Accountant.Tables.LoanStatus\\\" | translate}}</td>\\r\\n                            <td *ngIf=\\\"loanClose; else not\\\">{{\\\"Accountant.Tables.Closed\\\" | translate}}</td>\\r\\n                            <ng-template #not>\\r\\n                                <td>{{\\\"Accountant.Tables.Not\\\" | translate}}</td>\\r\\n                            </ng-template>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"hide\\\">\\r\\n                            <td>{{\\\"Accountant.Tables.GenerateLetter\\\"| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"checkbox\\\" (change)=\\\"openDialog($event)\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"hide\\\">\\r\\n                            <td>{{\\\"Accountant.Tables.Letter\\\"| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"checkbox\\\" [disabled]=\\\"disable\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"hide\\\">\\r\\n                            <td>{{\\\"Accountant.Tables.Settlement\\\"| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"checkbox\\\" [disabled]=\\\"disable\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"hide\\\">\\r\\n                            <td>{{\\\"Accountant.Tables.Close\\\"| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"checkbox\\\" [disabled]=\\\"disable\\\" (change)=\\\"close()\\\"/>\\r\\n                                </label>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </sb-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n    </div>\\r\\n</sb-layout-dashboard>\\r\\n\";","export default \"<div id=\\\"data\\\">\\r\\n    <br>\\r\\n    <h1 mat-dialog-title align=\\\"center\\\" id=\\\"title\\\">Letter for Account Closure</h1>\\r\\n    <mat-dialog-content class=\\\"mat-typography\\\">\\r\\n        <h3 id=\\\"date\\\">Date: {{date| date:'dd-MM-yyyy'}}</h3>\\r\\n        <br/>\\r\\n        <h3 id=\\\"company\\\">ABC Company</h3>\\r\\n        <h3 id=\\\"address1\\\">Nariman Point</h3>\\r\\n        <h3 id=\\\"address2\\\">Mumbai</h3>\\r\\n        <br/>\\r\\n        <h3 id=\\\"salutation\\\">Dear {{name}}</h3>\\r\\n        <h3>We would like to notify that all the dues of {{name}} having Employee Id as {{id}} has been cleared and the account is ready to be closed. Please submit this letter with your signature</h3>\\r\\n        <br/>\\r\\n        <h3 id=\\\"thank\\\">Thanking You</h3>\\r\\n        <br>\\r\\n        <h3 id=\\\"bottom1\\\">Yours faithfully</h3>\\r\\n        <h3 id=\\\"bottom2\\\">Amita Gupta</h3>\\r\\n        <h3 id=\\\"bottom3\\\">Manager</h3>\\r\\n    </mat-dialog-content>\\r\\n</div>\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n    <button class=\\\"btn-danger\\\" mat-button mat-dialog-close>Cancel</button>\\r\\n    <button class=\\\"btn-success\\\" mat-button (click)=\\\"onConfirmClick()\\\" cdkFocusInitial>Print</button>\\r\\n</mat-dialog-actions>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CloseAccountComponent } from './close-account.component';\r\n\r\nconst routes: Routes = [{ path: '', component: CloseAccountComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CloseAccountRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nsb3NlLWFjY291bnQvY2xvc2UtYWNjb3VudC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DialogComponent } from '@app/close-account/dialog/dialog.component';\r\nimport { CloseAccountService } from '@app/close-account/services';\r\n// @ts-ignore\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'sb-close-account',\r\n    templateUrl: './close-account.component.html',\r\n    styleUrls: ['./close-account.component.scss'],\r\n})\r\nexport class CloseAccountComponent implements OnInit {\r\n    searchForm: FormGroup;\r\n    text: any;\r\n    table = false;\r\n    loanClose = false;\r\n    hide = false;\r\n    disable = true;\r\n    name: any;\r\n    date: any;\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private closeAccount: CloseAccountService,\r\n        public fb: FormBuilder\r\n    ) {\r\n        this.searchForm = this.fb.group({\r\n            employeeNo: new FormControl('', Validators.compose([Validators.required])),\r\n        });\r\n    }\r\n    showTable() {\r\n        // @ts-ignore\r\n        this.text = this.searchForm.get('employeeNo').value;\r\n        console.log(this.text);\r\n        this.closeAccount.getData(this.text).subscribe(\r\n            result => {\r\n                console.log(result);\r\n                if (result.nameData.length === 0) {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'This user does not exists!',\r\n                        icon: 'error',\r\n                    });\r\n                } else {\r\n                    console.log(result);\r\n                    this.name = result.nameData[0].name;\r\n                    this.loanClose = result.loanData.length === 0;\r\n                    this.hide = this.loanClose;\r\n                    this.table = true;\r\n                }\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n        return this.loanClose;\r\n    }\r\n    close() {\r\n        const data = {\r\n            date: this.date,\r\n            close: true,\r\n            userId: this.text,\r\n        };\r\n        this.closeAccount.sendData(data).subscribe(\r\n            resultData => {\r\n                Swal.fire({\r\n                    text: 'Sent!',\r\n                    icon: 'success',\r\n                }).then((isConfirm: any) => {\r\n                    if (isConfirm) {\r\n                        // @ts-ignore\r\n                        this.table = false;\r\n                        this.text = null;\r\n                        this.date = null;\r\n                    }\r\n                });\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n    }\r\n    openDialog(event: any) {\r\n        if (event.target.checked) {\r\n            const dialogRef = this.dialog.open(DialogComponent, {\r\n                data: {\r\n                    id: this.text,\r\n                    name: this.name,\r\n                    date: this.date,\r\n                },\r\n                height: '600px',\r\n                width: '700px',\r\n            });\r\n\r\n            dialogRef.afterClosed().subscribe(result => {\r\n                if (result) {\r\n                    this.disable = !this.disable;\r\n                } else {\r\n                    event.target.checked = false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    ngOnInit(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppCommonModule } from '@app/app-common/app-common.module';\r\nimport { NavigationModule } from '@app/navigation/navigation.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { CloseAccountRoutingModule } from './close-account-routing.module';\r\nimport { CloseAccountComponent } from './close-account.component';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\r\n\r\n@NgModule({\r\n    declarations: [CloseAccountComponent, DialogComponent],\r\n    imports: [\r\n        CommonModule,\r\n        CloseAccountRoutingModule,\r\n        NavigationModule,\r\n        AppCommonModule,\r\n        TranslateModule,\r\n        FormsModule,\r\n        MatDialogModule,\r\n        MatSnackBarModule,\r\n        LayoutDashboardModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    exports: [DialogComponent],\r\n    entryComponents: [DialogComponent],\r\n})\r\nexport class CloseAccountModule {}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n@Component({\r\n    selector: 'sb-dialog',\r\n    templateUrl: './dialog.component.html',\r\n})\r\nexport class DialogComponent {\r\n    id = '';\r\n    name = '';\r\n    date = '';\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) private data: any,\r\n        private dialogRef: MatDialogRef<DialogComponent>\r\n    ) {\r\n        if (data) {\r\n            this.id = data.id || this.id;\r\n            this.name = data.name || this.name;\r\n            this.date = data.date || this.date;\r\n            // if (data.buttonText) {\r\n            //  this.cancelButtonText = data.buttonText.cancel || this.cancelButtonText;\r\n            // }\r\n        }\r\n        this.dialogRef.updateSize('300vw', '300vw');\r\n    }\r\n\r\n    onConfirmClick(): void {\r\n        // @ts-ignore\r\n        const docDefinition = {\r\n            title: 'Account Closure Letter',\r\n            content: [\r\n                {\r\n                    // @ts-ignore\r\n                    text: document.getElementById('title').innerText,\r\n                    style: 'header',\r\n                    alignment: 'center',\r\n                },\r\n                { text: '\\n' },\r\n                { text: '\\n' },\r\n                {\r\n                    // @ts-ignore\r\n                    text: document.getElementById('date').innerText,\r\n                },\r\n                { text: '\\n' },\r\n                {\r\n                    // @ts-ignore\r\n                    text: document.getElementById('company').innerText,\r\n                },\r\n                {\r\n                    // @ts-ignore\r\n                    text: document.getElementById('address1').innerText,\r\n                },\r\n                {\r\n                    // @ts-ignore\r\n                    text: document.getElementById('address2').innerText,\r\n                },\r\n                { text: '\\n' },\r\n                {\r\n                    // @ts-ignore\r\n                    text: document.getElementById('salutation').innerText,\r\n                },\r\n                { text: '\\n' },\r\n                {\r\n                    // @ts-ignore\r\n                    text:\r\n                        'We would like to notify that all the dues of ' +\r\n                        this.name +\r\n                        ' having Employee Id as ' +\r\n                        this.id +\r\n                        ' has been cleared the account is ready to be closed. Please submit this letter with your signature.',\r\n                    alignment: 'justify',\r\n                },\r\n                { text: '\\n' },\r\n                {\r\n                    // @ts-ignore\r\n                    text: document.getElementById('thank').innerText,\r\n                },\r\n                { text: '\\n' },\r\n                {\r\n                    // @ts-ignore\r\n                    text: document.getElementById('bottom1').innerText,\r\n                },\r\n                {\r\n                    // @ts-ignore\r\n                    text: document.getElementById('bottom2').innerText,\r\n                },\r\n                {\r\n                    // @ts-ignore\r\n                    text: document.getElementById('bottom3').innerText,\r\n                },\r\n            ],\r\n            styles: {\r\n                header: {\r\n                    fontSize: 18,\r\n                    bold: true,\r\n                    margin: [0, 0, 0, 10],\r\n                },\r\n            },\r\n        };\r\n        // @ts-ignore\r\n        pdfMake.createPdf(docDefinition).download('Account Closure Letter.pdf');\r\n        this.dialogRef.close(true);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CloseAccountService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getData(text: any): Observable<any> {\r\n        console.log(text);\r\n        const url = 'http://206.189.129.219:8080/getCloseData';\r\n        const data = {\r\n            userId: text,\r\n        };\r\n        return this.http.post<any>(url, data);\r\n    }\r\n    sendData(data: any): Observable<any> {\r\n        console.log(data);\r\n        const url = 'http://206.189.129.219:8080/closeAccount';\r\n        return this.http.post<any>(url, data);\r\n    }\r\n}\r\n","import { CloseAccountService } from './close-account.service';\r\n\r\nexport const services = [CloseAccountService];\r\n\r\nexport * from './close-account.service';\r\n"]}