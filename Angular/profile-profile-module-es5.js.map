{"version":3,"sources":["webpack:///src/app/profile/profile/profile.component.html","webpack:///src/app/profile/profile-routing.module.ts","webpack:///src/app/profile/profile.module.ts","webpack:///src/app/profile/profile/profile.component.scss","webpack:///src/app/profile/profile/profile.component.ts","webpack:///src/app/profile/services/index.ts","webpack:///src/app/profile/services/profile.service.ts"],"names":["routes","path","component","ProfileRoutingModule","imports","forChild","exports","ProfileModule","declarations","providers","ProfileComponent","service","session","fb","url","formData","FormData","employeeForm","group","employeeId","compose","required","employeeName","fatherName","permAddress","check","currAddress","email","mobileNo","min","max","altMobileNo","landlineNo","pattern","pan","aadharNo","user","retrieve","id","getData","subscribe","result","nameData","length","fire","title","text","icon","console","log","name","permanentAddress","currentAddress","mobileNo1","mobileNo2","landline","adharNo","enrollDate","enrollmentDate","error1","event","target","checked","data","userId","father","mobile1","mobile2","enroll","append","JSON","stringify","sendData","then","isConfirm","window","location","reload","files","reader","FileReader","readAsDataURL","onload","e","selector","template","services","ProfileService","httpService","post","headers","providedIn"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["export default \"<sb-layout-dashboard>\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.Update'| translate}}\\\"></sb-dashboard-head>\\n    <hr class=\\\"rounded\\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\n            <sb-card>\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Pages.Update'| translate}}</div>\\n                <div class=\\\"card-body\\\">\\n                    <form [formGroup]=\\\"employeeForm\\\" (ngSubmit)=\\\"send()\\\">\\n                        <table class=\\\"table table-striped table-responsive\\\">\\n                            <tbody>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Image'| translate}}</td>\\n                                <td>\\n                                    <img [src]=\\\"url\\\" height=\\\"200\\\"> <br/>\\n                                    <input type='file' (change)=\\\"onSelectFile($event)\\\">\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.EmployeeNo'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"employeeId\\\" formControlName=\\\"employeeId\\\" required />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('employeeId').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.EmployeeName'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"employeeName\\\" formControlName=\\\"employeeName\\\" required />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('employeeName').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Father'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"fatherName\\\" formControlName=\\\"fatherName\\\" />\\n                                    </label>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.PermAddress'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"permAddress\\\" formControlName=\\\"permAddress\\\" />\\n                                    </label>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.SameAddress'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"checkbox\\\" (click)=\\\"sameAddress($event)\\\" [(ngModel)]=\\\"check\\\" />\\n                                    </label>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.CurrAddress'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"currAddress\\\" value=\\\"{{currAddress}}\\\" formControlName=\\\"currAddress\\\" />\\n                                    </label>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Email'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" formControlName=\\\"email\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('email').hasError('email')\\\">Provide valid email</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.MobNo'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"mobileNo\\\" formControlName=\\\"mobileNo\\\" maxlength=\\\"10\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('mobileNo').hasError('min')\\\">Number should be of 10 digits</div>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('mobileNo').hasError('max')\\\">Number should be of 10 digits</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.AltMobNo'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"altMobileNo\\\" formControlName=\\\"altMobileNo\\\" maxlength=\\\"10\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('altMobileNo').hasError('min')\\\">Number should be of 10 digits</div>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('altMobileNo').hasError('max')\\\">Number should be of 10 digits</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Landline'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"landlineNo\\\" formControlName=\\\"landlineNo\\\" maxlength=\\\"10\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('landlineNo').hasError('pattern')\\\">Invalid Number!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.PAN'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"pan\\\" formControlName=\\\"pan\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('pan').hasError('pattern')\\\">Invalid Number!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Aadhar'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"aadharNo\\\" formControlName=\\\"aadharNo\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('aadharNo').hasError('pattern')\\\">Invalid Number!</div>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!employeeForm.valid\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\n                    </form>\\n                </div>\\n            </sb-card>\\n        </div>\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n    </div>\\n</sb-layout-dashboard>\\n\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProfileComponent } from '@app/profile/profile/profile.component';\n\nconst routes: Routes = [{ path: '', component: ProfileComponent }];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class ProfileRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppCommonModule } from '@app/app-common/app-common.module';\nimport { NavigationModule } from '@app/navigation/navigation.module';\nimport * as service from '@app/upload-all/services';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\n\n@NgModule({\n    declarations: [ProfileComponent],\n    imports: [\n        CommonModule,\n        ProfileRoutingModule,\n        NavigationModule,\n        AppCommonModule,\n        TranslateModule,\n        FormsModule,\n        LayoutDashboardModule,\n        ReactiveFormsModule,\n    ],\n    providers: [...service.services],\n})\nexport class ProfileModule {}\n","export default \"/*img {\\n    height: 100%;\\n    width: 100%;\\n    border-radius: 50%;\\n}\\n.hoverable{\\n    position: relative;\\n    display: block;\\n    cursor: pointer;\\n    height: 50px;\\n    width: 50px;\\n    border: 2px solid #000000;\\n    border-radius: 50%;\\n    margin-top: 15px;\\n    margin-left:5px;\\n}\\n.hoverable .hover-text{\\n    position: absolute;\\n    display: none;\\n    font-size: 10px;\\n    top: 50%;\\n    left:  50%;\\n    transform: translate(-50%,-50%);\\n    z-index: 2;\\n}\\n.hoverable .background{\\n    position: absolute;\\n    display: none;\\n    top: 0;\\n    left:  0;\\n    bottom: 0;\\n    right: 0;\\n    background-color:rgba(255, 255, 255, 0.5);\\n    pointer-events: none;\\n    border-radius: 50%;\\n    z-index: 1;\\n}\\n.hoverable:hover .hover-text{\\n    display: block;\\n}\\n.hoverable:hover .background{\\n    display: block;\\n}\\n\\n#fileInput{\\n    display: none;\\n}*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9wcm9maWxlL0M6XFxVc2Vyc1xcTGVub3ZvXFxEb3dubG9hZHNcXFNvY2lldHlfQmFua2luZy9zcmNcXGFwcFxccHJvZmlsZVxccHJvZmlsZVxccHJvZmlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZmlsZS9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKmltZyB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cbi5ob3ZlcmFibGV7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgYm9yZGVyOiAycHggc29saWQgIzAwMDAwMDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbiAgICBtYXJnaW4tbGVmdDo1cHg7XG59XG4uaG92ZXJhYmxlIC5ob3Zlci10ZXh0e1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAgNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSk7XG4gICAgei1pbmRleDogMjtcbn1cbi5ob3ZlcmFibGUgLmJhY2tncm91bmR7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6ICAwO1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgei1pbmRleDogMTtcbn1cbi5ob3ZlcmFibGU6aG92ZXIgLmhvdmVyLXRleHR7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG4uaG92ZXJhYmxlOmhvdmVyIC5iYWNrZ3JvdW5ke1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4jZmlsZUlucHV0e1xuICAgIGRpc3BsYXk6IG5vbmU7XG59Ki9cbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from '@app/profile/services';\nimport { SessionStorageService } from 'ngx-webstorage';\n// @ts-ignore\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'sb-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n    employeeId: any;\n    employeeName: any;\n    fatherName: any;\n    permAddress: any;\n    currAddress: any;\n    check: any;\n    email: any;\n    mobileNo: any;\n    altMobileNo: any;\n    landlineNo: any;\n    pan: any;\n    aadharNo: any;\n    enrollDate: any;\n    url: string | ArrayBuffer | null = '';\n    formData = new FormData();\n    employeeForm: FormGroup;\n    constructor(\n        public service: ProfileService,\n        public session: SessionStorageService,\n        public fb: FormBuilder\n    ) {\n        this.employeeForm = this.fb.group({\n            employeeId: new FormControl('', Validators.compose([Validators.required])),\n            employeeName: new FormControl('', Validators.compose([Validators.required])),\n            fatherName: new FormControl(''),\n            permAddress: new FormControl(''),\n            check: new FormControl(''),\n            currAddress: new FormControl(''),\n            email: new FormControl('', Validators.compose([Validators.email])),\n            mobileNo: new FormControl(\n                '',\n                Validators.compose([Validators.min(1000000000), Validators.max(9999999999)])\n            ),\n            altMobileNo: new FormControl(\n                '',\n                Validators.compose([Validators.min(1000000000), Validators.max(9999999999)])\n            ),\n            landlineNo: new FormControl(\n                '',\n                Validators.compose([Validators.pattern('^[0-9]d{2,4}-d{6,8}$')])\n            ),\n            pan: new FormControl(\n                '',\n                Validators.compose([Validators.pattern('[A-Z]{5}[0-9]{4}[A-Z]{1}')])\n            ),\n            aadharNo: new FormControl(\n                '',\n                Validators.compose([Validators.pattern('^[2-9]{1}[0-9]{3}\\\\s[0-9]{4}\\\\s[0-9]{4}$')])\n            ),\n        });\n    }\n\n    ngOnInit(): void {\n        this.formData = new FormData();\n        const user = this.session.retrieve('user');\n        this.employeeId = user.id;\n        this.service.getData(this.employeeId).subscribe(\n            result => {\n                if (result.nameData.length === 0) {\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'This user does not exists!',\n                        icon: 'error',\n                    });\n                } else {\n                    console.log(result);\n                    this.employeeName = result.nameData[0].name;\n                    this.fatherName = result.nameData[0].fatherName;\n                    this.permAddress = result.nameData[0].permanentAddress;\n                    this.currAddress = result.nameData[0].currentAddress;\n                    this.email = result.nameData[0].email;\n                    this.mobileNo = result.nameData[0].mobileNo1;\n                    this.altMobileNo = result.nameData[0].mobileNo2;\n                    this.landlineNo = result.nameData[0].landline;\n                    this.pan = result.nameData[0].pan;\n                    this.aadharNo = result.nameData[0].adharNo;\n                    this.enrollDate = result.nameData[0].enrollmentDate;\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n    }\n    sameAddress(event: any) {\n        console.log(event.target.checked);\n        if (event.target.checked) {\n            this.currAddress = this.permAddress;\n        } else {\n            this.currAddress = null;\n        }\n    }\n    send() {\n        const data = {\n            userId: this.employeeId,\n            name: this.employeeName,\n            father: this.fatherName,\n            permanentAddress: this.permAddress,\n            currentAddress: this.currAddress,\n            email: this.email,\n            mobile1: this.mobileNo,\n            mobile2: this.altMobileNo,\n            landline: this.landlineNo,\n            pan: this.pan,\n            adharNo: this.aadharNo,\n            enroll: this.enrollDate,\n        };\n        this.formData.append('data', JSON.stringify(data));\n        this.service.sendData(this.formData).subscribe(\n            result => {\n                if (result.nameData.length === 0) {\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'This user does not exists!',\n                        icon: 'error',\n                    });\n                } else {\n                    Swal.fire({\n                        text: 'Sent!',\n                        icon: 'success',\n                    }).then((isConfirm: any) => {\n                        if (isConfirm) {\n                            this.formData = new FormData();\n                            window.location.reload();\n                        }\n                    });\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n    }\n    onSelectFile(event: any) {\n        if (event.target.files && event.target.files[0]) {\n            const reader = new FileReader();\n\n            reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n            reader.onload = e => {\n                // called once readAsDataURL is completed\n                // @ts-ignore\n                this.url = e.target.result;\n            };\n            // @ts-ignore\n            this.formData.append('file', event.target.files[0], event.target.files[0].name);\n        }\n    }\n}\n","import { ProfileService } from './profile.service';\n\nexport const services = [ProfileService];\n\nexport * from './profile.service';\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProfileService {\n    constructor(private httpService: HttpClient) {}\n    getData(text: any): Observable<any> {\n        console.log(text);\n        const url = 'http://drsunitanayak.com/getUserData';\n        const data = {\n            userId: text,\n        };\n        return this.httpService.post<any>(url, data);\n    }\n    sendData(data: any): Observable<any> {\n        console.log(data);\n        const url = 'http://drsunitanayak.com/updateUserData';\n        const headers = new HttpHeaders();\n        headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Access-Control-Allow-Methods', 'POST,GET,OPTIONS,PUT');\n        headers.append('Accept', 'application/json');\n        headers.append('content-type', 'application/json');\n        return this.httpService.post<any>(url, data, { headers });\n    }\n}\n"]}