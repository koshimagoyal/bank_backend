{"version":3,"sources":["webpack:///src/app/loan-eligibility-table/loan-eligibility-table.component.html","webpack:///src/app/loan-eligibility-table/loan-eligibility-table-routing.module.ts","webpack:///src/app/loan-eligibility-table/loan-eligibility-table.component.scss","webpack:///src/app/loan-eligibility-table/loan-eligibility-table.component.ts","webpack:///src/app/loan-eligibility-table/loan-eligibility-table.module.ts","webpack:///src/app/loan-eligibility-table/services/index.ts","webpack:///src/app/loan-eligibility-table/services/loan-eligible.service.ts"],"names":["routes","path","component","LoanEligibilityTableRoutingModule","imports","forChild","exports","LoanEligibilityTableComponent","session","loanService","eligibleLoan","eligible","loanData","user","retrieve","text","id","getData","subscribe","result","console","log","length","fire","title","icon","body","eligibleNoLoan","eligibleData","i","balance","credit","debit","amt","loanType","personal","eligibleNoOfLoanType","emergency","eligibleNoOfCorpusAmount","eligibleAmount","loan","amount","loanAmount","eligibleLeftAmount","error1","selector","template","LoanEligibilityTableModule","declarations","services","LoanEligibleService","http","url","data","userId","post","providedIn"],"mappings":"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","file":"loan-eligibility-table-loan-eligibility-table-module-es5.js","sourcesContent":["export default \"<sb-layout-emp-dashboard>\\n    <sb-dashboard-head title=\\\"{{'Employee.Pages.Eligible'|translate}}\\\"></sb-dashboard-head>\\n    <hr class=\\\"rounded\\\">\\n    <br>\\n    <div *ngIf=\\\"eligible; else not\\\">\\n        <button type=\\\"button\\\" class=\\\"btn bg-primary btn-style\\\" [routerLink]=\\\"['/apply-loan']\\\">{{'Employee.Pages.Apply'|translate}}</button>\\n    </div>\\n    <ng-template #not>\\n        <div>\\n            <button type=\\\"button\\\" class=\\\"btn bg-primary btn-style\\\" [routerLink]=\\\"['/apply-loan']\\\" disabled>{{'Employee.Pages.Apply'|translate}}</button>\\n        </div>\\n    </ng-template>\\n    <br/><br/><br/>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\n            <sb-card>\\n                <div class=\\\"card-header\\\">\\n                    <fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Employee.Pages.Eligible'|translate}}\\n                </div>\\n                <div class=\\\"card-body table-responsive\\\">\\n                    <table class=\\\"table table-striped\\\">\\n                        <tbody>\\n                        <tr>\\n                            <td>{{'Employee.Personal'| translate}}</td>\\n                            <td>{{personal}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Employee.Emergency'| translate}}</td>\\n                            <td>{{emergency}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Employee.LoanEligible.EligibleAmount'| translate}}</td>\\n                            <td>{{eligibleAmount| indianCurrency}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td>{{'Employee.LoanEligible.Amount'| translate}}</td>\\n                            <td>{{eligibleLeftAmount| indianCurrency}}</td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </sb-card>\\n        </div>\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n    </div>\\n    <ng-container *ngFor=\\\"let val of loanData\\\">\\n        <sb-card>\\n            <div class=\\\"card-header bg-primary headers\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\" style=\\\"margin-top: 10px;\\\">\\n                        <h5><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"rupee-sign\\\"]'></fa-icon>&nbsp;{{'Employee.Loan'| translate}} ({{val.date| date:'dd-MM-yyyy'}})</h5>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        <span class=\\\"float-right\\\" style=\\\"margin: 10px;\\\"><h5>{{val.loanAmount| indianCurrency}}</h5></span>\\n                    </div>\\n                </div>\\n            </div>\\n        </sb-card>\\n    </ng-container>\\n</sb-layout-emp-dashboard>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoanEligibilityTableComponent } from './loan-eligibility-table.component';\n\nconst routes: Routes = [{ path: '', component: LoanEligibilityTableComponent }];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class LoanEligibilityTableRoutingModule {}\n","export default \".headers {\\n  color: white;\\n}\\n\\n.btn-style {\\n  color: white;\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9hbi1lbGlnaWJpbGl0eS10YWJsZS9DOlxcVXNlcnNcXExlbm92b1xcRG93bmxvYWRzXFxTb2NpZXR5X0Jhbmtpbmcvc3JjXFxhcHBcXGxvYW4tZWxpZ2liaWxpdHktdGFibGVcXGxvYW4tZWxpZ2liaWxpdHktdGFibGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2xvYW4tZWxpZ2liaWxpdHktdGFibGUvbG9hbi1lbGlnaWJpbGl0eS10YWJsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLFlBQUE7QUNESjs7QURHQTtFQUNJLFlBQUE7RUFDQSxZQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9sb2FuLWVsaWdpYmlsaXR5LXRhYmxlL2xvYW4tZWxpZ2liaWxpdHktdGFibGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICdzdHlsZXMvdmFyaWFibGVzLnNjc3MnO1xuXG4uaGVhZGVyc3tcbiAgICBjb2xvcjogd2hpdGU7XG59XG4uYnRuLXN0eWxle1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmbG9hdDogcmlnaHQ7XG59XG5cbiIsIi5oZWFkZXJzIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuLXN0eWxlIHtcbiAgY29sb3I6IHdoaXRlO1xuICBmbG9hdDogcmlnaHQ7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { LoanEligibleService } from '@app/loan-eligibility-table/services';\nimport { SessionStorageService } from 'ngx-webstorage';\n// @ts-ignore\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\n\n@Component({\n    selector: 'sb-loan-eligibility-table',\n    templateUrl: './loan-eligibility-table.component.html',\n    styleUrls: ['./loan-eligibility-table.component.scss'],\n})\nexport class LoanEligibilityTableComponent implements OnInit {\n    text: any;\n    loanType: any;\n    eligibleNoLoan: any;\n    personal: any;\n    emergency: any;\n    eligibleAmount: any;\n    eligibleLoan = 0;\n    eligibleLeftAmount: any;\n    eligible = true;\n    loanData = [];\n    constructor(public session: SessionStorageService, private loanService: LoanEligibleService) {}\n\n    ngOnInit() {\n        const user = this.session.retrieve('user');\n        this.text = user.id;\n        this.loanService.getData(this.text).subscribe(\n            result => {\n                console.log(result);\n                if (result.length === 0) {\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'This user does not exists!',\n                        icon: 'error',\n                    });\n                } else {\n                    console.log(result);\n                    console.log(result.body);\n                    console.log(result.loanData);\n                    this.eligibleNoLoan = result.eligibleData;\n                    // tslint:disable-next-line:prefer-for-of\n                    for (let i = 0; i < result.balance.length; i++) {\n                        this.eligibleLoan += result.balance[i].credit - result.balance[i].debit;\n                    }\n                    let amt = 0;\n                    // tslint:disable-next-line:prefer-for-of\n                    for (let i = 0; i < result.eligibleData.length; i++) {\n                        if (result.eligibleData[i].loanType === 'personal')\n                            this.personal = result.eligibleData[i].eligibleNoOfLoanType;\n                        else\n                            this.emergency = result.eligibleData[i].eligibleNoOfLoanType;\n                        if (this.emergency === null) {\n                            this.emergency = 'Multiple Number of Times';\n                        }\n                        amt = result.eligibleData[i].eligibleNoOfCorpusAmount;\n                    }\n                    this.eligibleAmount = amt * this.eligibleLoan;\n                    const loan = result.loanData.length;\n                    this.eligible = loan < this.eligibleLoan;\n                    let amount = 0;\n                    // tslint:disable-next-line:prefer-for-of\n                    for (let i = 0; i < result.loanData.length; i++) {\n                        amount += result.loanData[i].loanAmount;\n                    }\n                    this.eligibleLeftAmount = this.eligibleLoan - amount;\n                    if (this.eligibleLeftAmount < 0) this.eligibleLeftAmount = 0;\n                    this.loanData = result.loanData;\n                    console.log(this.loanData);\n                    console.log(this.eligibleLeftAmount+' '+this.eligibleAmount);\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n        return this.eligible;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AppCommonModule } from '@app/app-common/app-common.module';\nimport { LayoutEmpDashboardModule } from '@app/layout-emp-dashboard/layout-emp-dashboard.module';\nimport { NavigationModule } from '@app/navigation/navigation.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { LoanEligibilityTableRoutingModule } from './loan-eligibility-table-routing.module';\nimport { LoanEligibilityTableComponent } from './loan-eligibility-table.component';\n\n@NgModule({\n    declarations: [LoanEligibilityTableComponent],\n    imports: [\n        CommonModule,\n        LoanEligibilityTableRoutingModule,\n        NavigationModule,\n        TranslateModule,\n        AppCommonModule,\n        LayoutEmpDashboardModule,\n    ],\n})\nexport class LoanEligibilityTableModule {}\n","import { LoanEligibleService } from './loan-eligible.service';\n\nexport const services = [LoanEligibleService];\n\nexport * from './loan-eligible.service';\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LoanEligibleService {\n    constructor(private http: HttpClient) {}\n\n    getData(text: any): Observable<any> {\n        console.log(text);\n        const url = 'http://drsunitanayak.com/getEligibleData';\n        const data = {\n            userId: text,\n        };\n        return this.http.post<any>(url, data);\n    }\n}\n"]}