{"version":3,"sources":["webpack:///src/app/generate-emi/generate-emi.component.html","webpack:///src/app/generate-emi/generate-emi-routing.module.ts","webpack:///src/app/generate-emi/generate-emi.component.scss","webpack:///src/app/generate-emi/generate-emi.component.ts","webpack:///src/app/generate-emi/generate-emi.module.ts","webpack:///src/app/generate-emi/services/generate-emi.service.ts","webpack:///src/app/generate-emi/services/index.ts"],"names":["routes","path","component","GenerateEmiRoutingModule","imports","forChild","exports","moment","MY_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","GenerateEmiComponent","generateService","show","data","fileName","emiDate","mm","value","format","yy","send","month","year","console","log","getData","subscribe","result","loanData","length","i","principle","loanAmount","r","interest","d","loanDuration","emi","Math","pow","push","userId","loanType","EMI","round","toFixed","fire","title","text","icon","error1","element","document","getElementById","ws","json_to_sheet","header","skipHeader","origin","sheet_add_json","h1","h2","h3","h4","h5","wb","book_new","book_append_sheet","normalizedYear","ctrlValue","setValue","normalizedMonth","datepicker","close","selector","template","providers","provide","useClass","deps","useValue","GenerateEmiModule","declarations","GenerateEmiService","httpService","headers","append","url","post","providedIn","services"],"mappings":"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","file":"generate-emi-generate-emi-module-es5.js","sourcesContent":["export default \"<sb-layout-dashboard>\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.Generate' | translate}}\\\"></sb-dashboard-head>\\n    <hr class=\\\"rounded\\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\n            <sb-card>\\n                <div class=\\\"card-header\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\" style=\\\"margin-top: 10px;\\\">\\n                            <fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{\\\"Accountant.Pages.Generate\\\" | translate}}\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                                <input type=\\\"text\\\" placeholder=\\\"Search..\\\" [(ngModel)]=\\\"term\\\"/>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body table-responsive\\\">\\n                    <mat-form-field style=\\\"float: right;\\\">\\n                        <mat-label>{{'Accountant.Tables.Date'| translate}}</mat-label>\\n                        <label>\\n                            <input matInput [matDatepicker]=\\\"ep\\\" [formControl]=\\\"emiDate\\\">\\n                        </label>\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"ep\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #ep\\n                                        startView=\\\"multi-year\\\"\\n                                        (yearSelected)=\\\"chosenAnotherYearHandler($event)\\\"\\n                                        (monthSelected)=\\\"chosenAnotherMonthHandler($event, ep)\\\"\\n                                        panelClass=\\\"example-month-picker\\\">\\n                        </mat-datepicker>\\n                    </mat-form-field>\\n                    <br>\\n                    <br>\\n                    <button (click)=\\\"showTable()\\\" *ngIf=\\\"!show\\\">{{\\\"Accountant.Tables.Show\\\" | translate}}</button>\\n                    <table class=\\\"table table-striped\\\" id=\\\"GenerateTable\\\" *ngIf=\\\"show\\\">\\n                        <thead>\\n                        <tr>\\n                            <th scope=\\\"col\\\">{{\\\"Accountant.Tables.EmployeeNo\\\" | translate}}</th>\\n                            <th scope=\\\"col\\\">{{\\\"Accountant.Tables.Loan\\\" | translate}}</th>\\n                            <th scope=\\\"col\\\">{{\\\"Accountant.Tables.Duration\\\" | translate}}</th>\\n                            <th scope=\\\"col\\\">{{\\\"Accountant.Tables.LoanType\\\" | translate}}</th>\\n                            <th scope=\\\"col\\\"><span>{{\\\"Accountant.Pages.Generate\\\" | translate}}</span></th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr *ngFor=\\\"let val of data | filter: term | paginate: { itemsPerPage:5, currentPage: p} \\\">\\n                            <td>{{ val.userId }}</td>\\n                            <td>{{ val.loanAmount| indianCurrency}}</td>\\n                            <td>{{val.loanDuration}}</td>\\n                            <td>{{ val.loanType}}</td>\\n                            <td>{{val.EMI| indianCurrency}}</td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                    <div class=\\\"row\\\" *ngIf=\\\"show\\\">\\n                        <div class=\\\"col-6\\\">\\n                            <div class=\\\"pagination\\\">\\n                                <pagination-controls (pageChange)=\\\"p=$event\\\"></pagination-controls>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-6 ml-auto\\\">\\n                            <button (click)=\\\"export()\\\">{{\\\"Accountant.Tables.Download\\\" | translate}}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </sb-card>\\n        </div>\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n    </div>\\n</sb-layout-dashboard>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GenerateEmiComponent } from './generate-emi.component';\n\nconst routes: Routes = [{ path: '', component: GenerateEmiComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GenerateEmiRoutingModule { }\n","export default \".example-month-picker .mat-calendar-period-button {\\n  pointer-events: none;\\n}\\n\\n.example-month-picker .mat-calendar-arrow {\\n  display: none;\\n}\\n\\n/* Style the search box inside the navigation bar */\\n\\n.card-header input[type=text] {\\n  border-radius: 5px;\\n  float: right;\\n  padding: 6px;\\n  margin-right: 16px;\\n  font-size: 17px;\\n  border: 1px solid #000000;\\n}\\n\\n/* When the screen is less than 600px wide, stack the links and the search field vertically instead of horizontally */\\n\\n@media screen and (max-width: 600px) {\\n  .card-header a, .card-header input[type=text] {\\n    border-radius: 5px;\\n    float: none;\\n    display: block;\\n    text-align: left;\\n    width: 100%;\\n    margin: 0;\\n    padding: 14px;\\n  }\\n\\n  .card-header input[type=text] {\\n    border: 1px solid #ccc;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2VuZXJhdGUtZW1pL0M6XFxVc2Vyc1xcTGVub3ZvXFxEb3dubG9hZHNcXFNvY2lldHlfQmFua2luZy9zcmNcXGFwcFxcZ2VuZXJhdGUtZW1pXFxnZW5lcmF0ZS1lbWkuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2dlbmVyYXRlLWVtaS9nZW5lcmF0ZS1lbWkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxvQkFBQTtBQ0NKOztBREVBO0VBQ0ksYUFBQTtBQ0NKOztBRENBLG1EQUFBOztBQUNBO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQUFBO0FDRUo7O0FERUEscUhBQUE7O0FBQ0E7RUFDSTtJQUNJLGtCQUFBO0lBQ0EsV0FBQTtJQUNBLGNBQUE7SUFDQSxnQkFBQTtJQUNBLFdBQUE7SUFDQSxTQUFBO0lBQ0EsYUFBQTtFQ0NOOztFRENFO0lBQ0ksc0JBQUE7RUNFTjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvZ2VuZXJhdGUtZW1pL2dlbmVyYXRlLWVtaS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLW1vbnRoLXBpY2tlciAubWF0LWNhbGVuZGFyLXBlcmlvZC1idXR0b24ge1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uZXhhbXBsZS1tb250aC1waWNrZXIgLm1hdC1jYWxlbmRhci1hcnJvdyB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cbi8qIFN0eWxlIHRoZSBzZWFyY2ggYm94IGluc2lkZSB0aGUgbmF2aWdhdGlvbiBiYXIgKi9cbi5jYXJkLWhlYWRlciBpbnB1dFt0eXBlPXRleHRdIHtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHBhZGRpbmc6IDZweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDAwMDA7XG59XG5cblxuLyogV2hlbiB0aGUgc2NyZWVuIGlzIGxlc3MgdGhhbiA2MDBweCB3aWRlLCBzdGFjayB0aGUgbGlua3MgYW5kIHRoZSBzZWFyY2ggZmllbGQgdmVydGljYWxseSBpbnN0ZWFkIG9mIGhvcml6b250YWxseSAqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAuY2FyZC1oZWFkZXIgYSwgLmNhcmQtaGVhZGVyIGlucHV0W3R5cGU9dGV4dF0ge1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICAgIGZsb2F0OiBub25lO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMTRweDtcbiAgICB9XG4gICAgLmNhcmQtaGVhZGVyIGlucHV0W3R5cGU9dGV4dF0ge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIH1cbn1cbiIsIi5leGFtcGxlLW1vbnRoLXBpY2tlciAubWF0LWNhbGVuZGFyLXBlcmlvZC1idXR0b24ge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLmV4YW1wbGUtbW9udGgtcGlja2VyIC5tYXQtY2FsZW5kYXItYXJyb3cge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBTdHlsZSB0aGUgc2VhcmNoIGJveCBpbnNpZGUgdGhlIG5hdmlnYXRpb24gYmFyICovXG4uY2FyZC1oZWFkZXIgaW5wdXRbdHlwZT10ZXh0XSB7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBwYWRkaW5nOiA2cHg7XG4gIG1hcmdpbi1yaWdodDogMTZweDtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwO1xufVxuXG4vKiBXaGVuIHRoZSBzY3JlZW4gaXMgbGVzcyB0aGFuIDYwMHB4IHdpZGUsIHN0YWNrIHRoZSBsaW5rcyBhbmQgdGhlIHNlYXJjaCBmaWVsZCB2ZXJ0aWNhbGx5IGluc3RlYWQgb2YgaG9yaXpvbnRhbGx5ICovXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xuICAuY2FyZC1oZWFkZXIgYSwgLmNhcmQtaGVhZGVyIGlucHV0W3R5cGU9dGV4dF0ge1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBmbG9hdDogbm9uZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAxNHB4O1xuICB9XG5cbiAgLmNhcmQtaGVhZGVyIGlucHV0W3R5cGU9dGV4dF0ge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIH1cbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {\n    MAT_MOMENT_DATE_ADAPTER_OPTIONS,\n    MomentDateAdapter,\n} from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatDatepicker } from '@angular/material/datepicker';\nimport { GenerateEmiService } from '@app/generate-emi/services';\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport { default as _rollupMoment, Moment } from 'moment';\n// @ts-ignore\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport * as XLSX from 'xlsx';\nconst moment = _rollupMoment || _moment;\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'MM/YYYY',\n    },\n    display: {\n        dateInput: 'MM/YYYY',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'sb-generate-emi',\n    templateUrl: './generate-emi.component.html',\n    styleUrls: ['./generate-emi.component.scss'],\n    providers: [\n        {\n            provide: DateAdapter,\n            useClass: MomentDateAdapter,\n            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\n        },\n\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n    ],\n})\nexport class GenerateEmiComponent implements OnInit {\n    p: any;\n    show = false;\n    term: any;\n    data = [];\n    fileName = 'EMI to be deducted.xlsx';\n    emiDate = new FormControl(moment());\n    showTable() {\n        const mm = this.emiDate.value.format('MM');\n        const yy = this.emiDate.value.format('YYYY');\n        const send = {\n            month: mm,\n            year: yy,\n        };\n        console.log(send);\n        this.generateService.getData(send).subscribe(\n            result => {\n                console.log(result);\n                if (result.loanData.length !== 0) {\n                    // tslint:disable-next-line:prefer-for-of\n                    for (let i = 0; i < result.loanData.length; i++) {\n                        const principle = result.loanData[i].loanAmount;\n                        const r = result.loanData[i].interest / 1200;\n                        const d = result.loanData[i].loanDuration;\n                        // @ts-ignore\n                        const emi = [principle * r * Math.pow(1 + r, d)] / [Math.pow(1 + r, d)-1];\n                        this.data.push({\n                            // @ts-ignore\n                            userId: result.loanData[i].userId,\n                            // @ts-ignore\n                            loanAmount: result.loanData[i].loanAmount,\n                            // @ts-ignore\n                            loanDuration: result.loanData[i].loanDuration,\n                            // @ts-ignore\n                            loanType: result.loanData[i].loanType,\n                            // @ts-ignore\n                            EMI: (Math.round(emi * 100) / 100).toFixed(0),\n                        });\n                    }\n                    this.show = true;\n                } else {\n                    this.show = false;\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'No Data exists!',\n                        icon: 'error',\n                    });\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n        console.log(this.data);\n        return this.data;\n    }\n    export(): void {\n        const element = document.getElementById('GenerateTable');\n        /* generate worksheet */\n        // @ts-ignore\n        const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.data, {\n            header: ['userId', 'loanAmount', 'loanDuration', 'loanType', 'EMI'],\n            skipHeader: true,\n            // @ts-ignore\n            origin: 'A4',\n        });\n        XLSX.utils.sheet_add_json(\n            ws,\n            [{ 'Month and Year': 'Month and Year', 'Date': this.emiDate.value.format('MM-YYYY') }],\n            {\n                header: ['Month and Year', 'Date'],\n                skipHeader: true,\n                origin: 'A1',\n            }\n        );\n        XLSX.utils.sheet_add_json(\n            ws,\n            [\n                {\n                    h1: 'Employee Id',\n                    h2: 'Loan Amount (in INR)',\n                    h3: 'Loan Duration (in Months)',\n                    h4: 'Loan Type',\n                    h5: 'EMI to be deducted(in INR)',\n                },\n            ],\n            {\n                header: ['h1', 'h2', 'h3', 'h4', 'h5'],\n                skipHeader: true,\n                origin: 'A3',\n            }\n        );\n        /* generate workbook and add the worksheet */\n        const wb: XLSX.WorkBook = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n        /* save to file */\n        XLSX.writeFile(wb, this.fileName);\n    }\n    constructor(private generateService: GenerateEmiService) {}\n    chosenAnotherYearHandler(normalizedYear: Moment) {\n        const ctrlValue = this.emiDate.value;\n        ctrlValue.year(normalizedYear.year());\n        this.emiDate.setValue(ctrlValue);\n    }\n\n    chosenAnotherMonthHandler(normalizedMonth: Moment, datepicker: MatDatepicker<Moment>) {\n        const ctrlValue = this.emiDate.value;\n        ctrlValue.month(normalizedMonth.month());\n        this.emiDate.setValue(ctrlValue);\n        datepicker.close();\n        this.show = false;\n    }\n    ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DecimalPipe } from '@angular/common';\n\nimport { GenerateEmiRoutingModule } from './generate-emi-routing.module';\nimport { GenerateEmiComponent } from './generate-emi.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppCommonModule } from '@app/app-common/app-common.module';\nimport { NavigationModule } from '@app/navigation/navigation.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\n\n\n@NgModule({\n  declarations: [GenerateEmiComponent],\n    imports: [\n        CommonModule,\n        GenerateEmiRoutingModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n        TranslateModule,\n        Ng2SearchPipeModule,\n        NgxPaginationModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDatepickerModule,\n        LayoutDashboardModule,\n    ],\n    providers: [\n        DecimalPipe,\n    ],\n    exports: [],\n})\nexport class GenerateEmiModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GenerateEmiService {\n    constructor(private httpService: HttpClient) {}\n\n    getData(data: any): Observable<any> {\n        const headers = new HttpHeaders();\n        headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Access-Control-Allow-Methods', 'POST,GET,OPTIONS,PUT');\n        headers.append('Accept', 'application/json');\n        headers.append('content-type', 'application/json');\n        const url = 'http://206.189.129.219:8080/generateEMI';\n        return this.httpService.post(url, data, { headers });\n    }\n}\n","import { GenerateEmiService } from './generate-emi.service';\n\nexport const services = [GenerateEmiService];\n\nexport * from './generate-emi.service';\n"]}