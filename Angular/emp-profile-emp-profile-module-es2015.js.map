{"version":3,"sources":["./src/app/emp-profile/emp-profile/emp-profile.component.html","./src/app/emp-profile/emp-profile-routing.module.ts","./src/app/emp-profile/emp-profile.module.ts","./src/app/emp-profile/emp-profile/emp-profile.component.scss","./src/app/emp-profile/emp-profile/emp-profile.component.ts","./src/app/emp-profile/services/index.ts","./src/app/emp-profile/services/profile.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,4HAA6D,sCAAsC,yTAAyT,sCAAsC,+TAA+T,sCAAsC,wWAAwW,2CAA2C,+jBAA+jB,6CAA6C,mkBAAmkB,uCAAuC,qZAAqZ,4CAA4C,uZAAuZ,4CAA4C,qZAAqZ,4CAA4C,6LAA6L,aAAa,uOAAuO,sCAAsC,6iBAA6iB,sCAAsC,4vBAA4vB,yCAAyC,wwBAAwwB,yCAAyC,4kBAA4kB,oCAAoC,siBAAsiB,uCAAuC,0oBAA0oB,uCAAuC,4MAA4M,E;;;;;;;;;;;;;;;;;;;ACAr3Q;AACc;AACkC;AAEzF,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sGAAmB,EAAE,CAAC,CAAC;AAMtE,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVW;AACN;AACyB;AACE;AACC;AACjB;AACE;AAEiB;AACG;AACuB;AAgBjG,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;AAAnB,gBAAgB;IAd5B,8DAAQ,CAAC;QACN,YAAY,EAAE,CAAC,sFAAmB,CAAC;QACnC,OAAO,EAAE;YACL,4DAAY;YACZ,mFAAuB;YACvB,kFAAgB;YAChB,iFAAe;YACf,mEAAe;YACf,0DAAW;YACX,+GAAwB;YACxB,kEAAmB;SACtB;QACD,SAAS,EAAE,CAAC,GAAG,iEAAgB,CAAC;KACnC,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;AC1B7B;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;;;;;;;;;;;ACAtL;AACS;AACJ;AACvD,aAAa;AACsC;AAC8B;AAOjF,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAiB5B,YACW,OAAuB,EACvB,OAA8B,EAC9B,EAAe;QAFf,YAAO,GAAP,OAAO,CAAgB;QACvB,YAAO,GAAP,OAAO,CAAuB;QAC9B,OAAE,GAAF,EAAE,CAAa;QAN1B,QAAG,GAAgC,EAAE,CAAC;QACtC,aAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAOtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1E,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5E,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAClE,QAAQ,EAAE,IAAI,0DAAW,CACrB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAC/E;YACD,WAAW,EAAE,IAAI,0DAAW,CACxB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAC/E;YACD,UAAU,EAAE,IAAI,0DAAW,CACvB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,CACnE;YACD,GAAG,EAAE,IAAI,0DAAW,CAChB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC,CACvE;YACD,QAAQ,EAAE,IAAI,0DAAW,CACrB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAC,CAAC,CACvF;SACJ,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC3C,MAAM,CAAC,EAAE;YACL,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC9B,sEAAI,CAAC,IAAI,CAAC;oBACN,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE,4BAA4B;oBAClC,IAAI,EAAE,OAAO;iBAChB,CAAC,CAAC;aACN;iBAAM;gBACH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC5C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAChD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC;gBACvD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;gBACrD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC7C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAChD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAC9C,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC3C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;aACvD;QACL,CAAC,EACD,MAAM,CAAC,EAAE;YACL,sEAAI,CAAC,IAAI,CAAC;gBACN,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,OAAO;aAChB,CAAC,CAAC;QACP,CAAC,CACJ,CAAC;IACN,CAAC;IACD,WAAW,CAAC,KAAU;QAClB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SACvC;aAAM;YACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;IACL,CAAC;IACD,IAAI;QACA,MAAM,IAAI,GAAG;YACT,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,gBAAgB,EAAE,IAAI,CAAC,WAAW;YAClC,cAAc,EAAE,IAAI,CAAC,WAAW;YAChC,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,IAAI,CAAC,QAAQ;YACtB,OAAO,EAAE,IAAI,CAAC,WAAW;YACzB,QAAQ,EAAE,IAAI,CAAC,UAAU;YACzB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,OAAO,EAAE,IAAI,CAAC,QAAQ;YACtB,MAAM,EAAE,IAAI,CAAC,UAAU;SAC1B,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC1C,MAAM,CAAC,EAAE;YACL,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC9B,sEAAI,CAAC,IAAI,CAAC;oBACN,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE,4BAA4B;oBAClC,IAAI,EAAE,OAAO;iBAChB,CAAC,CAAC;aACN;iBAAM;gBACH,sEAAI,CAAC,IAAI,CAAC;oBACN,IAAI,EAAE,OAAO;oBACb,IAAI,EAAE,SAAS;iBAClB,CAAC,CAAC,IAAI,CAAC,CAAC,SAAc,EAAE,EAAE;oBACvB,IAAI,SAAS,EAAE;wBACX,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;wBAC/B,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;qBAC5B;gBACL,CAAC,CAAC,CAAC;aACN;QACL,CAAC,EACD,MAAM,CAAC,EAAE;YACL,sEAAI,CAAC,IAAI,CAAC;gBACN,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,OAAO;aAChB,CAAC,CAAC;QACP,CAAC,CACJ,CAAC;IACN,CAAC;IACD,YAAY,CAAC,KAAU;QACnB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC7C,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAEhC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,wBAAwB;YAErE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;gBAChB,yCAAyC;gBACzC,aAAa;gBACb,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YAC/B,CAAC,CAAC;YACF,aAAa;YACb,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACnF;IACL,CAAC;CACJ;;YA3IuB,wEAAc;YACd,oEAAqB;YAC1B,0DAAW;;AApBjB,mBAAmB;IAL/B,+DAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,yPAA2C;;KAE9C,CAAC;mFAmBsB,wEAAc;QACd,oEAAqB;QAC1B,0DAAW;GApBjB,mBAAmB,CA6J/B;AA7J+B;;;;;;;;;;;;;;;;;;;;ACZmB;AAE5C,MAAM,QAAQ,GAAG,CAAC,+DAAc,CAAC,CAAC;AAEP;;;;;;;;;;;;;;;;;;;ACJ6B;AACpB;AAM3C,IAAa,cAAc,GAA3B,MAAa,cAAc;IACvB,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IAAG,CAAC;IAC/C,OAAO,CAAC,IAAS;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,GAAG,GAAG,2CAA2C,CAAC;QACxD,MAAM,IAAI,GAAG;YACT,MAAM,EAAE,IAAI;SACf,CAAC;QACF,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAM,GAAG,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IACD,QAAQ,CAAC,IAAS;QACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,GAAG,GAAG,8CAA8C,CAAC;QAC3D,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAClC,OAAO,CAAC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,8BAA8B,EAAE,sBAAsB,CAAC,CAAC;QACvE,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAC7C,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAM,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;IAC9D,CAAC;CACJ;;YAnBoC,+DAAU;;AADlC,cAAc;IAH1B,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;mFAEmC,+DAAU;GADlC,cAAc,CAoB1B;AApB0B","file":"emp-profile-emp-profile-module-es2015.js","sourcesContent":["export default \"<sb-layout-emp-dashboard>\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.Update'| translate}}\\\"></sb-dashboard-head>\\n    <hr class=\\\"rounded\\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\n            <sb-card>\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Pages.Update'| translate}}</div>\\n                <div class=\\\"card-body\\\">\\n                    <form [formGroup]=\\\"employeeForm\\\" (ngSubmit)=\\\"send()\\\">\\n                        <table class=\\\"table table-striped table-responsive\\\">\\n                            <tbody>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Image'| translate}}</td>\\n                                <td>\\n                                    <img [src]=\\\"url\\\" height=\\\"200\\\"> <br/>\\n                                    <input type='file' (change)=\\\"onSelectFile($event)\\\">\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.EmployeeNo'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"employeeId\\\" formControlName=\\\"employeeId\\\" required />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('employeeId').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.EmployeeName'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"employeeName\\\" formControlName=\\\"employeeName\\\" required />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('employeeName').hasError('required')\\\">Required!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Father'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"fatherName\\\" formControlName=\\\"fatherName\\\" />\\n                                    </label>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.PermAddress'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"permAddress\\\" formControlName=\\\"permAddress\\\" />\\n                                    </label>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.SameAddress'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"checkbox\\\" (click)=\\\"sameAddress($event)\\\" [(ngModel)]=\\\"check\\\" />\\n                                    </label>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.CurrAddress'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"currAddress\\\" value=\\\"{{currAddress}}\\\" formControlName=\\\"currAddress\\\" />\\n                                    </label>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Email'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" formControlName=\\\"email\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('email').hasError('email')\\\">Provide valid email</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.MobNo'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"mobileNo\\\" formControlName=\\\"mobileNo\\\" maxlength=\\\"10\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('mobileNo').hasError('min')\\\">Number should be of 10 digits</div>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('mobileNo').hasError('max')\\\">Number should be of 10 digits</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.AltMobNo'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"altMobileNo\\\" formControlName=\\\"altMobileNo\\\" maxlength=\\\"10\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('altMobileNo').hasError('min')\\\">Number should be of 10 digits</div>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('altMobileNo').hasError('max')\\\">Number should be of 10 digits</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Landline'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"landlineNo\\\" formControlName=\\\"landlineNo\\\" maxlength=\\\"10\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('landlineNo').hasError('pattern')\\\">Invalid Number!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.PAN'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"pan\\\" formControlName=\\\"pan\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('pan').hasError('pattern')\\\">Invalid Number!</div>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td>{{'Accountant.Tables.Aadhar'| translate}}</td>\\n                                <td>\\n                                    <label>\\n                                        <input type=\\\"number\\\" [(ngModel)]=\\\"aadharNo\\\" formControlName=\\\"aadharNo\\\" />\\n                                    </label>\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('aadharNo').hasError('pattern')\\\">Invalid Number!</div>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!employeeForm.valid\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\n                    </form>\\n                </div>\\n            </sb-card>\\n        </div>\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\n    </div>\\n</sb-layout-emp-dashboard>\\n\\n\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmpProfileComponent } from '@app/emp-profile/emp-profile/emp-profile.component';\n\nconst routes: Routes = [{ path: '', component: EmpProfileComponent }];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class EmpProfileRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppCommonModule } from '@app/app-common/app-common.module';\nimport { NavigationModule } from '@app/navigation/navigation.module';\nimport * as service from '@app/upload-all/services';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { EmpProfileRoutingModule } from './emp-profile-routing.module';\nimport { EmpProfileComponent } from './emp-profile/emp-profile.component';\nimport { LayoutEmpDashboardModule } from '@app/layout-emp-dashboard/layout-emp-dashboard.module';\n\n@NgModule({\n    declarations: [EmpProfileComponent],\n    imports: [\n        CommonModule,\n        EmpProfileRoutingModule,\n        NavigationModule,\n        AppCommonModule,\n        TranslateModule,\n        FormsModule,\n        LayoutEmpDashboardModule,\n        ReactiveFormsModule,\n    ],\n    providers: [...service.services],\n})\nexport class EmpProfileModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcC1wcm9maWxlL2VtcC1wcm9maWxlL2VtcC1wcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from '@app/emp-profile/services';\nimport { SessionStorageService } from 'ngx-webstorage';\n// @ts-ignore\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'sb-emp-profile',\n    templateUrl: './emp-profile.component.html',\n    styleUrls: ['./emp-profile.component.scss'],\n})\nexport class EmpProfileComponent implements OnInit {\n    employeeId: any;\n    employeeName: any;\n    fatherName: any;\n    permAddress: any;\n    currAddress: any;\n    check: any;\n    email: any;\n    mobileNo: any;\n    altMobileNo: any;\n    landlineNo: any;\n    pan: any;\n    aadharNo: any;\n    enrollDate: any;\n    url: string | ArrayBuffer | null = '';\n    formData = new FormData();\n    employeeForm: FormGroup;\n    constructor(\n        public service: ProfileService,\n        public session: SessionStorageService,\n        public fb: FormBuilder\n    ) {\n        this.employeeForm = this.fb.group({\n            employeeId: new FormControl('', Validators.compose([Validators.required])),\n            employeeName: new FormControl('', Validators.compose([Validators.required])),\n            fatherName: new FormControl(''),\n            permAddress: new FormControl(''),\n            check: new FormControl(''),\n            currAddress: new FormControl(''),\n            email: new FormControl('', Validators.compose([Validators.email])),\n            mobileNo: new FormControl(\n                '',\n                Validators.compose([Validators.min(1000000000), Validators.max(9999999999)])\n            ),\n            altMobileNo: new FormControl(\n                '',\n                Validators.compose([Validators.min(1000000000), Validators.max(9999999999)])\n            ),\n            landlineNo: new FormControl(\n                '',\n                Validators.compose([Validators.pattern('^[0-9]d{2,4}-d{6,8}$')])\n            ),\n            pan: new FormControl(\n                '',\n                Validators.compose([Validators.pattern('[A-Z]{5}[0-9]{4}[A-Z]{1}')])\n            ),\n            aadharNo: new FormControl(\n                '',\n                Validators.compose([Validators.pattern('^[2-9]{1}[0-9]{3}\\\\s[0-9]{4}\\\\s[0-9]{4}$')])\n            ),\n        });\n    }\n\n    ngOnInit(): void {\n        this.formData = new FormData();\n        const user = this.session.retrieve('user');\n        this.employeeId = user.id;\n        this.service.getData(this.employeeId).subscribe(\n            result => {\n                if (result.nameData.length === 0) {\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'This user does not exists!',\n                        icon: 'error',\n                    });\n                } else {\n                    console.log(result);\n                    this.employeeName = result.nameData[0].name;\n                    this.fatherName = result.nameData[0].fatherName;\n                    this.permAddress = result.nameData[0].permanentAddress;\n                    this.currAddress = result.nameData[0].currentAddress;\n                    this.email = result.nameData[0].email;\n                    this.mobileNo = result.nameData[0].mobileNo1;\n                    this.altMobileNo = result.nameData[0].mobileNo2;\n                    this.landlineNo = result.nameData[0].landline;\n                    this.pan = result.nameData[0].pan;\n                    this.aadharNo = result.nameData[0].adharNo;\n                    this.enrollDate = result.nameData[0].enrollmentDate;\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n    }\n    sameAddress(event: any) {\n        console.log(event.target.checked);\n        if (event.target.checked) {\n            this.currAddress = this.permAddress;\n        } else {\n            this.currAddress = null;\n        }\n    }\n    send() {\n        const data = {\n            userId: this.employeeId,\n            name: this.employeeName,\n            father: this.fatherName,\n            permanentAddress: this.permAddress,\n            currentAddress: this.currAddress,\n            email: this.email,\n            mobile1: this.mobileNo,\n            mobile2: this.altMobileNo,\n            landline: this.landlineNo,\n            pan: this.pan,\n            adharNo: this.aadharNo,\n            enroll: this.enrollDate,\n        };\n        this.formData.append('data', JSON.stringify(data));\n        this.service.sendData(this.formData).subscribe(\n            result => {\n                if (result.nameData.length === 0) {\n                    Swal.fire({\n                        title: 'Oops!',\n                        text: 'This user does not exists!',\n                        icon: 'error',\n                    });\n                } else {\n                    Swal.fire({\n                        text: 'Sent!',\n                        icon: 'success',\n                    }).then((isConfirm: any) => {\n                        if (isConfirm) {\n                            this.formData = new FormData();\n                            window.location.reload();\n                        }\n                    });\n                }\n            },\n            error1 => {\n                Swal.fire({\n                    title: 'Oops!',\n                    text: 'Try again!',\n                    icon: 'error',\n                });\n            }\n        );\n    }\n    onSelectFile(event: any) {\n        if (event.target.files && event.target.files[0]) {\n            const reader = new FileReader();\n\n            reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n            reader.onload = e => {\n                // called once readAsDataURL is completed\n                // @ts-ignore\n                this.url = e.target.result;\n            };\n            // @ts-ignore\n            this.formData.append('file', event.target.files[0], event.target.files[0].name);\n        }\n    }\n}\n","import { ProfileService } from './profile.service';\n\nexport const services = [ProfileService];\n\nexport * from './profile.service';\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProfileService {\n    constructor(private httpService: HttpClient) {}\n    getData(text: any): Observable<any> {\n        console.log(text);\n        const url = 'http://drsunitanayak.com:8080/getUserData';\n        const data = {\n            userId: text,\n        };\n        return this.httpService.post<any>(url, data);\n    }\n    sendData(data: any): Observable<any> {\n        console.log(data);\n        const url = 'http://drsunitanayak.com:8080/updateUserData';\n        const headers = new HttpHeaders();\n        headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Access-Control-Allow-Methods', 'POST,GET,OPTIONS,PUT');\n        headers.append('Accept', 'application/json');\n        headers.append('content-type', 'application/json');\n        return this.httpService.post<any>(url, data, { headers });\n    }\n}\n"],"sourceRoot":"webpack:///"}