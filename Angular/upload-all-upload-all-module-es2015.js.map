{"version":3,"sources":["./src/app/upload-all/dialog/dialog.component.html","./src/app/upload-all/upload-all.component.html","./src/app/upload-all/dialog/dialog.component.scss","./src/app/upload-all/dialog/dialog.component.ts","./src/app/upload-all/upload-all-routing.module.ts","./src/app/upload-all/upload-all.component.scss","./src/app/upload-all/upload-all.component.ts","./src/app/upload-all/upload-all.module.ts"],"names":[],"mappings":"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","file":"upload-all-upload-all-module-es2015.js","sourcesContent":["export default \"<div>\\r\\n    <h1 mat-dialog-title align=\\\"center\\\" *ngIf=\\\"category == 'Loan Disbursal Records'\\\">Loan Disbursal Records</h1>\\r\\n    <h1 mat-dialog-title align=\\\"center\\\" *ngIf=\\\"category == 'All Cash Transactions'\\\">All Cash Transactions</h1>\\r\\n    <h1 mat-dialog-title align=\\\"center\\\" *ngIf=\\\"category == 'All Cheque Transactions'\\\">All Cheque Transactions</h1>\\r\\n    <h1 mat-dialog-title align=\\\"center\\\" *ngIf=\\\"category == 'Credit Transactions'\\\">Credit Transactions</h1>\\r\\n    <h1 mat-dialog-title align=\\\"center\\\" *ngIf=\\\"category == 'Debit Transactions'\\\">Debit Transactions</h1>\\r\\n    <h1 mat-dialog-title align=\\\"center\\\" *ngIf=\\\"category == 'Expense Deductions'\\\">Expense Deductions</h1>\\r\\n    <h1 mat-dialog-title align=\\\"center\\\" *ngIf=\\\"category == 'Credit+Debit+Expense Transactions'\\\">Credit+Debit+Expense Transactions</h1>\\r\\n    <mat-dialog-content class=\\\"mat-typography\\\">\\r\\n        <br>\\r\\n        <table id=\\\"tab\\\" class=\\\"table table-borderless text-center\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th>Start Date</th>\\r\\n                <th>End Date</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr>\\r\\n                <td id=\\\"start\\\">{{start| date:'dd-MM-yyyy'}}</td>\\r\\n                <td id=\\\"end\\\">{{end| date:'dd-MM-yyyy'}}</td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n        <br>\\r\\n        <ng-container *ngIf=\\\"category == 'Loan Disbursal Records'\\\">\\r\\n            <h1>Loan Details</h1>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th>Loan Date</th>\\r\\n                    <th>Loan Amount</th>\\r\\n                    <th>Loan Duration</th>\\r\\n                    <th>Loan Type</th>\\r\\n                    <th>Close Loan</th>\\r\\n                    <th>Closure Status</th>\\r\\n                    <th>Date of Loan Closure</th>\\r\\n                    <th>User Id</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let data of loanData;\\\">\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"isDate(data.loanData.date); else notDate\\\">{{data.loanData.date| date:'dd-MM-yyyy'}}</td>\\r\\n                    <ng-template #notDate>\\r\\n                        <td>{{data.loanData.date}}</td>\\r\\n                    </ng-template>\\r\\n                    <td *ngIf=\\\"data.loanData.loanAmount; else not\\\">{{data.loanData.loanAmount| indianCurrency}}</td>\\r\\n                    <td *ngIf=\\\"data.loanData.loanDuration; else not\\\">{{data.loanData.loanDuration}}</td>\\r\\n                    <td *ngIf=\\\"data.loanData.loanType; else not\\\">{{data.loanData.loanType}}</td>\\r\\n                    <td *ngIf=\\\"data.loanData.closeLoan; else not\\\">{{data.loanData.closeLoan}}</td>\\r\\n                    <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\r\\n                    <td *ngIf=\\\"isDate(data.loanData.dateOfClosure); else notDate\\\">{{data.loanData.dateOfClosure| date:'dd-MM-yyyy'}}</td>\\r\\n                    <ng-template #notDate>\\r\\n                        <td>{{data.loanData.dateOfClosure}}</td>\\r\\n                    </ng-template>\\r\\n                    <td *ngIf=\\\"data.loanData.userId; else not\\\">{{data.loanData.userId}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"data.loanBook\\\" align=\\\"center\\\" colspan=\\\"8\\\">\\r\\n                        <h3 style=\\\"font-weight: bold\\\">EMI Details</h3>\\r\\n                        <table style=\\\"width: 100%;\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width: 16.66%;\\\">EMI Date</th>\\r\\n                                <th style=\\\"width: 60%;\\\">Particulars</th>\\r\\n                                <th>EMI Paid</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr *ngFor=\\\"let value of data.loanBook\\\">\\r\\n                                <td *ngIf=\\\"isDate(value.date); else notDate\\\">{{value.date}}</td>\\r\\n                                <ng-template #notDate>\\r\\n                                    <td>{{value.date}}</td>\\r\\n                                </ng-template>\\r\\n                                <td class=\\\"col-5\\\" *ngIf=\\\"value.particulars; else not\\\">{{value.particulars}}</td>\\r\\n                                <td *ngIf=\\\"value.credit; else not\\\">{{value.credit| indianCurrency}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"data.closeData && data.closeData[0].mode==='Cash';else cheque\\\" align=\\\"center\\\" colspan=\\\"8\\\">\\r\\n                        <h3 style=\\\"font-weight: bold\\\">Loan Closure Details</h3>\\r\\n                        <table style=\\\"width: 100%;\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width: 16.66%;\\\">Date</th>\\r\\n                                <th>Loan Status</th>\\r\\n                                <th>Mode of Payment</th>\\r\\n                                <th>Paid Amount</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</td>\\r\\n                                <ng-template #notDate>\\r\\n                                    <td>{{data.closeData[0].date}}</td>\\r\\n                                </ng-template>\\r\\n                                <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\r\\n                                <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\r\\n                                <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                    <ng-template #cheque>\\r\\n                        <td *ngIf=\\\"data.closeData && data.closeData[0].mode==='Cheque';\\\" align=\\\"center\\\" colspan=\\\"8\\\">\\r\\n                            <h3 style=\\\"font-weight: bold\\\">Loan Closure Details</h3>\\r\\n                            <table style=\\\"width: 100%;\\\">\\r\\n                                <thead>\\r\\n                                <tr>\\r\\n                                    <th style=\\\"width: 16.66%;\\\">Date</th>\\r\\n                                    <th>Loan Status</th>\\r\\n                                    <th>Mode of Payment</th>\\r\\n                                    <th>Paid Amount</th>\\r\\n                                    <th>Cheque Date</th>\\r\\n                                    <th>Bank Name</th>\\r\\n                                    <th>Cheque Number</th>\\r\\n                                </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                <tr>\\r\\n                                    <td *ngIf=\\\"isDate(data.closeData[0].date); else notDate\\\">{{data.closeData[0].date| date:'dd-MM-yyyy'}}</td>\\r\\n                                    <ng-template #notDate>\\r\\n                                        <td>{{data.closeData[0].date}}</td>\\r\\n                                    </ng-template>\\r\\n                                    <td *ngIf=\\\"data.loanData.closeStatus; else not\\\">{{data.loanData.closeStatus}}</td>\\r\\n                                    <td *ngIf=\\\"data.closeData[0].mode; else not\\\">{{data.closeData[0].mode}}</td>\\r\\n                                    <td *ngIf=\\\"data.closeData[0].credit; else not\\\">{{data.closeData[0].credit| indianCurrency}}</td>\\r\\n                                    <td *ngIf=\\\"data.chequeData[0].chequeDate; else not\\\">{{data.chequeData[0].chequeDate| date: 'dd-MM-yyyy'}}</td>\\r\\n                                    <td *ngIf=\\\"data.chequeData[0].bankName; else not\\\">{{data.chequeData[0].bankName}}</td>\\r\\n                                    <td *ngIf=\\\"data.chequeData[0].chequeNo; else not\\\">{{data.chequeData[0].chequeNo}}</td>\\r\\n                                </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </td>\\r\\n                    </ng-template>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"category == 'All Cash Transactions'\\\">\\r\\n            <h1>Cash Transactions</h1>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 16.66%;\\\">Date</th>\\r\\n                    <th style=\\\"width: 60%;\\\">Particulars</th>\\r\\n                    <th>Credit</th>\\r\\n                    <th>Debit</th>\\r\\n                    <th>Type</th>\\r\\n                    <th>User Id</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let val of accountData\\\">\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"isDate(val.date); else notDate\\\">{{val.date| date:'dd-MM-yyyy'}}</td>\\r\\n                    <ng-template #notDate>\\r\\n                        <td>{{val.date}}</td>\\r\\n                    </ng-template>\\r\\n                    <td *ngIf=\\\"val.particulars; else not\\\">{{val.particulars}}</td>\\r\\n                    <td class=\\\"table-success\\\" *ngIf=\\\"val.credit; else not\\\">{{val.credit| indianCurrency}}</td>\\r\\n                    <td class=\\\"table-danger\\\" *ngIf=\\\"val.debit; else not\\\">{{val.debit| indianCurrency}}</td>\\r\\n                    <td *ngIf=\\\"val.type; else not\\\">{{val.type}}</td>\\r\\n                    <td *ngIf=\\\"val.userId; else not\\\">{{val.userId}}</td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"category == 'All Cheque Transactions'\\\">\\r\\n            <h1>Cheque Transactions</h1>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 16.66%;\\\">Date</th>\\r\\n                    <th style=\\\"width: 60%;\\\">Particulars</th>\\r\\n                    <th>Credit</th>\\r\\n                    <th>Debit</th>\\r\\n                    <th>Type</th>\\r\\n                    <th>User Id</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let val of accountData\\\">\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"isDate(val.account.date); else notDate\\\">{{val.account.date| date:'dd-MM-yyyy'}}</td>\\r\\n                    <ng-template #notDate>\\r\\n                        <td>{{val.account.date}}</td>\\r\\n                    </ng-template>\\r\\n                    <td *ngIf=\\\"val.account.particulars; else not\\\">{{val.account.particulars}}</td>\\r\\n                    <td class=\\\"table-success\\\" *ngIf=\\\"val.account.credit; else not\\\">{{val.account.credit| indianCurrency}}</td>\\r\\n                    <td class=\\\"table-danger\\\" *ngIf=\\\"val.account.debit; else not\\\">{{val.account.debit| indianCurrency}}</td>\\r\\n                    <td *ngIf=\\\"val.account.type; else not\\\">{{val.account.type}}</td>\\r\\n                    <td *ngIf=\\\"val.account.userId; else not\\\">{{val.account.userId}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"val.cheque\\\" align=\\\"center\\\" colspan=\\\"6\\\">\\r\\n                        <h3 style=\\\"font-weight: bold\\\">Cheque Details</h3>\\r\\n                        <table style=\\\"width: 100%;\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width: 16.66%;\\\">Cheque Date</th>\\r\\n                                <th style=\\\"width: 60%;\\\">Bank Name</th>\\r\\n                                <th>Cheque Number</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeDate; else not\\\">{{val.cheque[0].chequeDate| date:'dd-MM-yyyy'}}</td>\\r\\n                                <td class=\\\"col-5\\\" *ngIf=\\\"val.cheque[0].bankName; else not\\\">{{val.cheque[0].bankName}}</td>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeNo; else not\\\">{{val.cheque[0].chequeNo}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"category == 'Credit Transactions'\\\">\\r\\n            <h1>Credit Transactions</h1>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 16.66%;\\\">Date</th>\\r\\n                    <th style=\\\"width: 60%;\\\">Particulars</th>\\r\\n                    <th>Mode</th>\\r\\n                    <th>Credit</th>\\r\\n                    <th>Type</th>\\r\\n                    <th>User Id</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let val of accountData\\\">\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"isDate(val.account.date); else notDate\\\">{{val.account.date| date:'dd-MM-yyyy'}}</td>\\r\\n                    <ng-template #notDate>\\r\\n                        <td>{{val.account.date}}</td>\\r\\n                    </ng-template>\\r\\n                    <td *ngIf=\\\"val.account.particulars; else not\\\">{{val.account.particulars}}</td>\\r\\n                    <td *ngIf=\\\"val.account.mode; else not\\\">{{val.account.mode}}</td>\\r\\n                    <td class=\\\"table-success\\\" *ngIf=\\\"val.account.credit; else not\\\">{{val.account.credit| indianCurrency}}</td>\\r\\n                    <td *ngIf=\\\"val.account.type; else not\\\">{{val.account.type}}</td>\\r\\n                    <td *ngIf=\\\"val.account.userId; else not\\\">{{val.account.userId}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"val.cheque\\\" align=\\\"center\\\" colspan=\\\"6\\\">\\r\\n                        <h3 style=\\\"font-weight: bold\\\">Cheque Details</h3>\\r\\n                        <table style=\\\"width: 100%;\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width: 16.66%;\\\">Cheque Date</th>\\r\\n                                <th style=\\\"width: 60%;\\\">Bank Name</th>\\r\\n                                <th>Cheque Number</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeDate; else not\\\">{{val.cheque[0].chequeDate| date:'dd-MM-yyyy'}}</td>\\r\\n                                <td class=\\\"col-5\\\" *ngIf=\\\"val.cheque[0].bankName; else not\\\">{{val.cheque[0].bankName}}</td>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeNo; else not\\\">{{val.cheque[0].chequeNo}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"category == 'Debit Transactions'\\\">\\r\\n            <h1>Debit Transactions</h1>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 16.66%;\\\">Date</th>\\r\\n                    <th style=\\\"width: 60%;\\\">Particulars</th>\\r\\n                    <th>Mode</th>\\r\\n                    <th>Debit</th>\\r\\n                    <th>Type</th>\\r\\n                    <th>User Id</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let val of accountData\\\">\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"isDate(val.account.date); else notDate\\\">{{val.account.date| date:'dd-MM-yyyy'}}</td>\\r\\n                    <ng-template #notDate>\\r\\n                        <td>{{val.account.date}}</td>\\r\\n                    </ng-template>\\r\\n                    <td *ngIf=\\\"val.account.particulars; else not\\\">{{val.account.particulars}}</td>\\r\\n                    <td *ngIf=\\\"val.account.mode; else not\\\">{{val.account.mode}}</td>\\r\\n                    <td class=\\\"table-danger\\\" *ngIf=\\\"val.account.debit; else not\\\">{{val.account.debit| indianCurrency}}</td>\\r\\n                    <td *ngIf=\\\"val.account.type; else not\\\">{{val.account.type}}</td>\\r\\n                    <td *ngIf=\\\"val.account.userId; else not\\\">{{val.account.userId}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"val.cheque\\\" align=\\\"center\\\" colspan=\\\"6\\\">\\r\\n                        <h3 style=\\\"font-weight: bold\\\">Cheque Details</h3>\\r\\n                        <table style=\\\"width: 100%;\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width: 16.66%;\\\">Cheque Date</th>\\r\\n                                <th style=\\\"width: 60%;\\\">Bank Name</th>\\r\\n                                <th>Cheque Number</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeDate; else not\\\">{{val.cheque[0].chequeDate| date:'dd-MM-yyyy'}}</td>\\r\\n                                <td class=\\\"col-5\\\" *ngIf=\\\"val.cheque[0].bankName; else not\\\">{{val.cheque[0].bankName}}</td>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeNo; else not\\\">{{val.cheque[0].chequeNo}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"category == 'Expense Deductions'\\\">\\r\\n            <h1 id=\\\"subDetail\\\">Expense Details</h1>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                <tr id=\\\"headers\\\">\\r\\n                    <th style=\\\"width: 16.66%;\\\">Date</th>\\r\\n                    <th style=\\\"width: 60%;\\\">Particulars</th>\\r\\n                    <th>Mode</th>\\r\\n                    <th>Credit</th>\\r\\n                    <th>Debit</th>\\r\\n                    <th>User Id</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let val of accountData\\\">\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"isDate(val.account.date); else notDate\\\" id=\\\"date\\\">{{val.account.date| date:'dd-MM-yyyy'}}</td>\\r\\n                    <ng-template #notDate>\\r\\n                        <td>{{val.account.date}}</td>\\r\\n                    </ng-template>\\r\\n                    <td *ngIf=\\\"val.account.particulars; else not\\\">{{val.account.particulars}}</td>\\r\\n                    <td *ngIf=\\\"val.account.mode; else not\\\">{{val.account.mode}}</td>\\r\\n                    <td class=\\\"table-success\\\" *ngIf=\\\"val.account.credit; else not\\\">{{val.account.credit| indianCurrency}}</td>\\r\\n                    <td class=\\\"table-danger\\\" *ngIf=\\\"val.account.debit; else not\\\" id=\\\"debit\\\">{{val.account.debit| indianCurrency}}</td>\\r\\n                    <td *ngIf=\\\"val.account.userId; else not\\\">{{val.account.userId}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"val.cheque\\\" align=\\\"center\\\" colspan=\\\"6\\\">\\r\\n                        <h3 style=\\\"font-weight: bold\\\">Cheque Details</h3>\\r\\n                        <table style=\\\"width: 100%;\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width: 16.66%;\\\">Cheque Date</th>\\r\\n                                <th style=\\\"width: 60%;\\\">Bank Name</th>\\r\\n                                <th>Cheque Number</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeDate; else not\\\">{{val.cheque[0].chequeDate| date:'dd-MM-yyyy'}}</td>\\r\\n                                <td class=\\\"col-5\\\" *ngIf=\\\"val.cheque[0].bankName; else not\\\">{{val.cheque[0].bankName}}</td>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeNo; else not\\\">{{val.cheque[0].chequeNo}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\\"category == 'Credit+Debit+Expense Transactions'\\\">\\r\\n            <h1>Credit + Debit + Expense Transactions</h1>\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 16.66%;\\\">Date</th>\\r\\n                    <th style=\\\"width: 60%;\\\">Particulars</th>\\r\\n                    <th>Mode</th>\\r\\n                    <th>Credit</th>\\r\\n                    <th>Debit</th>\\r\\n                    <th>Type</th>\\r\\n                    <th>User Id</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let val of accountData\\\">\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"isDate(val.account.date); else notDate\\\">{{val.account.date| date:'dd-MM-yyyy'}}</td>\\r\\n                    <ng-template #notDate>\\r\\n                        <td>{{val.account.date}}</td>\\r\\n                    </ng-template>\\r\\n                    <td *ngIf=\\\"val.account.particulars; else not\\\">{{val.account.particulars}}</td>\\r\\n                    <td *ngIf=\\\"val.account.mode; else not\\\">{{val.account.mode}}</td>\\r\\n                    <td class=\\\"table-success\\\" *ngIf=\\\"val.account.credit; else not\\\">{{val.account.credit| indianCurrency}}</td>\\r\\n                    <td class=\\\"table-danger\\\" *ngIf=\\\"val.account.debit; else not\\\">{{val.account.debit| indianCurrency}}</td>\\r\\n                    <td *ngIf=\\\"val.account.type; else not\\\">{{val.account.type}}</td>\\r\\n                    <td *ngIf=\\\"val.account.userId; else not\\\">{{val.account.userId}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td *ngIf=\\\"val.cheque\\\" align=\\\"center\\\" colspan=\\\"7\\\">\\r\\n                        <h3 style=\\\"font-weight: bold\\\">Cheque Details</h3>\\r\\n                        <table style=\\\"width: 100%;\\\">\\r\\n                            <thead>\\r\\n                            <tr>\\r\\n                                <th style=\\\"width: 16.66%;\\\">Cheque Date</th>\\r\\n                                <th style=\\\"width: 60%;\\\">Bank Name</th>\\r\\n                                <th>Cheque Number</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeDate; else not\\\">{{val.cheque[0].chequeDate| date:'dd-MM-yyyy'}}</td>\\r\\n                                <td class=\\\"col-5\\\" *ngIf=\\\"val.cheque[0].bankName; else not\\\">{{val.cheque[0].bankName}}</td>\\r\\n                                <td *ngIf=\\\"val.cheque[0].chequeNo; else not\\\">{{val.cheque[0].chequeNo}}</td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </ng-container>\\r\\n        <br>\\r\\n        <ng-template #not>\\r\\n            <td>-</td>\\r\\n        </ng-template>\\r\\n    </mat-dialog-content>\\r\\n</div>\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n    <button class=\\\"btn-danger\\\" mat-button mat-dialog-close>Cancel</button>\\r\\n    <button class=\\\"btn-success\\\" mat-button (click)=\\\"onConfirmClick()\\\" cdkFocusInitial>Download</button>\\r\\n</mat-dialog-actions>\\r\\n\\r\\n\";","export default \"<sb-layout-dashboard>\\r\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.Upload'| translate}}\\\"></sb-dashboard-head>\\r\\n    <hr class=\\\"rounded\\\">\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-2\\\"></div>\\r\\n        <div class=\\\"col\\\">\\r\\n            <button class=\\\"btn-primary\\\" (click)=\\\"showEmployeeAccountInfo()\\\">{{'Accountant.Tables.CreateEmp'| translate}}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n            <button class=\\\"btn-primary\\\" (click)=\\\"showBankAccountInfo()\\\">{{'Accountant.Tables.CreateBank'| translate}}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n            <button class=\\\"btn-primary\\\" (click)=\\\"showReportInfo()\\\">{{'Accountant.Tables.Generate'| translate}}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2\\\"></div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <br>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"employeeAccount\\\">\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Tables.CreateEmp'| translate}}</div>\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <form [formGroup]=\\\"employeeForm\\\" (ngSubmit)=\\\"send()\\\">\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.EmployeeNo'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number form-control\\\" formControlName=\\\"employeeId\\\" required />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('employeeId').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.EmployeeName'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"text\\\" formControlName=\\\"employeeName\\\" required />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('employeeName').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Father'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"text\\\" formControlName=\\\"fatherName\\\" />\\r\\n                                    </label>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.PermAddress'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"text\\\" formControlName=\\\"permAddress\\\" />\\r\\n                                    </label>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.SameAddress'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"checkbox\\\" (click)=\\\"sameAddress($event)\\\" />\\r\\n                                    </label>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.CurrAddress'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"text\\\" formControlName=\\\"currAddress\\\" />\\r\\n                                    </label>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Email'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"email\\\" formControlName=\\\"email\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('email').hasError('email')\\\">Provide valid email</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.MobNo'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" formControlName=\\\"mobileNo\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('mobileNo').hasError('min')\\\">Number should be of 10 digits</div>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('mobileNo').hasError('max')\\\">Number should be of 10 digits</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.AltMobNo'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" formControlName=\\\"altMobileNo\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('altMobileNo').hasError('min')\\\">Number should be of 10 digits</div>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('altMobileNo').hasError('max')\\\">Number should be of 10 digits</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Landline'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" formControlName=\\\"landlineNo\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('landlineNo').hasError('pattern')\\\">Invalid Number!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.PAN'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" formControlName=\\\"pan\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('pan').hasError('pattern')\\\">Invalid Number!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Aadhar'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" formControlName=\\\"aadharNo\\\" />\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('aadharNo').hasError('pattern')\\\">Invalid Number!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.EnrollDate'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"date\\\" formControlName=\\\"enrollDate\\\" required/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('enrollDate').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Fee'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" formControlName=\\\"amount\\\" required/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('amount').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Mode' | translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <select class=\\\"custom-select\\\" formControlName=\\\"type\\\" required>\\r\\n                                            <option>{{'Accountant.Tables.Cash' | translate}}</option>\\r\\n                                            <option>{{'Accountant.Tables.Cheque' | translate}}</option>\\r\\n                                        </select>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('type').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"employeeForm.get('type').value == 'Cheque';\\\">\\r\\n                                <td>{{'Accountant.Tables.BankName' | translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <select class=\\\"custom-select\\\" formControlName=\\\"bankName\\\">\\r\\n                                            <option *ngFor=\\\"let val of bankList\\\">{{val.bankName}}</option>\\r\\n                                        </select>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('bankName').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"employeeForm.get('type').value == 'Cheque'\\\">\\r\\n                                <td>{{'Accountant.Tables.ChequeDate' | translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"date\\\" formControlName=\\\"chequeDate\\\"/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('chequeDate').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"employeeForm.get('type').value == 'Cheque'\\\">\\r\\n                                <td>{{'Accountant.Tables.ChequeNo' | translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"text\\\" formControlName=\\\"chequeNo\\\"/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('chequeNo').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Remark'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"text\\\" formControlName=\\\"purpose\\\" maxlength=\\\"1000\\\"/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"employeeForm.get('purpose').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                        <button type=\\\"submit\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </sb-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"report\\\">\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Tables.Generate'| translate}}</div>\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"openDialog()\\\">\\r\\n                        <table class=\\\"table table-striped\\\" id=\\\"content\\\">\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Start'| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"date\\\" formControlName=\\\"startDate\\\"/>\\r\\n                                </label>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"reportForm.get('startDate').hasError('required')\\\">Required!</div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.End'| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"date\\\" formControlName=\\\"endDate\\\"/>\\r\\n                                </label>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"reportForm.get('endDate').hasError('required')\\\">Required!</div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Category'| translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <select class=\\\"custom-select\\\" formControlName=\\\"category\\\">\\r\\n                                        <option>{{'Accountant.Tables.LoanRecord'| translate}}</option>\\r\\n                                        <option>{{'Accountant.Tables.CreditRecord'| translate}}</option>\\r\\n                                        <option>{{'Accountant.Tables.DebitRecord'| translate}}</option>\\r\\n                                        <option>{{'Accountant.Tables.ExpenseRecord'| translate}}</option>\\r\\n                                        <option>{{'Accountant.Tables.CdeRecord'| translate}}</option>\\r\\n                                        <option>{{'Accountant.Tables.CashRecord'| translate}}</option>\\r\\n                                        <option>{{'Accountant.Tables.ChequeRecord'| translate}}</option>\\r\\n                                    </select>\\r\\n                                </label>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"reportForm.get('category').hasError('required')\\\">Required!</div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!this.reportForm.valid\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </sb-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"bankAccount\\\">\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Tables.CreateBank'| translate}}</div>\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <form [formGroup]=\\\"bankForm\\\" (ngSubmit)=\\\"sendBankData()\\\">\\r\\n                        <table class=\\\"table table-striped\\\">\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.BankName' | translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"bankName\\\" required />\\r\\n                                </label>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"bankForm.get('bankName').hasError('required')\\\">Required!</div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Address' | translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" maxlength=\\\"1000\\\" formControlName=\\\"bankAddress\\\"/>\\r\\n                                </label>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"bankForm.get('bankAddress').hasError('required')\\\">Required!</div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.AccountNo' | translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"accountNo\\\" pattern=\\\"^\\\\d{9,18}$\\\"/>\\r\\n                                </label>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"bankForm.get('accountNo').hasError('required')\\\">Required!</div>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"bankForm.get('accountNo').hasError('pattern')\\\">Length should be from 9 to 18</div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.TypeAccount' | translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <select class=\\\"custom-select form-control\\\" required formControlName=\\\"accountType\\\">\\r\\n                                        <option>{{'Accountant.Tables.SavingAcc' | translate}}</option>\\r\\n                                        <option>{{'Accountant.Tables.Current' | translate}}</option>\\r\\n                                    </select>\\r\\n                                </label>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"bankForm.get('accountType').hasError('required')\\\">Required!</div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Nickname' | translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"nickName\\\" maxlength=\\\"12\\\" required/>\\r\\n                                </label>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"bankForm.get('nickName').hasError('required')\\\">Required!</div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Code' | translate}}</td>\\r\\n                            <td>\\r\\n                                <label>\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"code\\\" required pattern=\\\"^[A-Z]{4}[0][A-Z0-9]{6}$\\\" minlength=\\\"11\\\" maxlength=\\\"11\\\" />\\r\\n                                </label>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"bankForm.get('code').hasError('required')\\\">Required!</div>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"bankForm.get('code').hasError('pattern')\\\">Invalid Format!</div>\\r\\n                                <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"bankForm.get('code').hasError('minlength')\\\">Minimum Length should be 11</div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!this.bankForm.valid\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </sb-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n    </div>\\r\\n</sb-layout-dashboard>\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwbG9hZC1hbGwvZGlhbG9nL2RpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport * as moment from 'moment';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n@Component({\r\n    selector: 'sb-dialog',\r\n    templateUrl: './dialog.component.html',\r\n    styleUrls: ['./dialog.component.scss'],\r\n})\r\nexport class DialogComponent {\r\n    start = '';\r\n    end = '';\r\n    accountData = [];\r\n    loanData = [];\r\n    category = '';\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) private data: any,\r\n        private dialogRef: MatDialogRef<DialogComponent>\r\n    ) {\r\n        console.log(data);\r\n        if (data) {\r\n            this.accountData = data.accountData || this.accountData;\r\n            this.loanData = data.loan || this.loanData;\r\n            this.category = data.category || this.category;\r\n            this.start = data.start || this.start;\r\n            this.end = data.end || this.end;\r\n        }\r\n    }\r\n    createLoanBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        const columns = [\r\n            { text: 'Loan Date', style: 'tableHeader' },\r\n            { text: 'Loan Amount', style: 'tableHeader' },\r\n            { text: 'Loan Duration', style: 'tableHeader' },\r\n            { text: 'Loan Type', style: 'tableHeader' },\r\n            { text: 'Close Loan', style: 'tableHeader' },\r\n            { text: 'Closure Status', style: 'tableHeader' },\r\n            { text: 'Date of Loan Closure', style: 'tableHeader' },\r\n            { text: 'User Id', style: 'tableHeader' },\r\n        ];\r\n        body.push(columns);\r\n        data.forEach(val => {\r\n            if (this.isDate(val.loanData.date)) {\r\n                if (this.isDate(val.loanData.dateOfClosure)) {\r\n                    if (val.loanData.closeLoan === 0) {\r\n                        body.push([\r\n                            // @ts-ignore\r\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'No',\r\n                            val.loanData.closeStatus.toString(),\r\n                            // @ts-ignore\r\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\r\n                            val.loanData.userId,\r\n                        ]);\r\n                    } else {\r\n                        body.push([\r\n                            // @ts-ignore\r\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'Yes',\r\n                            val.loanData.closeStatus.toString(),\r\n                            // @ts-ignore\r\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\r\n                            val.loanData.userId,\r\n                        ]);\r\n                    }\r\n                } else {\r\n                    if (val.loanData.closeLoan === 0) {\r\n                        body.push([\r\n                            // @ts-ignore\r\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'No',\r\n                            val.loanData.closeStatus,\r\n                            val.loanData.dateOfClosure,\r\n                            val.loanData.userId,\r\n                        ]);\r\n                    } else {\r\n                        body.push([\r\n                            // @ts-ignore\r\n                            moment(val.loanData.date).format('DD-MM-YYYY'),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'Yes',\r\n                            val.loanData.closeStatus,\r\n                            val.loanData.dateOfClosure,\r\n                            val.loanData.userId,\r\n                        ]);\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.isDate(val.loanData.dateOfClosure)) {\r\n                    if (val.loanData.closeLoan === 0) {\r\n                        body.push([\r\n                            val.loanData.date.toString(),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'No',\r\n                            val.loanData.closeStatus,\r\n                            // @ts-ignore\r\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\r\n                            val.loanData.userId,\r\n                        ]);\r\n                    } else {\r\n                        body.push([\r\n                            val.loanData.date.toString(),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'Yes',\r\n                            val.loanData.closeStatus,\r\n                            // @ts-ignore\r\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\r\n                            val.loanData.userId,\r\n                        ]);\r\n                    }\r\n                } else {\r\n                    if (val.loanData.closeLoan === 0) {\r\n                        body.push([\r\n                            val.loanData.date.toString(),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'No',\r\n                            val.loanData.closeStatus,\r\n                            // @ts-ignore\r\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\r\n                            val.loanData.userId,\r\n                        ]);\r\n                    } else {\r\n                        body.push([\r\n                            val.loanData.date.toString(),\r\n                            val.loanData.loanAmount.toString(),\r\n                            val.loanData.loanDuration.toString(),\r\n                            val.loanData.loanType.toString(),\r\n                            'Yes',\r\n                            val.loanData.closeStatus,\r\n                            // @ts-ignore\r\n                            moment(val.loanData.dateOfClosure).format('DD-MM-YYYY'),\r\n                            val.loanData.userId,\r\n                        ]);\r\n                    }\r\n                    body.push([\r\n                        val.loanData.date.toString(),\r\n                        val.loanData.loanAmount.toString(),\r\n                        val.loanData.loanDuration.toString(),\r\n                        val.loanData.loanType.toString(),\r\n                        val.loanData.closeLoan.toString(),\r\n                        val.loanData.closeStatus,\r\n                        val.loanData.dateOfClosure,\r\n                        val.loanData.userId,\r\n                    ]);\r\n                }\r\n            }\r\n            if (val.loanBook) {\r\n                body.push([this.createLoanBookTable(val.loanBook), {}, {}, {}, {}, {}, {}, {}]);\r\n            }\r\n            if (val.closeData) {\r\n                body.push([\r\n                    this.createCloseTable(val.closeData, val.loanData, val.chequeData),\r\n                    {},\r\n                    {},\r\n                    {},\r\n                    {},\r\n                    {},\r\n                    {},\r\n                    {},\r\n                ]);\r\n            }\r\n        });\r\n        console.log(body);\r\n        return body;\r\n    }\r\n    createLoanBookTable(data: any) {\r\n        return {\r\n            colSpan: 8,\r\n            alignment: 'center',\r\n            style: 'nestedTable',\r\n            table: {\r\n                widths: ['*', '*', '*', '*', '*', '*', '*', '*'],\r\n                headerRows: 1,\r\n                body: this.createLoanBookBody(data),\r\n            },\r\n        };\r\n    }\r\n    createLoanBookBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        body.push([\r\n            { text: 'EMI Details', colSpan: 8, style: 'subheader', alignment: 'center' },\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n        ]);\r\n        body.push([\r\n            { text: 'EMI Date', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n            { text: 'Particulars', colSpan: 3, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n            {},\r\n            { text: 'EMI Paid', colSpan: 3, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n            {},\r\n        ]);\r\n        data.forEach(val => {\r\n            console.log(val);\r\n            if (this.isDate(val.date)) {\r\n                body.push([\r\n                    {\r\n                        // @ts-ignore\r\n                        text: moment(val.date).format('DD-MM-YYYY'),\r\n                        colSpan: 2,\r\n                        alignment: 'center',\r\n                    },\r\n                    {},\r\n                    { text: val.particulars.toString(), colSpan: 3, alignment: 'center' },\r\n                    {},\r\n                    {},\r\n                    { text: val.credit.toString(), colSpan: 3, alignment: 'center' },\r\n                    {},\r\n                    {},\r\n                ]);\r\n            } else {\r\n                body.push([\r\n                    { text: val.date.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: val.particulars.toString(), colSpan: 3, alignment: 'center' },\r\n                    {},\r\n                    {},\r\n                    { text: val.credit.toString(), colSpan: 3, alignment: 'center' },\r\n                    {},\r\n                    {},\r\n                ]);\r\n            }\r\n        });\r\n\r\n        return body;\r\n    }\r\n    createCloseTable(data: any, loanData: any, chequeData: any) {\r\n        return {\r\n            colSpan: 8,\r\n            alignment: 'center',\r\n            style: 'nestedTable',\r\n            table: {\r\n                widths: ['14.66%', 'auto', '*', '*', '*', '*', '*', 'auto'],\r\n                headerRows: 1,\r\n                body: this.createCloseBody(data, loanData, chequeData),\r\n            },\r\n        };\r\n    }\r\n    createCloseBody(data: any[], loanData: any, chequeData: any[]) {\r\n        const body: any[][] = [];\r\n        body.push([\r\n            { text: 'Loan Closure Details', colSpan: 8, style: 'subheader', alignment: 'center' },\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n        ]);\r\n        if (data[0].mode === 'Cash') {\r\n            body.push([\r\n                { text: 'Date', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n                {},\r\n                { text: 'Loan Status', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n                {},\r\n                { text: 'Mode of Payment', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n                {},\r\n                { text: 'Paid Amount', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n                {},\r\n            ]);\r\n            if (this.isDate(data[0].date)) {\r\n                body.push([\r\n                    {\r\n                        // @ts-ignore\r\n                        text: moment(data[0].date).format('DD-MM-YYYY'),\r\n                        colSpan: 2,\r\n                        alignment: 'center',\r\n                    },\r\n                    {},\r\n                    { text: loanData.closeStatus, colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: data[0].mode.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: data[0].credit.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            } else {\r\n                body.push([\r\n                    {\r\n                        text: data[0].date.toString(),\r\n                        colSpan: 2,\r\n                        alignment: 'center',\r\n                    },\r\n                    {},\r\n                    { text: loanData.closeStatus, colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: data[0].mode.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: data[0].credit.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            }\r\n\r\n            return body;\r\n        } else {\r\n            body.push([\r\n                { text: 'Date', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Loan Status', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Mode of Payment', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Paid Amount', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Cheque Date', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Bank Name', style: 'tableHeader', alignment: 'center' },\r\n                { text: 'Cheque Number', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n                {},\r\n            ]);\r\n            if (this.isDate(data[0].date)) {\r\n                if (this.isDate(chequeData[0].chequeDate)) {\r\n                    body.push([\r\n                        {\r\n                            // @ts-ignore\r\n                            text: moment(data[0].date).format('DD-MM-YYYY'),\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: loanData.closeStatus, alignment: 'center' },\r\n                        { text: data[0].mode.toString(), alignment: 'center' },\r\n                        { text: data[0].credit.toString(), alignment: 'center' },\r\n                        {\r\n                            // @ts-ignore\r\n                            text: moment(chequeData[0].chequeDate).format('DD-MM-YYYY'),\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\r\n                        {\r\n                            text: chequeData[0].chequeNo.toString(),\r\n                            colSpan: 2,\r\n                            alignment: 'center',\r\n                        },\r\n                        {},\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        {\r\n                            // @ts-ignore\r\n                            text: moment(data[0].date).format('DD-MM-YYYY'),\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: loanData.closeStatus, alignment: 'center' },\r\n                        { text: data[0].mode.toString(), alignment: 'center' },\r\n                        { text: data[0].credit.toString(), alignment: 'center' },\r\n                        {\r\n                            text: chequeData[0].chequeDate,\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\r\n                        {\r\n                            text: chequeData[0].chequeNo.toString(),\r\n                            colSpan: 2,\r\n                            alignment: 'center',\r\n                        },\r\n                        {},\r\n                    ]);\r\n                }\r\n            } else {\r\n                if (this.isDate(chequeData[0].chequeDate)) {\r\n                    body.push([\r\n                        {\r\n                            text: data[0].date,\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: loanData.closeStatus, alignment: 'center' },\r\n                        { text: data[0].mode.toString(), alignment: 'center' },\r\n                        { text: data[0].credit.toString(), alignment: 'center' },\r\n                        {\r\n                            // @ts-ignore\r\n                            text: moment(chequeData[0].chequeDate).format('DD-MM-YYYY'),\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\r\n                        {\r\n                            text: chequeData[0].chequeNo.toString(),\r\n                            colSpan: 2,\r\n                            alignment: 'center',\r\n                        },\r\n                        {},\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        {\r\n                            text: data[0].date,\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: loanData.closeStatus, alignment: 'center' },\r\n                        { text: data[0].mode.toString(), alignment: 'center' },\r\n                        { text: data[0].credit.toString(), alignment: 'center' },\r\n                        {\r\n                            text: chequeData[0].chequeDate,\r\n                            alignment: 'center',\r\n                        },\r\n                        { text: chequeData[0].bankName.toString(), alignment: 'center' },\r\n                        {\r\n                            text: chequeData[0].chequeNo.toString(),\r\n                            colSpan: 2,\r\n                            alignment: 'center',\r\n                        },\r\n                        {},\r\n                    ]);\r\n                }\r\n            }\r\n\r\n            return body;\r\n        }\r\n    }\r\n    createCashBody(data: any[]) {\r\n        const columns = [\r\n            { text: 'Date', style: 'tableHeader' },\r\n            { text: 'Particulars', style: 'tableHeader' },\r\n            { text: 'Credit', style: 'tableHeader', fillColor: '#7CFC00' },\r\n            { text: 'Debit', style: 'tableHeader', fillColor: '#DC143C' },\r\n            { text: 'Type', style: 'tableHeader' },\r\n            { text: 'User Id', style: 'tableHeader' },\r\n        ];\r\n        const body: any[][] = [];\r\n        body.push(columns);\r\n        data.forEach(val => {\r\n            if (this.isDate(val.date)) {\r\n                if (val.credit === null) {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.date).format('DD-MM-YYYY'),\r\n                        val.particulars.toString(),\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        { text: val.debit, fillColor: '#DC143C' },\r\n                        val.type,\r\n                        val.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.date).format('DD-MM-YYYY'),\r\n                        val.particulars.toString(),\r\n                        { text: val.credit.toString(), fillColor: '#7CFC00' },\r\n                        { text: '-', fillColor: '#DC143C' },\r\n                        val.type,\r\n                        val.userId.toString(),\r\n                    ]);\r\n                }\r\n            } else {\r\n                if (val.credit === null) {\r\n                    body.push([\r\n                        val.date,\r\n                        val.particulars.toString(),\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        { text: val.debit, fillColor: '#DC143C' },\r\n                        val.type,\r\n                        val.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        val.date.toString(),\r\n                        val.particulars.toString(),\r\n                        { text: val.credit.toString(), fillColor: '#7CFC00' },\r\n                        { text: '-', fillColor: '#DC143C' },\r\n                        val.type,\r\n                        val.userId.toString(),\r\n                    ]);\r\n                }\r\n            }\r\n        });\r\n        console.log(body);\r\n        return body;\r\n    }\r\n    createChequeTranBody(data: any[]) {\r\n        const columns = [\r\n            { text: 'Date', style: 'tableHeader' },\r\n            { text: 'Particulars', style: 'tableHeader' },\r\n            { text: 'Credit', style: 'tableHeader', fillColor: '#7CFC00' },\r\n            { text: 'Debit', style: 'tableHeader', fillColor: '#DC143C' },\r\n            { text: 'Type', style: 'tableHeader' },\r\n            { text: 'User Id', style: 'tableHeader' },\r\n        ];\r\n        const body: any[][] = [];\r\n        body.push(columns);\r\n        data.forEach(val => {\r\n            if (this.isDate(val.account.date)) {\r\n                if (val.account.credit === null) {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        { text: val.account.debit, fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        { text: val.account.credit, fillColor: '#7CFC00' },\r\n                        { text: '-', fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                }\r\n            } else {\r\n                if (val.account.credit === null) {\r\n                    body.push([\r\n                        val.account.date,\r\n                        val.account.particulars.toString(),\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        { text: val.account.debit, fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        val.account.date.toString(),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: val.account.credit, fillColor: '#7CFC00' },\r\n                        { text: '-', fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                }\r\n            }\r\n            if (val.cheque) {\r\n                body.push([this.createChequeTable(val.cheque), {}, {}, {}, {}, {}]);\r\n            }\r\n        });\r\n        console.log(body);\r\n        return body;\r\n    }\r\n    createCreditBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        const columns = [\r\n            { text: 'Date', style: 'tableHeader' },\r\n            { text: 'Particulars', style: 'tableHeader' },\r\n            { text: 'Mode', style: 'tableHeader' },\r\n            { text: 'Credit', style: 'tableHeader', fillColor: '#7CFC00' },\r\n            { text: 'Type', style: 'tableHeader' },\r\n            { text: 'User Id', style: 'tableHeader' },\r\n        ];\r\n        body.push(columns);\r\n        data.forEach(val => {\r\n            if (this.isDate(val.account.date)) {\r\n                if (val.account.credit === null) {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode,\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode,\r\n                        { text: val.account.credit.toString(), fillColor: '#7CFC00' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                }\r\n            } else {\r\n                if (val.account.credit === null) {\r\n                    body.push([\r\n                        val.account.date,\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode,\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        val.account.date.toString(),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode,\r\n                        { text: val.account.credit.toString(), fillColor: '#7CFC00' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                }\r\n            }\r\n            if (val.cheque) {\r\n                body.push([this.createChequeTable(val.cheque), {}, {}, {}, {}, {}]);\r\n            }\r\n        });\r\n        console.log(body);\r\n        return body;\r\n    }\r\n    createDebitBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        const columns = [\r\n            { text: 'Date', style: 'tableHeader' },\r\n            { text: 'Particulars', style: 'tableHeader' },\r\n            { text: 'Mode', style: 'tableHeader' },\r\n            { text: 'Debit', style: 'tableHeader', fillColor: '#DC143C' },\r\n            { text: 'Type', style: 'tableHeader' },\r\n            { text: 'User Id', style: 'tableHeader' },\r\n        ];\r\n        body.push(columns);\r\n        data.forEach(val => {\r\n            if (this.isDate(val.account.date)) {\r\n                if (val.account.debit === null) {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: '-', fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: val.account.debit.toString(), fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                }\r\n            } else {\r\n                if (val.account.debit === null) {\r\n                    body.push([\r\n                        val.account.date,\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: '-', fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        val.account.date.toString(),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: val.account.debit.toString(), fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                }\r\n            }\r\n            if (val.cheque) {\r\n                body.push([this.createChequeTable(val.cheque), {}, {}, {}, {}, {}]);\r\n            }\r\n        });\r\n        console.log(body);\r\n        return body;\r\n    }\r\n    createBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        const columns = [\r\n            { text: 'Date', style: 'tableHeader' },\r\n            { text: 'Particulars', style: 'tableHeader' },\r\n            { text: 'Mode', style: 'tableHeader' },\r\n            { text: 'Credit', style: 'tableHeader', fillColor: '#7CFC00' },\r\n            { text: 'Debit', style: 'tableHeader', fillColor: '#DC143C' },\r\n            { text: 'User Id', style: 'tableHeader' },\r\n        ];\r\n        body.push(columns);\r\n        data.forEach(val => {\r\n            if (this.isDate(val.account.date)) {\r\n                if (val.account.credit === null) {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        { text: val.account.debit, fillColor: '#DC143C' },\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: val.account.credit, fillColor: '#7CFC00' },\r\n                        { text: '-', fillColor: '#DC143C' },\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                }\r\n            } else {\r\n                if (val.account.credit === null) {\r\n                    body.push([\r\n                        val.account.date,\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        { text: val.account.debit, fillColor: '#DC143C' },\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        val.account.date.toString(),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode.toString(),\r\n                        { text: val.account.credit, fillColor: '#7CFC00' },\r\n                        { text: '-', fillColor: '#DC143C' },\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                }\r\n            }\r\n            if (val.cheque) {\r\n                body.push([this.createChequeTable(val.cheque), {}, {}, {}, {}, {}]);\r\n            }\r\n        });\r\n        console.log(body);\r\n        return body;\r\n    }\r\n    createChequeTable(data: any) {\r\n        return {\r\n            colSpan: 6,\r\n            alignment: 'center',\r\n            style: 'nestedTable',\r\n            table: {\r\n                widths: ['16.66%', '*', '16.66%', '*', '16.66%', '*'],\r\n                headerRows: 1,\r\n                body: this.createChequeBody(data),\r\n            },\r\n        };\r\n    }\r\n    createChequeBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        body.push([\r\n            { text: 'Cheque Details', colSpan: 6, style: 'subheader', alignment: 'center' },\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n        ]);\r\n        body.push([\r\n            { text: 'Cheque Date', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n            { text: 'Bank Name', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n            { text: 'Cheque Number', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n        ]);\r\n        data.forEach(val => {\r\n            if (this.isDate(val.chequeDate)) {\r\n                body.push([\r\n                    {\r\n                        // @ts-ignore\r\n                        text: moment(val.chequeDate.toString()).format('DD-MM-YYYY'),\r\n                        colSpan: 2,\r\n                        alignment: 'center',\r\n                    },\r\n                    {},\r\n                    { text: val.bankName.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: val.chequeNo.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            } else {\r\n                body.push([\r\n                    { text: val.chequeDate.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: val.bankName.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: val.chequeNo.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            }\r\n        });\r\n\r\n        return body;\r\n    }\r\n    createCDEBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        const columns = [\r\n            { text: 'Date', style: 'tableHeader' },\r\n            { text: 'Particulars', style: 'tableHeader' },\r\n            { text: 'Mode', style: 'tableHeader' },\r\n            { text: 'Credit', style: 'tableHeader', fillColor: '#7CFC00' },\r\n            { text: 'Debit', style: 'tableHeader', fillColor: '#DC143C' },\r\n            { text: 'Type', style: 'tableHeader' },\r\n            { text: 'User Id', style: 'tableHeader' },\r\n        ];\r\n        body.push(columns);\r\n        data.forEach(val => {\r\n            if (this.isDate(val.account.date)) {\r\n                if (val.account.credit === null) {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode,\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        { text: val.account.debit, fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        // @ts-ignore\r\n                        moment(val.account.date).format('DD-MM-YYYY'),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode,\r\n                        { text: val.account.credit, fillColor: '#7CFC00' },\r\n                        { text: '-', fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                }\r\n            } else {\r\n                if (val.account.credit === null) {\r\n                    body.push([\r\n                        val.account.date,\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode,\r\n                        { text: '-', fillColor: '#7CFC00' },\r\n                        { text: val.account.debit, fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                } else {\r\n                    body.push([\r\n                        val.account.date.toString(),\r\n                        val.account.particulars.toString(),\r\n                        val.account.mode,\r\n                        { text: val.account.credit, fillColor: '#7CFC00' },\r\n                        { text: '-', fillColor: '#DC143C' },\r\n                        val.account.type,\r\n                        val.account.userId.toString(),\r\n                    ]);\r\n                }\r\n            }\r\n            if (val.cheque) {\r\n                body.push([this.createCDEChequeTable(val.cheque), {}, {}, {}, {}, {}]);\r\n            }\r\n        });\r\n        console.log(body);\r\n        return body;\r\n    }\r\n    createCDEChequeTable(data: any) {\r\n        return {\r\n            colSpan: 7,\r\n            alignment: 'center',\r\n            style: 'nestedTable',\r\n            table: {\r\n                widths: ['14.66%', '*', '14.66%', '*', '*', '14.66%', '*'],\r\n                headerRows: 1,\r\n                body: this.createCDEChequeBody(data),\r\n            },\r\n        };\r\n    }\r\n    createCDEChequeBody(data: any[]) {\r\n        const body: any[][] = [];\r\n        body.push([\r\n            { text: 'Cheque Details', colSpan: 7, style: 'subheader', alignment: 'center' },\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n        ]);\r\n        body.push([\r\n            { text: 'Cheque Date', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n            { text: 'Bank Name', colSpan: 3, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n            {},\r\n            { text: 'Cheque Number', colSpan: 2, style: 'tableHeader', alignment: 'center' },\r\n            {},\r\n        ]);\r\n        data.forEach(val => {\r\n            if (this.isDate(val.chequeDate)) {\r\n                body.push([\r\n                    {\r\n                        // @ts-ignore\r\n                        text: moment(val.chequeDate.toString()).format('DD-MM-YYYY'),\r\n                        colSpan: 2,\r\n                        alignment: 'center',\r\n                    },\r\n                    {},\r\n                    { text: val.bankName.toString(), colSpan: 3, alignment: 'center' },\r\n                    {},\r\n                    {},\r\n                    { text: val.chequeNo.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            } else {\r\n                body.push([\r\n                    { text: val.chequeDate.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                    { text: val.bankName.toString(), colSpan: 3, alignment: 'center' },\r\n                    {},\r\n                    {},\r\n                    { text: val.chequeNo.toString(), colSpan: 2, alignment: 'center' },\r\n                    {},\r\n                ]);\r\n            }\r\n        });\r\n\r\n        return body;\r\n    }\r\n    onConfirmClick(): void {\r\n        if (this.category === 'Loan Disbursal Records') {\r\n            // @ts-ignore\r\n            const docDefinition = {\r\n                pageSize: 'A4',\r\n                pageOrientation: 'landscape',\r\n                pageMargins: [20, 20, 20, 30],\r\n                content: [\r\n                    { text: this.category, style: 'header', alignment: 'center' },\r\n                    { text: '\\n' },\r\n                    { text: '\\n' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['12%', '*', '*', '*', '*', '*', '*', '*', '*', '*', '15%'],\r\n                            body: [\r\n                                [\r\n                                    {\r\n                                        text: 'Start Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right ',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('start').innerHTML,\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {\r\n                                        text: 'End Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('end').innerHTML,\r\n                                ],\r\n                            ],\r\n                        },\r\n                        layout: 'noBorders',\r\n                        alignment: 'center',\r\n                    },\r\n                    { text: '\\n' },\r\n                    { text: 'Loan Details', style: 'subheader' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['10%', '*', '*', '*', '*', '*', '*', '*'],\r\n                            headerRows: 1,\r\n                            body: this.createLoanBody(this.loanData),\r\n                        },\r\n                    },\r\n                ],\r\n                styles: {\r\n                    header: {\r\n                        fontSize: 18,\r\n                        bold: true,\r\n                        margin: [0, 0, 0, 10],\r\n                    },\r\n                    subheader: {\r\n                        fontSize: 16,\r\n                        bold: true,\r\n                        margin: [0, 10, 0, 5],\r\n                    },\r\n                    tableExample: {\r\n                        margin: [0, 15, 0, 15],\r\n                    },\r\n                    nestedTable: {\r\n                        margin: [5, 5, 5, 5],\r\n                    },\r\n                    tableHeader: {\r\n                        bold: true,\r\n                        fontSize: 13,\r\n                        color: 'black',\r\n                    },\r\n                },\r\n                defaultStyle: {\r\n                    alignment: 'justify',\r\n                },\r\n            };\r\n            // @ts-ignore\r\n            pdfMake.createPdf(docDefinition).download('Loan Disbursal Records.pdf');\r\n        } else if (this.category === 'All Cash Transactions') {\r\n            // @ts-ignore\r\n            const docDefinition = {\r\n                pageSize: 'A4',\r\n                pageOrientation: 'landscape',\r\n                pageMargins: [20, 20, 20, 30],\r\n                content: [\r\n                    { text: this.category, style: 'header', alignment: 'center' },\r\n                    { text: '\\n' },\r\n                    { text: '\\n' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['12%', '*', '*', '*', '*', '*', '*', '*', '*', '*', '15%'],\r\n                            body: [\r\n                                [\r\n                                    {\r\n                                        text: 'Start Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right ',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('start').innerHTML,\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {\r\n                                        text: 'End Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('end').innerHTML,\r\n                                ],\r\n                            ],\r\n                        },\r\n                        layout: 'noBorders',\r\n                        alignment: 'center',\r\n                    },\r\n                    { text: '\\n' },\r\n                    { text: 'Cash Transactions', style: 'subheader' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['14%', '50%', '*', '*', '*', '*'],\r\n                            headerRows: 1,\r\n                            body: this.createCashBody(this.accountData),\r\n                        },\r\n                    },\r\n                ],\r\n                styles: {\r\n                    header: {\r\n                        fontSize: 18,\r\n                        bold: true,\r\n                        margin: [0, 0, 0, 10],\r\n                    },\r\n                    subheader: {\r\n                        fontSize: 16,\r\n                        bold: true,\r\n                        margin: [0, 10, 0, 5],\r\n                    },\r\n                    tableExample: {\r\n                        margin: [0, 15, 0, 15],\r\n                    },\r\n                    nestedTable: {\r\n                        margin: [5, 5, 5, 5],\r\n                    },\r\n                    tableHeader: {\r\n                        bold: true,\r\n                        fontSize: 13,\r\n                        color: 'black',\r\n                    },\r\n                },\r\n                defaultStyle: {\r\n                    alignment: 'justify',\r\n                },\r\n            };\r\n            // @ts-ignore\r\n            pdfMake.createPdf(docDefinition).download('Cash Transactions.pdf');\r\n        } else if (this.category === 'All Cheque Transactions') {\r\n            // @ts-ignore\r\n            const docDefinition = {\r\n                pageSize: 'A4',\r\n                pageOrientation: 'landscape',\r\n                pageMargins: [20, 20, 20, 30],\r\n                content: [\r\n                    { text: this.category, style: 'header', alignment: 'center' },\r\n                    { text: '\\n' },\r\n                    { text: '\\n' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['12%', '*', '*', '*', '*', '*', '*', '*', '*', '*', '15%'],\r\n                            body: [\r\n                                [\r\n                                    {\r\n                                        text: 'Start Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right ',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('start').innerHTML,\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {\r\n                                        text: 'End Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('end').innerHTML,\r\n                                ],\r\n                            ],\r\n                        },\r\n                        layout: 'noBorders',\r\n                        alignment: 'center',\r\n                    },\r\n                    { text: '\\n' },\r\n                    { text: '\\n' },\r\n                    { text: 'Cheque Transactions', style: 'subheader' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['14%', '50%', '*', '*', '*', '*'],\r\n                            headerRows: 1,\r\n                            body: this.createChequeTranBody(this.accountData),\r\n                        },\r\n                    },\r\n                ],\r\n                styles: {\r\n                    header: {\r\n                        fontSize: 18,\r\n                        bold: true,\r\n                        margin: [0, 0, 0, 10],\r\n                    },\r\n                    subheader: {\r\n                        fontSize: 16,\r\n                        bold: true,\r\n                        margin: [0, 10, 0, 5],\r\n                    },\r\n                    tableExample: {\r\n                        margin: [0, 15, 0, 15],\r\n                    },\r\n                    nestedTable: {\r\n                        margin: [5, 5, 5, 5],\r\n                    },\r\n                    tableHeader: {\r\n                        bold: true,\r\n                        fontSize: 13,\r\n                        color: 'black',\r\n                    },\r\n                },\r\n                defaultStyle: {\r\n                    alignment: 'justify',\r\n                },\r\n            };\r\n            // @ts-ignore\r\n            pdfMake.createPdf(docDefinition).download('Cheque Transactions.pdf');\r\n        } else if (this.category === 'Credit Transactions') {\r\n            // @ts-ignore\r\n            const docDefinition = {\r\n                pageSize: 'A4',\r\n                pageOrientation: 'landscape',\r\n                pageMargins: [20, 20, 20, 30],\r\n                content: [\r\n                    { text: this.category, style: 'header', alignment: 'center' },\r\n                    { text: '\\n' },\r\n                    { text: '\\n' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['12%', '*', '*', '*', '*', '*', '*', '*', '*', '*', '15%'],\r\n                            body: [\r\n                                [\r\n                                    {\r\n                                        text: 'Start Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right ',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('start').innerHTML,\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {\r\n                                        text: 'End Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('end').innerHTML,\r\n                                ],\r\n                            ],\r\n                        },\r\n                        layout: 'noBorders',\r\n                        alignment: 'center',\r\n                    },\r\n                    { text: '\\n' },\r\n                    { text: 'Credit Transactions', style: 'subheader' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['*', '50%', '*', '*', '*', '*'],\r\n                            headerRows: 1,\r\n                            body: this.createCreditBody(this.accountData),\r\n                        },\r\n                    },\r\n                ],\r\n                styles: {\r\n                    header: {\r\n                        fontSize: 18,\r\n                        bold: true,\r\n                        margin: [0, 0, 0, 10],\r\n                    },\r\n                    subheader: {\r\n                        fontSize: 16,\r\n                        bold: true,\r\n                        margin: [0, 10, 0, 5],\r\n                    },\r\n                    tableExample: {\r\n                        margin: [0, 15, 0, 15],\r\n                    },\r\n                    nestedTable: {\r\n                        margin: [5, 5, 5, 5],\r\n                    },\r\n                    tableHeader: {\r\n                        bold: true,\r\n                        fontSize: 13,\r\n                        color: 'black',\r\n                    },\r\n                },\r\n                defaultStyle: {\r\n                    alignment: 'justify',\r\n                },\r\n            };\r\n            // @ts-ignore\r\n            pdfMake.createPdf(docDefinition).download('Credit Transactions.pdf');\r\n        } else if (this.category === 'Debit Transactions') {\r\n            // @ts-ignore\r\n            const docDefinition = {\r\n                pageSize: 'A4',\r\n                pageOrientation: 'landscape',\r\n                pageMargins: [20, 20, 20, 30],\r\n                content: [\r\n                    { text: this.category, style: 'header', alignment: 'center' },\r\n                    { text: '\\n' },\r\n                    { text: '\\n' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['12%', '*', '*', '*', '*', '*', '*', '*', '*', '*', '15%'],\r\n                            body: [\r\n                                [\r\n                                    {\r\n                                        text: 'Start Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right ',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('start').innerHTML,\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {\r\n                                        text: 'End Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('end').innerHTML,\r\n                                ],\r\n                            ],\r\n                        },\r\n                        layout: 'noBorders',\r\n                        alignment: 'center',\r\n                    },\r\n                    { text: '\\n' },\r\n                    { text: 'Debit Transactions', style: 'subheader' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['*', '50%', '*', '*', '*', '*'],\r\n                            headerRows: 1,\r\n                            body: this.createDebitBody(this.accountData),\r\n                        },\r\n                    },\r\n                ],\r\n                styles: {\r\n                    header: {\r\n                        fontSize: 18,\r\n                        bold: true,\r\n                        margin: [0, 0, 0, 10],\r\n                    },\r\n                    subheader: {\r\n                        fontSize: 16,\r\n                        bold: true,\r\n                        margin: [0, 10, 0, 5],\r\n                    },\r\n                    tableExample: {\r\n                        margin: [0, 15, 0, 15],\r\n                    },\r\n                    nestedTable: {\r\n                        margin: [5, 5, 5, 5],\r\n                    },\r\n                    tableHeader: {\r\n                        bold: true,\r\n                        fontSize: 13,\r\n                        color: 'black',\r\n                    },\r\n                },\r\n                defaultStyle: {\r\n                    alignment: 'justify',\r\n                },\r\n            };\r\n            // @ts-ignore\r\n            pdfMake.createPdf(docDefinition).download('Debit Transactions.pdf');\r\n        } else if (this.category === 'Expense Deductions') {\r\n            // @ts-ignore\r\n            const docDefinition = {\r\n                pageSize: 'A4',\r\n                pageOrientation: 'landscape',\r\n                pageMargins: [20, 20, 20, 30],\r\n                content: [\r\n                    { text: this.category, style: 'header', alignment: 'center' },\r\n                    { text: '\\n' },\r\n                    { text: '\\n' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['12%', '*', '*', '*', '*', '*', '*', '*', '*', '*', '15%'],\r\n                            body: [\r\n                                [\r\n                                    {\r\n                                        text: 'Start Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right ',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('start').innerHTML,\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {\r\n                                        text: 'End Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('end').innerHTML,\r\n                                ],\r\n                            ],\r\n                        },\r\n                        layout: 'noBorders',\r\n                        alignment: 'center',\r\n                    },\r\n                    { text: '\\n' },\r\n                    // @ts-ignore\r\n                    { text: document.getElementById('subDetail').innerText, style: 'subheader' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['16.66%', '50%', '*', '*', '*', '*'],\r\n                            headerRows: 1,\r\n                            body: this.createBody(this.accountData),\r\n                        },\r\n                    },\r\n                ],\r\n                styles: {\r\n                    header: {\r\n                        fontSize: 18,\r\n                        bold: true,\r\n                        margin: [0, 0, 0, 10],\r\n                    },\r\n                    subheader: {\r\n                        fontSize: 16,\r\n                        bold: true,\r\n                        margin: [0, 10, 0, 5],\r\n                    },\r\n                    tableExample: {\r\n                        margin: [0, 15, 0, 15],\r\n                    },\r\n                    nestedTable: {\r\n                        margin: [5, 5, 5, 5],\r\n                    },\r\n                    tableHeader: {\r\n                        bold: true,\r\n                        fontSize: 13,\r\n                        color: 'black',\r\n                    },\r\n                },\r\n                defaultStyle: {\r\n                    alignment: 'justify',\r\n                },\r\n            };\r\n            // @ts-ignore\r\n            pdfMake.createPdf(docDefinition).download('Expense Deduction Report.pdf');\r\n        } else {\r\n            // @ts-ignore\r\n            const docDefinition = {\r\n                pageSize: 'A4',\r\n                pageOrientation: 'landscape',\r\n                pageMargins: [20, 20, 20, 30],\r\n                content: [\r\n                    { text: this.category, style: 'header', alignment: 'center' },\r\n                    { text: '\\n' },\r\n                    { text: '\\n' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['12%', '*', '*', '*', '*', '*', '*', '*', '*', '*', '15%'],\r\n                            body: [\r\n                                [\r\n                                    {\r\n                                        text: 'Start Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right ',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('start').innerHTML,\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {},\r\n                                    {\r\n                                        text: 'End Date',\r\n                                        style: 'tableHeader',\r\n                                        alignment: 'right',\r\n                                    },\r\n                                    // @ts-ignore\r\n                                    document.getElementById('end').innerHTML,\r\n                                ],\r\n                            ],\r\n                        },\r\n                        layout: 'noBorders',\r\n                        alignment: 'center',\r\n                    },\r\n                    { text: '\\n' },\r\n                    { text: 'Credit + Debit + Expense Transactions', style: 'subheader' },\r\n                    {\r\n                        style: 'tableExample',\r\n                        table: {\r\n                            widths: ['*', '50%', '*', '*', '*', '*', '*'],\r\n                            headerRows: 1,\r\n                            body: this.createCDEBody(this.accountData),\r\n                        },\r\n                    },\r\n                ],\r\n                styles: {\r\n                    header: {\r\n                        fontSize: 18,\r\n                        bold: true,\r\n                        margin: [0, 0, 0, 10],\r\n                    },\r\n                    subheader: {\r\n                        fontSize: 16,\r\n                        bold: true,\r\n                        margin: [0, 10, 0, 5],\r\n                    },\r\n                    tableExample: {\r\n                        margin: [0, 15, 0, 15],\r\n                    },\r\n                    nestedTable: {\r\n                        margin: [5, 5, 5, 5],\r\n                    },\r\n                    tableHeader: {\r\n                        bold: true,\r\n                        fontSize: 13,\r\n                        color: 'black',\r\n                    },\r\n                },\r\n                defaultStyle: {\r\n                    alignment: 'justify',\r\n                },\r\n            };\r\n            // @ts-ignore\r\n            pdfMake.createPdf(docDefinition).download('Credit+Debit+Expense Transactions.pdf');\r\n        }\r\n        this.dialogRef.close(true);\r\n    }\r\n    isDate(d: any) {\r\n        const result = Date.parse(d);\r\n        if (!result) return false;\r\n        else return true;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { UploadAllComponent } from './upload-all.component';\r\n\r\nconst routes: Routes = [{ path: '', component: UploadAllComponent }];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class UploadAllRoutingModule {}\r\n","export default \".error-box {\\n  padding: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBsb2FkLWFsbC9DOlxcVXNlcnNcXFBSQUtIQVJcXERvY3VtZW50c1xcQW5ndWxhciBQcm9qZWN0XFxLb3NoaW1hXFxTb2NpZXR5X0Jhbmtpbmcvc3JjXFxhcHBcXHVwbG9hZC1hbGxcXHVwbG9hZC1hbGwuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3VwbG9hZC1hbGwvdXBsb2FkLWFsbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3VwbG9hZC1hbGwvdXBsb2FkLWFsbC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1ib3gge1xyXG4gICAgcGFkZGluZzogMTBweDtcclxufVxyXG4iLCIuZXJyb3ItYm94IHtcbiAgcGFkZGluZzogMTBweDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogComponent } from '@app/upload-all/dialog/dialog.component';\r\nimport { UploadAllService } from '@app/upload-all/services';\r\n// @ts-ignore\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'sb-upload-all',\r\n    templateUrl: './upload-all.component.html',\r\n    styleUrls: ['./upload-all.component.scss'],\r\n})\r\nexport class UploadAllComponent implements OnInit {\r\n    employeeAccount = true;\r\n    bankAccount = false;\r\n    report = false;\r\n    disable = true;\r\n    check = null;\r\n    bankForm: FormGroup;\r\n    employeeForm: FormGroup;\r\n    reportForm: FormGroup;\r\n    bankList: any;\r\n    constructor(\r\n        private service: UploadAllService,\r\n        private dialog: MatDialog,\r\n        public fb: FormBuilder\r\n    ) {\r\n        this.employeeForm = this.fb.group({\r\n            employeeId: new FormControl('', Validators.compose([Validators.required])),\r\n            employeeName: new FormControl('', Validators.compose([Validators.required])),\r\n            fatherName: new FormControl(''),\r\n            permAddress: new FormControl(''),\r\n            check: new FormControl(''),\r\n            currAddress: new FormControl(''),\r\n            email: new FormControl('', Validators.compose([Validators.email])),\r\n            mobileNo: new FormControl(\r\n                '',\r\n                Validators.compose([Validators.min(1000000000), Validators.max(9999999999)])\r\n            ),\r\n            altMobileNo: new FormControl(\r\n                '',\r\n                Validators.compose([Validators.min(1000000000), Validators.max(9999999999)])\r\n            ),\r\n            landlineNo: new FormControl(\r\n                '',\r\n                Validators.compose([Validators.pattern('^[0-9]d{2,4}-d{6,8}$')])\r\n            ),\r\n            pan: new FormControl(\r\n                '',\r\n                Validators.compose([Validators.pattern('[A-Z]{5}[0-9]{4}[A-Z]{1}')])\r\n            ),\r\n            aadharNo: new FormControl(\r\n                '',\r\n                Validators.compose([Validators.pattern('^[2-9]{1}[0-9]{3}\\\\s[0-9]{4}\\\\s[0-9]{4}$')])\r\n            ),\r\n            enrollDate: new FormControl('', Validators.compose([Validators.required])),\r\n            amount: new FormControl('', Validators.compose([Validators.required])),\r\n            type: new FormControl('', Validators.compose([Validators.required])),\r\n            bankName: new FormControl('', Validators.compose([Validators.required])),\r\n            chequeDate: new FormControl('', Validators.compose([Validators.required])),\r\n            chequeNo: new FormControl('', Validators.compose([Validators.required])),\r\n            purpose: new FormControl('', Validators.compose([Validators.required])),\r\n        });\r\n        this.bankForm = this.fb.group({\r\n            bankName: new FormControl('', Validators.compose([Validators.required])),\r\n            bankAddress: new FormControl('', Validators.compose([Validators.required])),\r\n            accountNo: new FormControl(\r\n                '',\r\n                Validators.compose([Validators.required, Validators.pattern('^\\\\d{9,18}$')])\r\n            ),\r\n            accountType: new FormControl('', Validators.compose([Validators.required])),\r\n            nickName: new FormControl('', Validators.compose([Validators.required])),\r\n            code: new FormControl(\r\n                '',\r\n                Validators.compose([\r\n                    Validators.required,\r\n                    Validators.minLength(11),\r\n                    Validators.pattern('^[A-Z]{4}[0][A-Z0-9]{6}$'),\r\n                ])\r\n            ),\r\n        });\r\n        this.reportForm = this.fb.group({\r\n            startDate: new FormControl('', Validators.compose([Validators.required])),\r\n            endDate: new FormControl('', Validators.compose([Validators.required])),\r\n            category: new FormControl('', Validators.compose([Validators.required])),\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.service.getBankList().subscribe(result => {\r\n            this.bankList = result;\r\n            console.log(this.bankList);\r\n        });\r\n    }\r\n    send() {\r\n        if (\r\n            // @ts-ignore\r\n            !this.employeeForm.get('employeeId').value ||\r\n            // @ts-ignore\r\n            !this.employeeForm.get('employeeName').value ||\r\n            // @ts-ignore\r\n            !this.employeeForm.get('enrollDate').value ||\r\n            // @ts-ignore\r\n            !this.employeeForm.get('amount').value ||\r\n            // @ts-ignore\r\n            !this.employeeForm.get('type').value ||\r\n            // @ts-ignore\r\n            !this.employeeForm.get('purpose').value\r\n        ) {\r\n            Swal.fire({\r\n                title: 'Oops!',\r\n                text: 'Fill Mandatory Fields!',\r\n                icon: 'error',\r\n            });\r\n        } else if (\r\n            // @ts-ignore\r\n            this.employeeForm.get('type').value === 'Cheque' &&\r\n            // @ts-ignore\r\n            (!this.employeeForm.get('chequeDate').value ||\r\n                // @ts-ignore\r\n                !this.employeeForm.get('chequeNo').value ||\r\n                // @ts-ignore\r\n                !this.employeeForm.get('bankName').value\r\n            )\r\n        ) {\r\n            Swal.fire({\r\n                title: 'Oops!',\r\n                text: 'Fill Mandatory Fields!',\r\n                icon: 'error',\r\n            });\r\n        } else {\r\n            let pass = '';\r\n            const str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz0123456789@#$';\r\n            for (let i = 1; i <= 5; i++) {\r\n                const char = Math.floor(Math.random() * str.length + 1);\r\n                pass += str.charAt(char);\r\n            }\r\n            // @ts-ignore\r\n            const passw = pass.slice(0, 3) + this.employeeForm.get('employeeName').value.slice(0, 2) + pass.slice(3);\r\n            const data = {\r\n                // @ts-ignore\r\n                userId: this.employeeForm.get('employeeId').value,\r\n                // @ts-ignore\r\n                name: this.employeeForm.get('employeeName').value,\r\n                password: passw,\r\n                // @ts-ignore\r\n                fatherName: this.employeeForm.get('fatherName').value,\r\n                // @ts-ignore\r\n                permanentAddress: this.employeeForm.get('permAddress').value,\r\n                // @ts-ignore\r\n                currentAddress: this.employeeForm.get('currAddress').value,\r\n                // @ts-ignore\r\n                email: this.employeeForm.get('email').value,\r\n                // @ts-ignore\r\n                mobileNo1: this.employeeForm.get('mobileNo').value,\r\n                // @ts-ignore\r\n                mobileNo2: this.employeeForm.get('altMobileNo').value,\r\n                // @ts-ignore\r\n                landline: this.employeeForm.get('landlineNo').value,\r\n                // @ts-ignore\r\n                pan: this.employeeForm.get('pan').value,\r\n                // @ts-ignore\r\n                aadharNo: this.employeeForm.get('aadharNo').value,\r\n                // @ts-ignore\r\n                enrollmentDate: this.employeeForm.get('enrollDate').value,\r\n                roleId: 2,\r\n                closeAccount: false,\r\n                // @ts-ignore\r\n                credit: this.employeeForm.get('amount').value,\r\n                // @ts-ignore\r\n                mode: this.employeeForm.get('type').value,\r\n                // @ts-ignore\r\n                bankName: this.employeeForm.get('bankName').value,\r\n                // @ts-ignore\r\n                chequeDate: this.employeeForm.get('chequeDate').value,\r\n                // @ts-ignore\r\n                chequeNo: this.employeeForm.get('chequeNo').value,\r\n                // @ts-ignore\r\n                particulars: this.employeeForm.get('purpose').value,\r\n            };\r\n            console.log(data);\r\n            this.service.sendData(data).subscribe(\r\n                result => {\r\n                    if (result) {\r\n                        Swal.fire({\r\n                            text: 'Account Created',\r\n                            icon: 'success',\r\n                        }).then((isConfirm: any) => {\r\n                            if (isConfirm) {\r\n                                this.employeeForm = this.fb.group({\r\n                                    employeeId: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    employeeName: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    fatherName: new FormControl(''),\r\n                                    permAddress: new FormControl(''),\r\n                                    currAddress: new FormControl(''),\r\n                                    email: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.email])\r\n                                    ),\r\n                                    mobileNo: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.minLength(10)])\r\n                                    ),\r\n                                    altMobileNo: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.minLength(10)])\r\n                                    ),\r\n                                    landlineNo: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([\r\n                                            Validators.pattern('^[0-9]d{2,4}-d{6,8}$'),\r\n                                        ])\r\n                                    ),\r\n                                    pan: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([\r\n                                            Validators.pattern('[A-Z]{5}[0-9]{4}[A-Z]{1}'),\r\n                                        ])\r\n                                    ),\r\n                                    aadharNo: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([\r\n                                            Validators.pattern(\r\n                                                '^[2-9]{1}[0-9]{3}\\\\s[0-9]{4}\\\\s[0-9]{4}$'\r\n                                            ),\r\n                                        ])\r\n                                    ),\r\n                                    enrollDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    amount: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    type: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    bankName: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    chequeDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    chequeNo: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    purpose: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n    showEmployeeAccountInfo() {\r\n        this.employeeAccount = true;\r\n        this.bankAccount = false;\r\n        this.report = false;\r\n    }\r\n    showBankAccountInfo() {\r\n        this.bankAccount = true;\r\n        this.report = false;\r\n        this.employeeAccount = false;\r\n    }\r\n    showReportInfo() {\r\n        this.report = true;\r\n        this.employeeAccount = false;\r\n        this.bankAccount = false;\r\n    }\r\n    sameAddress(event: any) {\r\n        console.log(event.target.checked);\r\n        if (event.target.checked) {\r\n            // @ts-ignore\r\n            this.employeeForm.get('currAddress').setValue(this.employeeForm.get('permAddress').value);\r\n        } else {\r\n            // @ts-ignore\r\n            this.employeeForm.get('currAddress').setValue(null);\r\n        }\r\n    }\r\n    openDialog() {\r\n        const data = {\r\n            // @ts-ignore\r\n            start: this.reportForm.get('startDate').value,\r\n            // @ts-ignore\r\n            end: this.reportForm.get('endDate').value,\r\n            // @ts-ignore\r\n            category: this.reportForm.get('category').value,\r\n        };\r\n        console.log(data);\r\n        if (\r\n            // @ts-ignore\r\n            this.reportForm.get('category').value === 'Loan Disbursal Records'\r\n        ) {\r\n            this.service.getLoanData(data).subscribe(\r\n                result => {\r\n                    console.log(result);\r\n                    if (result.loanData.length === 0) {\r\n                        Swal.fire({\r\n                            title: 'Oops!',\r\n                            text: 'Data in this range does not exists!',\r\n                            icon: 'error',\r\n                        });\r\n                    } else {\r\n                        console.log(result);\r\n                        const dialogRef = this.dialog.open(DialogComponent, {\r\n                            data: {\r\n                                loan: result.loanData,\r\n                                // @ts-ignore\r\n                                start: this.reportForm.get('startDate').value,\r\n                                // @ts-ignore\r\n                                end: this.reportForm.get('endDate').value,\r\n                                // @ts-ignore\r\n                                category: this.reportForm.get('category').value,\r\n                            },\r\n                            height: '600px',\r\n                            width: '850px',\r\n                        });\r\n                        dialogRef.afterClosed().subscribe(ress => {\r\n                            console.log(ress);\r\n                            if (ress === '') {\r\n                                console.log(ress);\r\n                                this.reportForm = this.fb.group({\r\n                                    startDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    endDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    category: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        } else if (\r\n            // @ts-ignore\r\n            this.reportForm.get('category').value === 'Credit Transactions'\r\n        ) {\r\n            this.service.getCreditData(data).subscribe(\r\n                result => {\r\n                    console.log(result);\r\n                    if (result.accountData.length === 0) {\r\n                        Swal.fire({\r\n                            title: 'Oops!',\r\n                            text: 'Data in this range does not exists!',\r\n                            icon: 'error',\r\n                        });\r\n                    } else {\r\n                        console.log(result);\r\n                        const dialogRef = this.dialog.open(DialogComponent, {\r\n                            data: {\r\n                                accountData: result.accountData,\r\n                                // @ts-ignore\r\n                                start: this.reportForm.get('startDate').value,\r\n                                // @ts-ignore\r\n                                end: this.reportForm.get('endDate').value,\r\n                                // @ts-ignore\r\n                                category: this.reportForm.get('category').value,\r\n                            },\r\n                            height: '600px',\r\n                            width: '850px',\r\n                        });\r\n                        dialogRef.afterClosed().subscribe(ress => {\r\n                            if (ress === '') {\r\n                                console.log(ress);\r\n                                this.reportForm = this.fb.group({\r\n                                    startDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    endDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    category: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        } else if (\r\n            // @ts-ignore\r\n            this.reportForm.get('category').value === 'Debit Transactions'\r\n        ) {\r\n            this.service.getDebitData(data).subscribe(\r\n                result => {\r\n                    console.log(result);\r\n                    if (result.accountData.length === 0) {\r\n                        Swal.fire({\r\n                            title: 'Oops!',\r\n                            text: 'Data in this range does not exists!',\r\n                            icon: 'error',\r\n                        });\r\n                    } else {\r\n                        console.log(result);\r\n                        const dialogRef = this.dialog.open(DialogComponent, {\r\n                            data: {\r\n                                accountData: result.accountData,\r\n                                // @ts-ignore\r\n                                start: this.reportForm.get('startDate').value,\r\n                                // @ts-ignore\r\n                                end: this.reportForm.get('endDate').value,\r\n                                // @ts-ignore\r\n                                category: this.reportForm.get('category').value,\r\n                            },\r\n                            height: '600px',\r\n                            width: '850px',\r\n                        });\r\n                        dialogRef.afterClosed().subscribe(ress => {\r\n                            if (ress === '') {\r\n                                console.log(ress);\r\n                                this.reportForm = this.fb.group({\r\n                                    startDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    endDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    category: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        } else if (\r\n            // @ts-ignore\r\n            this.reportForm.get('category').value === 'Expense Deductions'\r\n        ) {\r\n            this.service.getExpenseData(data).subscribe(\r\n                result => {\r\n                    console.log(result);\r\n                    if (result.accountData.length === 0) {\r\n                        Swal.fire({\r\n                            title: 'Oops!',\r\n                            text: 'Data in this range does not exists!',\r\n                            icon: 'error',\r\n                        });\r\n                    } else {\r\n                        console.log(result);\r\n                        const dialogRef = this.dialog.open(DialogComponent, {\r\n                            data: {\r\n                                accountData: result.accountData,\r\n                                // @ts-ignore\r\n                                start: this.reportForm.get('startDate').value,\r\n                                // @ts-ignore\r\n                                end: this.reportForm.get('endDate').value,\r\n                                // @ts-ignore\r\n                                category: this.reportForm.get('category').value,\r\n                            },\r\n                            height: '600px',\r\n                            width: '850px',\r\n                        });\r\n                        dialogRef.afterClosed().subscribe(ress => {\r\n                            if (ress === '') {\r\n                                console.log(ress);\r\n                                this.reportForm = this.fb.group({\r\n                                    startDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    endDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    category: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        } else if (\r\n            // @ts-ignore\r\n            this.reportForm.get('category').value === 'Credit+Debit+Expense Transactions'\r\n        ) {\r\n            this.service.getCreditDebitExpenseData(data).subscribe(\r\n                result => {\r\n                    console.log(result);\r\n                    if (result.accountData.length === 0) {\r\n                        Swal.fire({\r\n                            title: 'Oops!',\r\n                            text: 'Data in this range does not exists!',\r\n                            icon: 'error',\r\n                        });\r\n                    } else {\r\n                        console.log(result);\r\n                        const dialogRef = this.dialog.open(DialogComponent, {\r\n                            data: {\r\n                                accountData: result.accountData,\r\n                                // @ts-ignore\r\n                                start: this.reportForm.get('startDate').value,\r\n                                // @ts-ignore\r\n                                end: this.reportForm.get('endDate').value,\r\n                                // @ts-ignore\r\n                                category: this.reportForm.get('category').value,\r\n                            },\r\n                            height: '600px',\r\n                            width: '850px',\r\n                        });\r\n                        dialogRef.afterClosed().subscribe(ress => {\r\n                            if (ress === '') {\r\n                                console.log(ress);\r\n                                this.reportForm = this.fb.group({\r\n                                    startDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    endDate: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                    category: new FormControl(\r\n                                        '',\r\n                                        Validators.compose([Validators.required])\r\n                                    ),\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        } else if (\r\n            // @ts-ignore\r\n            this.reportForm.get('category').value === 'All Cash Transactions'\r\n        ) {\r\n            this.service.getCashData(data).subscribe(\r\n                result => {\r\n                    console.log(result);\r\n                    if (result.accountData.length === 0) {\r\n                        Swal.fire({\r\n                            title: 'Oops!',\r\n                            text: 'Data in this range does not exists!',\r\n                            icon: 'error',\r\n                        });\r\n                    } else {\r\n                        console.log(result);\r\n                        const dialogRef = this.dialog.open(DialogComponent, {\r\n                            data: {\r\n                                accountData: result.accountData,\r\n                                // @ts-ignore\r\n                                start: this.reportForm.get('startDate').value,\r\n                                // @ts-ignore\r\n                                end: this.reportForm.get('endDate').value,\r\n                                // @ts-ignore\r\n                                category: this.reportForm.get('category').value,\r\n                            },\r\n                            height: '600px',\r\n                            width: '850px',\r\n                        });\r\n                        dialogRef.afterClosed().subscribe(ress => {\r\n                            this.reportForm = this.fb.group({\r\n                                startDate: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([Validators.required])\r\n                                ),\r\n                                endDate: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([Validators.required])\r\n                                ),\r\n                                category: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([Validators.required])\r\n                                ),\r\n                            });\r\n                        });\r\n                    }\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            this.service.getChequeData(data).subscribe(\r\n                result => {\r\n                    console.log(result);\r\n                    if (result.accountData.length === 0) {\r\n                        Swal.fire({\r\n                            title: 'Oops!',\r\n                            text: 'Data in this range does not exists!',\r\n                            icon: 'error',\r\n                        });\r\n                    } else {\r\n                        console.log(result);\r\n                        const dialogRef = this.dialog.open(DialogComponent, {\r\n                            data: {\r\n                                accountData: result.accountData,\r\n                                // @ts-ignore\r\n                                start: this.reportForm.get('startDate').value,\r\n                                // @ts-ignore\r\n                                end: this.reportForm.get('endDate').value,\r\n                                // @ts-ignore\r\n                                category: this.reportForm.get('category').value,\r\n                            },\r\n                            height: '600px',\r\n                            width: '850px',\r\n                        });\r\n                        dialogRef.afterClosed().subscribe(ress => {\r\n                            this.reportForm = this.fb.group({\r\n                                startDate: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([Validators.required])\r\n                                ),\r\n                                endDate: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([Validators.required])\r\n                                ),\r\n                                category: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([Validators.required])\r\n                                ),\r\n                            });\r\n                        });\r\n                    }\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n    sendBankData() {\r\n        const data = {\r\n            // @ts-ignore\r\n            bankName: this.bankForm.get('bankName').value,\r\n            // @ts-ignore\r\n            bankAddress: this.bankForm.get('bankAddress').value,\r\n            // @ts-ignore\r\n            accountNo: this.bankForm.get('accountNo').value,\r\n            // @ts-ignore\r\n            accountType: this.bankForm.get('accountType').value,\r\n            // @ts-ignore\r\n            nickname: this.bankForm.get('nickName').value,\r\n            // @ts-ignore\r\n            code: this.bankForm.get('code').value,\r\n        };\r\n        console.log(data);\r\n        this.service.sendBankData(data).subscribe(\r\n            result => {\r\n                if (result) {\r\n                    Swal.fire({\r\n                        text: 'Account Created',\r\n                        icon: 'success',\r\n                    }).then((isConfirm: any) => {\r\n                        if (isConfirm) {\r\n                            this.bankForm = this.fb.group({\r\n                                bankName: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([Validators.required])\r\n                                ),\r\n                                bankAddress: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([Validators.required])\r\n                                ),\r\n                                accountNo: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([\r\n                                        Validators.required,\r\n                                        Validators.pattern('^\\\\d{9,18}$'),\r\n                                    ])\r\n                                ),\r\n                                accountType: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([Validators.required])\r\n                                ),\r\n                                nickName: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([Validators.required])\r\n                                ),\r\n                                code: new FormControl(\r\n                                    '',\r\n                                    Validators.compose([\r\n                                        Validators.required,\r\n                                        Validators.minLength(11),\r\n                                        Validators.pattern('^[A-Z]{4}[0][A-Z0-9]{6}$'),\r\n                                    ])\r\n                                ),\r\n                            });\r\n                            this.service.getBankList().subscribe(ress => {\r\n                                this.bankList = ress;\r\n                                console.log(this.bankList);\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppCommonModule } from '@app/app-common/app-common.module';\r\nimport { NavigationModule } from '@app/navigation/navigation.module';\r\nimport * as service from '@app/upload-all/services';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { UploadAllRoutingModule } from './upload-all-routing.module';\r\nimport { UploadAllComponent } from './upload-all.component';\r\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\r\n\r\n@NgModule({\r\n    declarations: [UploadAllComponent, DialogComponent],\r\n    imports: [\r\n        CommonModule,\r\n        UploadAllRoutingModule,\r\n        NavigationModule,\r\n        AppCommonModule,\r\n        TranslateModule,\r\n        FormsModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSnackBarModule,\r\n        LayoutDashboardModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    providers: [...service.services],\r\n    entryComponents: [DialogComponent],\r\n})\r\nexport class UploadAllModule {}\r\n"],"sourceRoot":"webpack:///"}