{"version":3,"sources":["./src/app/miscellaneous-page/miscellaneous-page/miscellaneous-page.component.html","./src/app/miscellaneous-page/miscellaneous-page-routing.module.ts","./src/app/miscellaneous-page/miscellaneous-page.module.ts","./src/app/miscellaneous-page/miscellaneous-page/miscellaneous-page.component.scss","./src/app/miscellaneous-page/miscellaneous-page/miscellaneous-page.component.ts","./src/app/miscellaneous-page/services/index.ts","./src/app/miscellaneous-page/services/miscellaneous.service.ts"],"names":[],"mappings":"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","file":"miscellaneous-page-miscellaneous-page-module-es2015.js","sourcesContent":["export default \"<sb-layout-dashboard>\\r\\n    <sb-dashboard-head title=\\\"{{'Accountant.Pages.Transfer'| translate}}\\\"></sb-dashboard-head>\\r\\n    <hr class=\\\"rounded\\\">\\r\\n    <br>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-1\\\"></div>\\r\\n        <div class=\\\"col\\\">\\r\\n            <button class=\\\"btn-primary\\\" (click)=\\\"showSearch()\\\">{{'Accountant.Tables.SearchCheque'| translate}}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n            <button class=\\\"btn-primary\\\" (click)=\\\"showCash()\\\">{{'Accountant.Tables.TransferCash'| translate}}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n            <button class=\\\"btn-primary\\\" (click)=\\\"showCheque()\\\">{{'Accountant.Tables.TransferBank'| translate}}</button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <br>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"search\\\">\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Tables.SearchCheque'| translate}}</div>\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <form class=\\\"form-inline\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"showTable()\\\">\\r\\n                        <label>\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"Enter Cheque Number\\\" formControlName=\\\"chequeNo\\\"/>\\r\\n                        </label>\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!searchForm.valid\\\">{{'Accountant.GetInfo'| translate}}</button>\\r\\n                    </form>\\r\\n                    <table class=\\\"table table-striped\\\" *ngIf=\\\"table\\\" id=\\\"contennnt\\\">\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.ShowDate'| translate}}</td>\\r\\n                            <td>{{date| date:'dd-MM-yyyy'}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.AmountReceived'| translate}}</td>\\r\\n                            <td>{{amount| indianCurrency}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.ChequeDate'| translate}}</td>\\r\\n                            <td>{{chequeDate| date:'dd-MM-yyyy'}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.BankName'| translate}}</td>\\r\\n                            <td>{{bankName}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.EmployeeNo'| translate}}</td>\\r\\n                            <td>{{employeeId}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.EmployeeName'| translate}}</td>\\r\\n                            <td>{{employeeName}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{'Accountant.Tables.Purpose'| translate}}</td>\\r\\n                            <td>{{purpose}}</td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </sb-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"cash\\\">\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Tables.TransferCash'| translate}}</div>\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <form [formGroup]=\\\"cashForm\\\" (ngSubmit)=\\\"send()\\\">\\r\\n                        <table class=\\\"table table-striped\\\" id=\\\"contennt\\\">\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Date'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"date\\\" formControlName=\\\"date\\\"/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"cashForm.get('date').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Amount'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" formControlName=\\\"amount\\\"/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"cashForm.get('amount').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.BankName' | translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <select class=\\\"custom-select\\\" formControlName=\\\"bankName\\\">\\r\\n                                            <option *ngFor=\\\"let val of bankList\\\">{{val.bankName}}</option>\\r\\n                                        </select>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"cashForm.get('bankName').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!cashForm.valid\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </sb-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"cheque\\\">\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n        <div class=\\\"col-xl-8 col-md-10\\\">\\r\\n            <sb-card>\\r\\n                <div class=\\\"card-header\\\"><fa-icon class=\\\"mr-1\\\" [icon]='[\\\"fas\\\", \\\"table\\\"]'></fa-icon>{{'Accountant.Tables.TransferBank'| translate}}</div>\\r\\n                <div class=\\\"card-body table-responsive\\\">\\r\\n                    <form [formGroup]=\\\"chequeForm\\\" (ngSubmit)=\\\"send()\\\">\\r\\n                        <table class=\\\"table table-striped\\\" id=\\\"contentt\\\">\\r\\n                            <tbody>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Date'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"date\\\" formControlName=\\\"date\\\" required/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"chequeForm.get('date').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.Amount'| translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"number\\\" formControlName=\\\"amount\\\" required/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"chequeForm.get('amount').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.BankName' | translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <select class=\\\"custom-select\\\" formControlName=\\\"bankName\\\">\\r\\n                                            <option *ngFor=\\\"let val of bankList\\\">{{val.bankName}}</option>\\r\\n                                        </select>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"chequeForm.get('bankName').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.ChequeDate' | translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"date\\\" formControlName=\\\"chequeDate\\\"/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"chequeForm.get('chequeDate').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Accountant.Tables.ChequeNo' | translate}}</td>\\r\\n                                <td>\\r\\n                                    <label>\\r\\n                                        <input type=\\\"text\\\" formControlName=\\\"chequeNo\\\"/>\\r\\n                                    </label>\\r\\n                                    <div class=\\\"alert alert-danger error-box\\\" *ngIf=\\\"chequeForm.get('chequeNo').hasError('required')\\\">Required!</div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!chequeForm.valid\\\">{{'Accountant.Tables.Submit'| translate}}</button>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </sb-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-2 col-md-1\\\"></div>\\r\\n    </div>\\r\\n</sb-layout-dashboard>\\r\\n\\r\\n\\r\\n\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MiscellaneousPageComponent } from '@app/miscellaneous-page/miscellaneous-page/miscellaneous-page.component';\r\n\r\n\r\nconst routes: Routes = [{ path: '', component: MiscellaneousPageComponent}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MiscellaneousPageRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppCommonModule } from '@app/app-common/app-common.module';\r\nimport * as service from '@app/miscellaneous-page/services';\r\nimport { NavigationModule } from '@app/navigation/navigation.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { MiscellaneousPageRoutingModule } from './miscellaneous-page-routing.module';\r\nimport { MiscellaneousPageComponent } from './miscellaneous-page/miscellaneous-page.component';\r\nimport { LayoutDashboardModule } from '@app/layout-dashboard/layout-dashboard.module';\r\n\r\n@NgModule({\r\n    declarations: [MiscellaneousPageComponent],\r\n    imports: [\r\n        CommonModule,\r\n        MiscellaneousPageRoutingModule,\r\n        NavigationModule,\r\n        AppCommonModule,\r\n        TranslateModule,\r\n        FormsModule,\r\n        LayoutDashboardModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    providers: [...service.services],\r\n})\r\nexport class MiscellaneousPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21pc2NlbGxhbmVvdXMtcGFnZS9taXNjZWxsYW5lb3VzLXBhZ2UvbWlzY2VsbGFuZW91cy1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MiscellaneousService } from '@app/miscellaneous-page/services';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\n// @ts-ignore\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\n@Component({\r\n    selector: 'sb-miscellaneous-page',\r\n    templateUrl: './miscellaneous-page.component.html',\r\n    styleUrls: ['./miscellaneous-page.component.scss'],\r\n})\r\nexport class MiscellaneousPageComponent implements OnInit {\r\n    cheque = false;\r\n    cash = false;\r\n    search = true;\r\n    table = false;\r\n    date: any;\r\n    amount: any;\r\n    bankName: any;\r\n    chequeDate: any;\r\n    chequeNo: any;\r\n    employeeId: any;\r\n    employeeName: any;\r\n    text: any;\r\n    purpose: any;\r\n    bankList: any;\r\n    searchForm: FormGroup;\r\n    cashForm: FormGroup;\r\n    chequeForm: FormGroup;\r\n    constructor(\r\n        private service: MiscellaneousService,\r\n        public session: SessionStorageService,\r\n        public fb: FormBuilder\r\n    ) {\r\n        this.searchForm = this.fb.group({\r\n            chequeNo: new FormControl('', Validators.compose([Validators.required])),\r\n        });\r\n        this.cashForm = this.fb.group({\r\n            date: new FormControl('', Validators.compose([Validators.required])),\r\n            amount: new FormControl('', Validators.compose([Validators.required])),\r\n            bankName: new FormControl('', Validators.compose([Validators.required])),\r\n        });\r\n        this.chequeForm = this.fb.group({\r\n            date: new FormControl('', Validators.compose([Validators.required])),\r\n            amount: new FormControl('', Validators.compose([Validators.required])),\r\n            bankName: new FormControl('', Validators.compose([Validators.required])),\r\n            chequeDate: new FormControl('', Validators.compose([Validators.required])),\r\n            chequeNo: new FormControl('', Validators.compose([Validators.required])),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.service.getBankList().subscribe(result => {\r\n            this.bankList = result;\r\n            console.log(this.bankList);\r\n        });\r\n        const user = this.session.retrieve('user');\r\n        this.text = user.id;\r\n    }\r\n\r\n    send() {\r\n        if (this.cash) {\r\n            const data = {\r\n                userId: this.text,\r\n                // @ts-ignore\r\n                date: this.cashForm.get('date').value,\r\n                mode: 'Cash',\r\n                typeCash: 'Transfer Cash',\r\n                typeBank: 'Transfer Bank',\r\n                // @ts-ignore\r\n                amount: this.cashForm.get('amount').value,\r\n                // @ts-ignore\r\n                bankName: this.cashForm.get('bankName').value,\r\n                cashPurpose:\r\n                    'Transfered to ' +\r\n                    // @ts-ignore\r\n                    this.cashForm.get('bankName').value +\r\n                    ' on ' +\r\n                    // @ts-ignore\r\n                    this.cashForm.get('date').value,\r\n                // @ts-ignore\r\n                bankPurpose: 'Transfered from Cash Account on ' + this.cashForm.get('date').value,\r\n            };\r\n            console.log(data);\r\n            this.service.transferCash(data).subscribe(\r\n                result => {\r\n                    Swal.fire({\r\n                        text: 'Sent!',\r\n                        icon: 'success',\r\n                    }).then((isConfirm: any) => {\r\n                        if (isConfirm) {\r\n                            // @ts-ignore\r\n                            this.date = null;\r\n                            this.chequeNo = null;\r\n                            this.chequeDate = null;\r\n                            this.bankName = null;\r\n                            this.purpose = null;\r\n                            this.employeeId = null;\r\n                            this.employeeName = null;\r\n                            this.amount = null;\r\n                            this.cashForm = this.fb.group({\r\n                                date: new FormControl('', Validators.compose([Validators.required])),\r\n                                amount: new FormControl('', Validators.compose([Validators.required])),\r\n                                bankName: new FormControl('', Validators.compose([Validators.required])),\r\n                            });\r\n                        }\r\n                    });\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        } else {\r\n            const data = {\r\n                userId: this.text,\r\n                // @ts-ignore\r\n                date: this.chequeForm.get('date').value,\r\n                mode: 'Cheque',\r\n                typeCash: 'Transfer Cash',\r\n                typeBank: 'Transfer Bank',\r\n                // @ts-ignore\r\n                amount: this.chequeForm.get('amount').value,\r\n                // @ts-ignore\r\n                bankName: this.chequeForm.get('bankName').value,\r\n                // @ts-ignore\r\n                chequeDate: this.chequeForm.get('chequeDate').value,\r\n                // @ts-ignore\r\n                chequeNo: this.chequeForm.get('chequeNo').value,\r\n                // @ts-ignore\r\n                cashPurpose:\r\n                    'Transfered from ' +\r\n                    // @ts-ignore\r\n                    this.chequeForm.get('bankName').value +\r\n                    ' on ' +\r\n                    // @ts-ignore\r\n                    this.chequeForm.get('date').value,\r\n                // @ts-ignore\r\n                bankPurpose: 'Transfered to Cash Account on ' + this.chequeForm.get('date').value,\r\n            };\r\n            console.log(data);\r\n            this.service.withdrawCash(data).subscribe(\r\n                result => {\r\n                    Swal.fire({\r\n                        text: 'Sent!',\r\n                        icon: 'success',\r\n                    }).then((isConfirm: any) => {\r\n                        if (isConfirm) {\r\n                            // @ts-ignore\r\n                            this.date = null;\r\n                            this.chequeNo = null;\r\n                            this.chequeDate = null;\r\n                            this.bankName = null;\r\n                            this.purpose = null;\r\n                            this.employeeId = null;\r\n                            this.employeeName = null;\r\n                            this.amount = null;\r\n                            this.chequeForm = this.fb.group({\r\n                                date: new FormControl('', Validators.compose([Validators.required])),\r\n                                amount: new FormControl('', Validators.compose([Validators.required])),\r\n                                bankName: new FormControl('', Validators.compose([Validators.required])),\r\n                                chequeDate: new FormControl('', Validators.compose([Validators.required])),\r\n                                chequeNo: new FormControl('', Validators.compose([Validators.required])),\r\n                                purpose: new FormControl('', Validators.compose([Validators.required])),\r\n                            });\r\n                        }\r\n                    });\r\n                },\r\n                error1 => {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'Try again!',\r\n                        icon: 'error',\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    showCheque() {\r\n        this.cheque = true;\r\n        this.search = false;\r\n        this.cash = false;\r\n        this.date = null;\r\n        this.chequeNo = null;\r\n        this.chequeDate = null;\r\n        this.bankName = null;\r\n        this.purpose = null;\r\n        this.employeeId = null;\r\n        this.employeeName = null;\r\n        this.amount = null;\r\n        this.searchForm = this.fb.group({\r\n            chequeNo: new FormControl('', Validators.compose([Validators.required])),\r\n        });\r\n    }\r\n\r\n    showCash() {\r\n        this.cheque = false;\r\n        this.search = false;\r\n        this.cash = true;\r\n        this.date = null;\r\n        this.chequeNo = null;\r\n        this.chequeDate = null;\r\n        this.bankName = null;\r\n        this.purpose = null;\r\n        this.employeeId = null;\r\n        this.employeeName = null;\r\n        this.amount = null;\r\n    }\r\n\r\n    showTable() {\r\n        this.date = null;\r\n        this.chequeDate = null;\r\n        this.bankName = null;\r\n        this.purpose = null;\r\n        this.employeeId = null;\r\n        this.employeeName = null;\r\n        this.amount = null;\r\n        this.table = false;\r\n        // @ts-ignore\r\n        this.chequeNo = this.searchForm.get('chequeNo').value;\r\n        console.log(this.chequeNo);\r\n        this.service.searchCheque(this.chequeNo).subscribe(\r\n            result => {\r\n                console.log(result.data);\r\n                if (result.data.length === 0) {\r\n                    Swal.fire({\r\n                        title: 'Oops!',\r\n                        text: 'This cheque does not exists!',\r\n                        icon: 'error',\r\n                    });\r\n                } else {\r\n                    console.log(result.data);\r\n                    this.date = result.data[0].date;\r\n                    this.chequeDate = result.data[0].chequeDate;\r\n                    this.bankName = result.data[0].bankName;\r\n                    this.purpose = result.data[0].particulars;\r\n                    this.employeeId = result.data[0].userId;\r\n                    this.employeeName = result.data[0].name;\r\n                    if (result.data[0].credit) {\r\n                        this.amount = result.data[0].credit;\r\n                    } else {\r\n                        this.amount = result.data[0].debit;\r\n                    }\r\n                    this.table = true;\r\n                }\r\n            },\r\n            error1 => {\r\n                Swal.fire({\r\n                    title: 'Oops!',\r\n                    text: 'Try again!',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    showSearch() {\r\n        this.cheque = false;\r\n        this.search = true;\r\n        this.cash = false;\r\n    }\r\n}\r\n","import { MiscellaneousService } from './miscellaneous.service';\r\n\r\nexport const services = [MiscellaneousService];\r\n\r\nexport * from './miscellaneous.service';\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class MiscellaneousService {\r\n    constructor(private http: HttpClient) {}\r\n    getBankList(): Observable<any> {\r\n        const url = 'http://206.189.129.219:8080/getBankList';\r\n        const headers = new HttpHeaders();\r\n        headers.append('Access-Control-Allow-Origin', '*');\r\n        headers.append('Access-Control-Allow-Methods', 'POST,GET,OPTIONS,PUT');\r\n        headers.append('Accept', 'application/json');\r\n        headers.append('content-type', 'application/json');\r\n        return this.http.get<any>(url, { headers });\r\n    }\r\n    searchCheque(text: any): Observable<any> {\r\n        console.log(text);\r\n        const url = 'http://206.189.129.219:8080/searchCheque';\r\n        const data = {\r\n            chequeNo: text,\r\n        };\r\n        return this.http.post<any>(url, data);\r\n    }\r\n    transferCash(data: any): Observable<any> {\r\n        console.log(data);\r\n        const url = 'http://206.189.129.219:8080/transferCash';\r\n        return this.http.post<any>(url, data);\r\n    }\r\n    withdrawCash(data: any): Observable<any> {\r\n        console.log(data);\r\n        const url = 'http://206.189.129.219:8080/withdrawCash';\r\n        return this.http.post<any>(url, data);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}